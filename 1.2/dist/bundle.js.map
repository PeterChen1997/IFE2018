{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/style-loader/lib/addStyles.js","webpack:///./node_modules/css-loader/lib/css-base.js","webpack:///./node_modules/san-router/dist/san-router.source.js","webpack:///./src/main.css","webpack:///./src/main.css?e0d3","webpack:///./node_modules/process/browser.js","webpack:///./node_modules/setimmediate/setImmediate.js","webpack:///./node_modules/timers-browserify/main.js","webpack:///./node_modules/san/dist/san.dev.js","webpack:///./src/HelloWorld.san?64de","webpack:///HelloWorld.san","webpack:///./node_modules/style-loader/lib/urls.js","webpack:///./src/HelloWorld.san?1b2b","webpack:///./src/HelloWorld.san?3376","webpack:///./src/HelloWorld.san","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","g","this","Function","eval","e","window","fn","memo","stylesInDom","isOldIE","document","all","atob","apply","arguments","getElement","target","styleTarget","querySelector","HTMLIFrameElement","contentDocument","head","singleton","singletonCounter","stylesInsertedAtTop","fixUrls","addStylesToDom","styles","options","length","item","domStyle","id","refs","j","parts","push","addStyle","listToStyles","list","newStyles","base","part","css","media","sourceMap","insertStyleElement","style","insertInto","Error","lastStyleElementInsertedAtTop","insertAt","nextSibling","insertBefore","appendChild","firstChild","before","removeStyleElement","parentNode","removeChild","idx","indexOf","splice","createStyleElement","createElement","undefined","attrs","type","addAttrs","el","keys","forEach","key","setAttribute","obj","update","remove","result","transform","styleIndex","applyToSingletonTag","bind","URL","createObjectURL","revokeObjectURL","Blob","btoa","link","rel","createLinkElement","autoFixUrls","convertToAbsoluteUrls","unescape","encodeURIComponent","JSON","stringify","blob","oldSrc","href","styleSheet","cssText","createTextNode","newObj","DEBUG","newList","mayRemove","textStore","replaceText","index","replacement","filter","Boolean","join","cssNode","childNodes","useSourceMap","toString","map","content","cssMapping","sourceMapping","sourceURLs","sources","source","sourceRoot","concat","cssWithMappingToString","mediaQuery","alreadyImportedModules","factory","sourceLoc","_parseUrl2","baseLoc","sourcePath","path","sourceSegs","split","baseSegs","pop","seg","unshift","queryString","_parseUrl","default","url","hash","params","query","hashStart","slice","queryStart","querySeg","equalIndex","decodeURIComponent","EventTarget","instance","Constructor","TypeError","_classCallCheck","on","_eventListeners","un","listeners","len","fire","args","_main","_resolveUrl","_resolveUrl2","template","clicker","data","router","locator","redirect","replace","preventDefault","returnValue","computed","current","mode","_eventTarget2","_interopRequireDefault","getLocation","location","Locator","_EventTarget","_this","self","ReferenceError","_possibleConstructorReturn","referrer","hashChangeHandler","subClass","superClass","create","constructor","writable","setPrototypeOf","__proto__","_inherits","start","addEventListener","attachEvent","stop","removeEventListener","detachEvent","force","isChanged","silent","reload","pathname","search","popstateHandler","history","pushState","isSupport","Link","Router","version","_hash2","_html2","_link2","_elementSelector2","routeID","isComponent","C","nodeType","_type","_ref$mode","routes","routeAlives","locatorRedirectHandler","routeItem","_i","match","rule","exec","config","state","listenerEvent","resume","next","suspend","doNext","routeAction","doRoute","component","dispose","setMode","listen","listener","unlisten","_this2","isUpdateAlive","routeAlive","set","_callHook","Component","attachCmpt","then","Cmpt","handler","targetEl","attach","add","_config$target","regText","RegExp","isStarted","toLowerCase","restart","_typeof","Symbol","iterator","selector","getElementById","hmr","locals","cachedSetTimeout","cachedClearTimeout","process","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","marker","runClearTimeout","Item","array","noop","nextTick","Array","title","browser","env","argv","versions","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","binding","cwd","chdir","dir","umask","global","setImmediate","registerImmediate","html","channel","messagePrefix","onGlobalMessage","nextHandle","tasksByHandle","currentlyRunningATask","doc","attachTo","getPrototypeOf","handle","runIfPresent","postMessage","importScripts","postMessageIsAsynchronous","oldOnMessage","onmessage","canUsePostMessage","MessageChannel","port1","event","port2","documentElement","script","onreadystatechange","Math","random","callback","task","clearImmediate","scope","Timeout","clearFn","_id","_clearFn","setInterval","clearInterval","close","unref","ref","enroll","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","active","_onTimeout","root","guidIndex","guidPrefix","Date","getTime","guid","empty","extend","inherits","subClassProto","F","each","func","thisArg","nativeBind","eventName","capture","splitStr2Obj","svgTags","createEl","tagName","createElementNS","removeEl","nextHandler","nextTasks","isNativePromise","Promise","test","tasks","port","resolve","ieVersionMatch","navigator","userAgent","ie","ieOldThan9","trigger","createEvent","initEvent","dispatchEvent","activeElement","autoCloseTags","ANONYMOUS_CLASS_NAME","getDataType","createChainableChecker","validate","chainedChecker","isRequired","checkType","dataName","componentName","fullDataName","dataValue","dataType","createPrimaryTypeChecker","DataTypes","Walker","createANode","textExpr","directives","props","events","children","kebab2camel","alpha","toUpperCase","any","string","number","bool","symbol","arrayOf","arrayItemChecker","instanceOf","expectedClass","dataValueClassName","expectedClassName","shape","shapeTypes","shapeKeyName","checker","oneOf","expectedEnumValues","oneOfType","expectedEnumOfTypeValues","objectOf","typeChecker","dataKeyName","exact","secret","dataValueType","allKeys","currentCode","charCode","cut","end","go","distance","nextCode","charCodeAt","goUntil","code","reg","lastIndex","ExprType","STRING","NUMBER","BOOL","ACCESSOR","INTERP","CALL","TEXT","BINARY","UNARY","TERTIARY","createAccessor","paths","readIdent","walker","readTertiaryExpr","conditional","readLogicalORExpr","expr","readLogicalANDExpr","readRelationalExpr","operator","segs","readEqualityExpr","yesExpr","readAccessor","firstSeg","accessorLoop","readUnaryExpr","startCode","startIndex","walkLoop","literal","readString","readNumber","readParenthesizedExpr","readMultiplicativeExpr","readAdditiveExpr","parseExpr","raw","readCall","defaultArgs","ident","parseCall","parseInterp","interp","filters","callExpr","original","regexpLiteral","parseText","delimiters","exprMatch","exprStartReg","beforeIndex","pushStringToSeg","text","String","fromCharCode","parseInt","directiveParsers","for","if","elif","else","transition","postProp","prop","integrateAttr","aNode","realName","prefix","prefixIndex","colonIndex","modifier","parser","parseDirective","integrateProp","vars","xMatch","x","getXPath","stack","currentTagName","parseTemplate","trimWhitespace","rootNode","tagMatch","tagReg","attrReg","currentNode","stackIndex","beforeLastIndex","tagEnd","pushTextNode","closeIndex","aElement","tagClose","nextCharCode","attrMatch","parentChildrenLen","parentChild","elses","tbodyNode","DEFAULT_FILTERS","_class","_style","_sep","sep","evalExpr","owner","dataCache","leftValue","rightValue","filterName","evalArgs","buf","dataCacheSource","dataCacheClearly","clear","changeExprCompareExprs","changeExpr","exprs","changeExprCompare","changePaths","changeLen","pathExpr","max","filterResult","DataChangeType","lifeCycleOwnIs","LifeCycle","compiled","is","inited","painting","created","attached","leaving","detached","disposed","NodeType","IF","FOR","ELEM","CMPT","SLOT","TPL","getANodeProp","hotspot","HTML_ATTR_PROP_MAP","readonly","cellpadding","cellspacing","colspan","rowspan","valign","usemap","frameborder","defaultElementPropHandler","element","propName","output","bindInfo","svgPropHandler","boolPropHandler","defaultElementPropHandlers","class","className","slot","disabled","autofocus","required","draggable","analInputChecker","checkbox","radio","a","b","elementPropHandlers","input","multiple","checked","oper","bindValue","bindType","bindChecked","hintExpr","analInputCheckedState","option","parentSelect","parent","selectValue","isOptionSelected","selected","select","getPropHandler","attrName","tagPropHandlers","propHandler","isDataChangeByElement","change","changeTarget","findMethod","nameExpr","method","Data","immutableSet","exprPaths","isNaN","eventDeclarationListener","eventBind","isComponentEvent","$event","checkDataTypes","setTypeChecker","silence","quiet","callee","exprRaw","merge","oldValue","newArray","deleteCount","insertions","shift","removeAt","hotTags","isBrowser","parentEl","beforeEl","warnSetHTML","noSetHTML","message","console","warn","getNodePath","node","nodePaths","nodeParent","anode","subTag","TextNode","reverseWalker","sel","goNext","createComment","tempFlag","insertAdjacentHTML","_prev","textUpdateProp","textContent","changesIsInDataRef","changes","dataRef","overview","extOverview","wildOverview","DOMChildrenWalker","child","Element","lifeCycle","_elFns","parentComponent","elementInitTagName","_toPhase","reverseElementChildren","_attached","nodeDispose","_ondisposed","createReverseNode","parentIsComponent","childOwner","childScope","IfNode","ForNode","SlotNode","TemplateNode","ComponentType","getComponentType","elementDisposeChildren","noDetach","noTransition","elementUpdateChildren","_update","elementOwnToPhase","createNode","nodeOwnOnlyChildrenAttach","aNodeChildren","genElementChildren","realANode","nameBind","isNamed","givenChildren","givenSlots","named","noname","isInserted","me","initData","varItem","isScoped","slotChildren","aNodeChild","cloneDirectives","excludes","nodeOwnSimpleDispose","nodeOwnCreateStump","ForItemData","forElement","directive","createForDirectiveChild","itemScope","itemANode","param","_create","rinseCondANode","cond","elseIndex","elseANode","handleProp","startRemoveEl","removeTarget","elementOwnAttach","detach","elementOwnDetach","elementOwnDispose","elementOwnCreate","_onEl","elementOwnOnEl","_doneLeave","leaveDispose","elementDispose","disposeNoDetach","disposeNoTransition","dynamicProps","htmlDirective","innerHTML","elementOwnAttached","isFromOuter","_notifyNeedReload","scopedChanges","relation","exprResolve","resolveItem","resolvedPaths","originalUpdate","oldChildrenLen","childrenChanges","pushToChildrenChanges","isChildrenRebuild","disposeChildren","parentFirstChild","parentLastChild","lastChild","isOnlyParentChild","newLen","cIndex","cLen","forLen","changeIndex","_splice","_set","changeStart","insertionsLen","newCount","indexChange","deleteLen","spliceArgs","newChildrenLen","lengthChange","_doCreateAndUpdate","doCreateAndUpdate","violentClear","disposedChildCount","disposeChild","childDisposed","replaceNode","cloneNode","replaceChild","nextChild","childANode","newChild","san4devtool","emptyPropWhenCreate","sourceNode","elementAttach","_contentReady","elementGetTransition","givenANode","elementLeave","leave","warnEventListenMethod","valid","inputOnCompositionEnd","composing","inputOnCompositionStart","xPropOutputer","xProp","inputXPropOutputer","outputer","xProps","CompositionEvent","nativeEvents","native","_isInitFromEl","enter","emitDevtool","arg","debug","__san_devtool__","clazz","messages","compileComponent","ComponentClass","recordHotspotData","notContentData","analyseANodeHotspot","analyseExprDataHotspot","idProp","valueProp","componentPreheat","protoANode","givenNamedSlotBinds","binds","stumpMatch","stumpText","_createGivenSlots","dataTypes","dataTypeChecker","dataTypeName","createDataTypesChecker","computedDeps","_calcComputed","dataChanger","_dataChanger","defineComponent","proto","components","componentClass","_cmptReady","tpl","componentPropExtra","extra","analyseExprs","main","slotBind","givenSlotInited","slotName","declaration","nameListeners","computedExpr","watch","dispatch","receiver","childrenTraversal","refTarget","elementTraversal","needReloadForSlot","bindItem","setExpr","updateExpr","_repaintChildren","slotChildrenLen","slotChild","dataChanges","_updateBindxOwner","updateScopeExpr","dataExpr","san","baseUrl","protocol","host","currentDir","fullMatch","origUrl","newUrl","unquotedOrigUrl","trim","$1","names","mappings","file","sourcesContent","__san_script__","__san_template__","__san_styles__","__san_proto__","__san_exports__","_HelloWorld","_sanRouter"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 16);\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target) {\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target) {\n                // If passing function in options, then use it for resolve \"head\" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector(\"#foo\").shadowRoot }\n                // }\n                if (typeof target === 'function') {\n                        return target();\n                }\n                if (typeof memo[target] === \"undefined\") {\n\t\t\tvar styleTarget = getTarget.call(this, target);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertInto + \" \" + options.insertAt.before);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = options.transform(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"san-router\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"san-router\"] = factory();\n\telse\n\t\troot[\"san-router\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/dist\";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 6);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports['default'] = resolveURL;\n\nvar _parseUrl = __webpack_require__(1);\n\nvar _parseUrl2 = _interopRequireDefault(_parseUrl);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n/**\n * 将 URL 中相对路径部分展开\n *\n * @param {string} source 要展开的url\n * @param {string} base 当前所属环境的url\n * @return {string}\n */\nfunction resolveURL(source, base) {\n    var sourceLoc = (0, _parseUrl2['default'])(source);\n    var baseLoc = (0, _parseUrl2['default'])(base);\n\n    var sourcePath = sourceLoc.path;\n    if (sourcePath.indexOf('/') === 0) {\n        return source;\n    }\n\n    var sourceSegs = sourcePath.split('/');\n    var baseSegs = baseLoc.path.split('/');\n    baseSegs.pop();\n\n    for (var i = 0; i < sourceSegs.length; i++) {\n        var seg = sourceSegs[i];\n        switch (seg) {\n            case '..':\n                baseSegs.pop();\n                break;\n            case '.':\n                break;\n            default:\n                baseSegs.push(seg);\n        }\n    }\n\n    if (baseSegs[0] !== '') {\n        baseSegs.unshift('');\n    }\n\n    return baseSegs.join('/') + (sourceLoc.queryString ? '?' + sourceLoc.queryString : '');\n} /**\n   * san-router\n   * Copyright 2017 Baidu Inc. All rights reserved.\n   *\n   * @file 将 URL 中相对路径部分展开\n   * @author errorrik\n   */\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports['default'] = parseURL;\n/**\n * san-router\n * Copyright 2017 Baidu Inc. All rights reserved.\n *\n * @file 解析URL\n * @author errorrik\n */\n\n/**\n * 解析URL，返回包含path、query、queryString的对象\n *\n * @param {string} url 要解析的url\n * @return {Object}\n */\nfunction parseURL(url) {\n    var result = {\n        hash: '',\n        queryString: '',\n        params: {},\n        query: {},\n        path: url\n    };\n\n    // parse hash\n    var hashStart = result.path.indexOf('#');\n    if (hashStart >= 0) {\n        result.hash = result.path.slice(hashStart + 1);\n        result.path = result.path.slice(0, hashStart);\n    }\n\n    // parse query\n    var query = result.query;\n    var queryStart = result.path.indexOf('?');\n    if (queryStart >= 0) {\n        result.queryString = result.path.slice(queryStart + 1);\n        result.path = result.path.slice(0, queryStart);\n\n        result.queryString.split('&').forEach(function (querySeg) {\n            // 考虑到有可能因为未处理转义问题，\n            // 导致value中存在**=**字符，因此不使用`split`函数\n            var equalIndex = querySeg.indexOf('=');\n            var value = '';\n            if (equalIndex > 0) {\n                value = querySeg.slice(equalIndex + 1);\n                querySeg = querySeg.slice(0, equalIndex);\n            }\n\n            var key = decodeURIComponent(querySeg);\n            value = decodeURIComponent(value);\n\n            // 已经存在这个参数，且新的值不为空时，把原来的值变成数组\n            if (query.hasOwnProperty(key)) {\n                /* eslint-disable */\n                query[key] = [].concat(query[key], value);\n                /* eslint-disable */\n            } else {\n                query[key] = value;\n            }\n        });\n    }\n\n    return result;\n}\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * san-router\n * Copyright 2017 Baidu Inc. All rights reserved.\n *\n * @file 提供事件相关操作的基类\n * @author otakustay, errorrik\n */\n\nvar EventTarget = function () {\n    function EventTarget() {\n        _classCallCheck(this, EventTarget);\n    }\n\n    /**\n     * 注册一个事件处理函数\n     *\n     * @param {string} type 事件的类型\n     * @param {Function | boolean} fn 事件的处理函数\n     */\n    EventTarget.prototype.on = function on(type, fn) {\n        if (typeof fn !== 'function') {\n            return;\n        }\n\n        if (!this._eventListeners) {\n            this._eventListeners = {};\n        }\n\n        if (!this._eventListeners[type]) {\n            this._eventListeners[type] = [];\n        }\n\n        this._eventListeners[type].push(fn);\n    };\n\n    /**\n     * 注销一个事件处理函数\n     *\n     * @param {string} type 事件的类型，如果值为`*`仅会注销通过`*`为类型注册的事件，并不会将所有事件注销\n     * @param {Function} [fn] 事件的处理函数，无此参数则注销`type`指定类型的所有事件处理函数\n     */\n\n\n    EventTarget.prototype.un = function un(type, fn) {\n        if (!this._eventListeners || !this._eventListeners[type]) {\n            return;\n        }\n\n        if (!fn) {\n            this._eventListeners[type] = [];\n        } else {\n            var listeners = this._eventListeners[type];\n            var len = listeners.length;\n\n            while (len--) {\n                if (listeners[len] === fn) {\n                    listeners.splice(len, 1);\n                }\n            }\n        }\n    };\n\n    /**\n     * 触发指定类型的事件\n     *\n     * @param {string} type 事件类型\n     * @param {*} [args] 事件对象\n     */\n\n\n    EventTarget.prototype.fire = function fire(type, args) {\n        if (!type) {\n            throw new Error('No event type specified');\n        }\n\n        var listeners = this._eventListeners && this._eventListeners[type];\n        if (listeners) {\n            for (var i = 0; i < listeners.length; i++) {\n                listeners[i](args);\n            }\n        }\n    };\n\n    return EventTarget;\n}();\n\nexports['default'] = EventTarget;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _main = __webpack_require__(6);\n\nvar _resolveUrl = __webpack_require__(0);\n\nvar _resolveUrl2 = _interopRequireDefault(_resolveUrl);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n/**\n * san-router\n * Copyright 2017 Baidu Inc. All rights reserved.\n *\n * @file 路由链接的 San 组件\n * @author errorrik\n */\n\nexports['default'] = {\n    template: '<a href=\"{{href}}\"\\n        onclick=\"return false;\"\\n        on-click=\"clicker($event)\"\\n        target=\"{{target}}\"\\n        class=\"{{class}}\"\\n        style=\"{{style}}\"\\n        >\\n        <slot></slot>\\n    </a>',\n\n    clicker: function clicker(e) {\n        var href = this.data.get('href');\n\n        if (typeof href === 'string') {\n            _main.router.locator.redirect(href.replace(/^#/, ''));\n        }\n\n        if (e.preventDefault) {\n            e.preventDefault();\n        } else {\n            e.returnValue = false;\n        }\n    },\n\n\n    computed: {\n        href: function href() {\n            var url = this.data.get('to');\n            if (typeof url !== 'string') {\n                return;\n            }\n\n            var href = (0, _resolveUrl2['default'])(url, _main.router.locator.current);\n            if (_main.router.mode === 'hash') {\n                href = '#' + href;\n            }\n\n            return href;\n        }\n    }\n};\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _eventTarget = __webpack_require__(2);\n\nvar _eventTarget2 = _interopRequireDefault(_eventTarget);\n\nvar _resolveUrl = __webpack_require__(0);\n\nvar _resolveUrl2 = _interopRequireDefault(_resolveUrl);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * san-router\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright 2017 Baidu Inc. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file hash 模式地址监听器\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @author errorrik\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * 获取当前URL\n *\n * @return {string}\n */\nfunction getLocation() {\n    // Firefox下`location.hash`存在自动解码的情况，\n    // 比如hash的值是**abc%3def**，\n    // 在Firefox下获取会成为**abc=def**\n    // 为了避免这一情况，需要从`location.href`中分解\n    var index = location.href.indexOf('#');\n    var url = index < 0 ? '/' : location.href.slice(index + 1) || '/';\n\n    return url;\n}\n\n/**\n * hash 模式地址监听器\n *\n * @class\n */\n\nvar Locator = function (_EventTarget) {\n    _inherits(Locator, _EventTarget);\n\n    /**\n     * 构造函数\n     */\n    function Locator() {\n        _classCallCheck(this, Locator);\n\n        var _this = _possibleConstructorReturn(this, _EventTarget.call(this));\n\n        _this.current = getLocation();\n        _this.referrer = '';\n\n        _this.hashChangeHandler = function () {\n            _this.redirect(getLocation());\n        };\n        return _this;\n    }\n\n    /**\n     * 开始监听 url 变化\n     */\n\n\n    Locator.prototype.start = function start() {\n        if (window.addEventListener) {\n            window.addEventListener('hashchange', this.hashChangeHandler, false);\n        }\n\n        if (window.attachEvent) {\n            window.attachEvent('onhashchange', this.hashChangeHandler);\n        }\n    };\n\n    /**\n     * 停止监听\n     */\n\n\n    Locator.prototype.stop = function stop() {\n        if (window.removeEventListener) {\n            window.removeEventListener('hashchange', this.hashChangeHandler, false);\n        }\n\n        if (window.detachEvent) {\n            window.detachEvent('onhashchange', this.hashChangeHandler);\n        }\n    };\n\n    /**\n     * 重定向\n     *\n     * @param {string} url 重定向的地址\n     * @param {Object?} options 重定向的行为配置\n     * @param {boolean?} options.force 是否强制刷新\n     */\n\n\n    Locator.prototype.redirect = function redirect(url) {\n        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : { force: false };\n\n        url = (0, _resolveUrl2['default'])(url, this.current);\n        var referrer = this.current;\n\n        var isChanged = url !== referrer;\n        if (isChanged) {\n            this.referrer = referrer;\n            this.current = url;\n            location.hash = url;\n        } else {\n            referrer = this.referrer;\n        }\n\n        if ((isChanged || options.force) && !options.silent) {\n            this.fire('redirect', { url: url, referrer: referrer });\n        }\n    };\n\n    /**\n     * 刷新当前 url\n     */\n\n\n    Locator.prototype.reload = function reload() {\n        this.redirect(this.current, { force: true });\n    };\n\n    return Locator;\n}(_eventTarget2['default']);\n\nexports['default'] = Locator;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _eventTarget = __webpack_require__(2);\n\nvar _eventTarget2 = _interopRequireDefault(_eventTarget);\n\nvar _resolveUrl = __webpack_require__(0);\n\nvar _resolveUrl2 = _interopRequireDefault(_resolveUrl);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * san-router\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright 2017 Baidu Inc. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file html5 模式地址监听器\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @author errorrik\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * 获取当前URL\n *\n * @return {string}\n */\nfunction getLocation() {\n    return location.pathname + location.search;\n}\n\n/**\n * html5 模式地址监听器\n *\n * @class\n */\n\nvar Locator = function (_EventTarget) {\n    _inherits(Locator, _EventTarget);\n\n    /**\n     * 构造函数\n     */\n    function Locator() {\n        _classCallCheck(this, Locator);\n\n        var _this = _possibleConstructorReturn(this, _EventTarget.call(this));\n\n        _this.current = getLocation();\n        _this.referrer = '';\n\n        _this.popstateHandler = function () {\n            _this.referrer = _this.current;\n            _this.current = getLocation();\n\n            _this.fire('redirect', {\n                url: _this.current,\n                referrer: _this.referrer\n            });\n        };\n        return _this;\n    }\n\n    /**\n     * 开始监听 url 变化\n     */\n\n\n    Locator.prototype.start = function start() {\n        window.addEventListener('popstate', this.popstateHandler);\n    };\n\n    /**\n     * 停止监听\n     */\n\n\n    Locator.prototype.stop = function stop() {\n        window.removeEventListener('popstate', this.popstateHandler);\n    };\n\n    /**\n     * 重定向\n     *\n     * @param {string} url 重定向的地址\n     * @param {Object?} options 重定向的行为配置\n     * @param {boolean?} options.force 是否强制刷新\n     */\n\n\n    Locator.prototype.redirect = function redirect(url) {\n        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : { force: false };\n\n        url = (0, _resolveUrl2['default'])(url, this.current);\n        var referrer = this.current;\n\n        var isChanged = url !== referrer;\n\n        if (isChanged) {\n            this.referrer = referrer;\n            this.current = url;\n\n            history.pushState({}, '', url);\n        }\n\n        if ((isChanged || options.force) && !options.silent) {\n            this.fire('redirect', { url: url, referrer: referrer });\n        }\n    };\n\n    /**\n     * 刷新当前 url\n     */\n\n\n    Locator.prototype.reload = function reload() {\n        this.fire('redirect', {\n            url: this.current,\n            referrer: this.referrer\n        });\n    };\n\n    return Locator;\n}(_eventTarget2['default']);\n\nexports['default'] = Locator;\n\n\nLocator.isSupport = 'pushState' in window.history;\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.Link = exports.router = exports.Router = exports.version = undefined;\n\nvar _hash = __webpack_require__(4);\n\nvar _hash2 = _interopRequireDefault(_hash);\n\nvar _html = __webpack_require__(5);\n\nvar _html2 = _interopRequireDefault(_html);\n\nvar _parseUrl = __webpack_require__(1);\n\nvar _parseUrl2 = _interopRequireDefault(_parseUrl);\n\nvar _link = __webpack_require__(3);\n\nvar _link2 = _interopRequireDefault(_link);\n\nvar _elementSelector = __webpack_require__(7);\n\nvar _elementSelector2 = _interopRequireDefault(_elementSelector);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } } /**\n                                                                                                                                                           * san-router\n                                                                                                                                                           * Copyright 2017 Baidu Inc. All rights reserved.\n                                                                                                                                                           *\n                                                                                                                                                           * @file 主模块\n                                                                                                                                                           * @author errorrik\n                                                                                                                                                           */\n\nvar routeID = 0x5942b;\nvar guid = function guid() {\n    return (++routeID).toString();\n};\n\nfunction isComponent(C) {\n    return C.prototype && (C.prototype.nodeType === 5 || C.prototype._type === 'san-cmpt');\n}\n\n/**\n * 版本号\n *\n * @type {string}\n */\nvar version = exports.version = '1.2.0';\n\n/**\n * 路由器类\n *\n * @class\n */\n\nvar Router = exports.Router = function () {\n\n    /**\n     * 构造函数\n     *\n     * @param {Object?} options 初始化参数\n     * @param {string?} options.mode 路由模式，hash | html5\n     */\n    function Router() {\n        var _this = this;\n\n        var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n            _ref$mode = _ref.mode,\n            mode = _ref$mode === undefined ? 'hash' : _ref$mode;\n\n        _classCallCheck(this, Router);\n\n        this.routes = [];\n        this.routeAlives = [];\n        this.listeners = [];\n\n        /**\n         * locator redirect 事件监听函数\n         *\n         * @param {Object} e locator事件对象\n         */\n        this.locatorRedirectHandler = function (e) {\n            var url = (0, _parseUrl2['default'])(e.url);\n            var routeItem = void 0;\n\n            for (var _i = 0; _i < _this.routes.length; _i++) {\n                var item = _this.routes[_i];\n                var match = item.rule.exec(url.path);\n\n                if (match) {\n                    routeItem = item;\n\n                    // fill params\n                    var keys = item.keys || [];\n                    for (var j = 1; j < match.length; j++) {\n                        var key = keys[j] || j;\n                        var value = match[j];\n                        url.query[key] = value;\n                        url.params[key] = value;\n                    }\n\n                    // fill referrer\n                    url.referrer = e.referrer;\n                    url.config = item.config;\n\n                    break;\n                }\n            }\n\n            var i = 0;\n            var state = 1;\n\n            /**\n             * listener 事件对象\n             *\n             * @type {Object}\n             */\n            var listenerEvent = {\n                hash: url.hash,\n                queryString: url.queryString,\n                query: url.query,\n                path: url.path,\n                referrer: url.referrer,\n                config: url.config,\n                resume: next,\n                suspend: function suspend() {\n                    state = 0;\n                },\n                stop: function stop() {\n                    state = -1;\n                }\n            };\n\n            /**\n             * 尝试运行下一个listener\n             *\n             * @inner\n             */\n            var doNext = function doNext() {\n                if (state > 0) {\n                    if (i < _this.listeners.length) {\n                        _this.listeners[i].call(_this, listenerEvent, url.config);\n                        if (state > 0) {\n                            next();\n                        }\n                    } else {\n                        routeAction();\n                    }\n                }\n            };\n\n            /**\n             * 运行下一个listener\n             *\n             * @inner\n             */\n            function next() {\n                state = 1;\n                i++;\n                doNext();\n            }\n\n            /**\n             * 运行路由行为\n             *\n             * @inner\n             */\n            var routeAction = function routeAction() {\n                if (routeItem) {\n                    _this.doRoute(routeItem, url);\n                } else {\n                    var len = _this.routeAlives.length;\n                    while (len--) {\n                        _this.routeAlives[len].component.dispose();\n                        _this.routeAlives.splice(len, 1);\n                    }\n                }\n            };\n\n            doNext();\n        };\n\n        this.setMode(mode);\n    }\n\n    /**\n     * 添加路由监听器\n     *\n     * @param {function(e, config)} listener 监听器\n     */\n\n\n    Router.prototype.listen = function listen(listener) {\n        this.listeners.push(listener);\n    };\n\n    /**\n     * 移除路由监听器\n     *\n     * @param {Function} listener 监听器\n     */\n\n\n    Router.prototype.unlisten = function unlisten(listener) {\n        var len = this.listeners.length;\n        while (len--) {\n            if (this.listeners[len] === listener) {\n                this.listeners.splice(len, 1);\n            }\n        }\n    };\n\n    /**\n     * 执行路由\n     *\n     * @private\n     * @param {Object} routeItem 路由项\n     * @param {Object} e 路由信息\n     */\n\n\n    Router.prototype.doRoute = function doRoute(routeItem, e) {\n        var _this2 = this;\n\n        var isUpdateAlive = false;\n        var len = this.routeAlives.length;\n\n        while (len--) {\n            var routeAlive = this.routeAlives[len];\n\n            if (routeAlive.id === routeItem.id) {\n                routeAlive.component.data.set('route', e);\n                routeAlive.component._callHook('route');\n                isUpdateAlive = true;\n            } else {\n                routeAlive.component.dispose();\n                this.routeAlives.splice(len, 1);\n            }\n        }\n\n        if (!isUpdateAlive) {\n            if (routeItem.Component) {\n                if (isComponent(routeItem.Component)) {\n                    this.attachCmpt(routeItem, e);\n                } else {\n                    routeItem.Component().then(function (Cmpt) {\n                        // eslint-disable-line\n                        if (isComponent(Cmpt)) {\n                            routeItem.Component = Cmpt;\n                        } else if (Cmpt.__esModule && isComponent(Cmpt['default'])) {\n                            routeItem.Component = Cmpt['default'];\n                        }\n                        _this2.attachCmpt(routeItem, e);\n                    });\n                }\n            } else {\n                routeItem.handler.call(this, e);\n            }\n        }\n    };\n\n    Router.prototype.attachCmpt = function attachCmpt(routeItem, e) {\n        var component = new routeItem.Component();\n        component.data.set('route', e);\n        component._callHook('route');\n\n        var target = routeItem.target;\n        var targetEl = (0, _elementSelector2['default'])(target);\n\n        if (!targetEl) {\n            throw new Error('[SAN-ROUTER ERROR] ' + 'Attach failed, target element \"' + routeItem.target + '\" is not found.');\n        }\n\n        component.attach(targetEl);\n\n        this.routeAlives.push({\n            component: component,\n            id: routeItem.id\n        });\n    };\n\n    /**\n     * 添加路由项\n     * 当规则匹配时，路由将优先将Component渲染到target中。如果没有包含Component，则执行handler函数\n     *\n     * @private\n     * @param {Object} config 路由项配置\n     * @param {string|RegExp} config.rule 路由规则\n     * @param {Function?} config.handler 路由函数\n     * @param {Function?} config.Component 路由组件\n     * @param {string} config.target 路由组件要渲染到的目标位置\n     * @return {Object} san-router 实例\n     */\n\n\n    Router.prototype.add = function add(config) {\n        var rule = config.rule,\n            handler = config.handler,\n            _config$target = config.target,\n            target = _config$target === undefined ? '#main' : _config$target,\n            Component = config.Component;\n\n        var keys = [''];\n\n        if (typeof rule === 'string') {\n            // 没用path-to-regexp，暂时不提供这么多功能支持\n            var regText = rule.replace(/\\/:([a-z0-9_-]+)(?=\\/|$)/ig, function (match, key) {\n                keys.push(key);\n                return '/([^/\\\\s]+)';\n            });\n\n            rule = new RegExp('^' + regText + '$', 'i');\n        }\n\n        if (!(rule instanceof RegExp)) {\n            throw new Error('[SAN-ROUTER ERROR] Rule must be string or RegExp!');\n        }\n\n        var id = guid();\n        this.routes.push({ id: id, rule: rule, handler: handler, keys: keys, target: target, Component: Component, config: config });\n\n        return this;\n    };\n\n    /**\n     * 启动路由功能\n     *\n     * @return {Object} san-router 实例\n     */\n\n\n    Router.prototype.start = function start() {\n        if (!this.isStarted) {\n            this.isStarted = true;\n            this.locator.on('redirect', this.locatorRedirectHandler);\n            this.locator.start();\n            this.locator.reload();\n        }\n\n        return this;\n    };\n\n    /**\n     * 停止路由功能\n     *\n     * @return {Object} san-router 实例\n     */\n\n\n    Router.prototype.stop = function stop() {\n        this.locator.un('redirect', this.locatorRedirectHandler);\n        this.locator.stop();\n        this.isStarted = false;\n\n        return this;\n    };\n\n    /**\n     * 设置路由模式\n     *\n     * @param {string} mode 路由模式，hash | html5\n     * @return {Object} san-router 实例\n     */\n\n\n    Router.prototype.setMode = function setMode(mode) {\n        mode = mode.toLowerCase();\n        if (this.mode === mode) {\n            return;\n        }\n\n        this.mode = mode;\n\n        var restart = false;\n        if (this.isStarted) {\n            this.stop();\n            restart = true;\n        }\n\n        switch (mode) {\n            case 'hash':\n                this.locator = new _hash2['default']();\n                break;\n            case 'html5':\n                this.locator = new _html2['default']();\n        }\n\n        if (restart) {\n            this.start();\n        }\n\n        return this;\n    };\n\n    return Router;\n}();\n\n/**\n * 默认的路由器实例\n *\n * @type {Router}\n */\n\n\nvar router = exports.router = new Router();\n\n/**\n * 路由链接的 San 组件\n *\n * @class\n */\nexports.Link = _link2['default'];\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports['default'] = elementSelector;\n/*\n*\n* @file 选择器\n* @author vincent lau/413893093@qq.com\n*/\n\n/**\n * 元素选择器\n *\n * @param {string|Element} selector 选择器\n * @returns {Element}\n */\nfunction elementSelector(selector) {\n    switch (typeof selector === 'undefined' ? 'undefined' : _typeof(selector)) {\n        case 'object':\n            return selector;\n\n        case 'string':\n            if (document.querySelector) {\n                return document.querySelector(selector);\n            }\n\n            return document.getElementById(selector.replace(/#/i, ''));\n    }\n}\n\n/***/ }\n/******/ ]);\n});","exports = module.exports = require(\"../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"h3 {\\n  color: saddlebrown;\\n}\", \"\"]);\n\n// exports\n","\nvar content = require(\"!!../node_modules/css-loader/index.js!./main.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../node_modules/css-loader/index.js!./main.css\", function() {\n\t\tvar newContent = require(\"!!../node_modules/css-loader/index.js!./main.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n","var scope = (typeof global !== \"undefined\" && global) ||\n            (typeof self !== \"undefined\" && self) ||\n            window;\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(scope, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\nrequire(\"setimmediate\");\n// On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n","/**\n * San\n * Copyright 2016 Baidu Inc. All rights reserved.\n *\n * @file 主文件\n * @author errorrik(errorrik@gmail.com)\n *         otakustay(otakustay@gmail.com)\n *         junmer(junmer@foxmail.com)\n */\n\n(function (root) {\n    // 人工调整打包代码顺序，通过注释手工写一些依赖\n//     // require('./util/guid');\n//     // require('./util/empty');\n//     // require('./util/extend');\n//     // require('./util/inherits');\n//     // require('./util/each');\n//     // require('./util/contains');\n//     // require('./util/bind');\n//     // require('./browser/on');\n//     // require('./browser/un');\n//     // require('./browser/svg-tags');\n//     // require('./browser/create-el');\n//     // require('./browser/remove-el');\n//     // require('./util/next-tick');\n//     // require('./browser/ie');\n//     // require('./browser/ie-old-than-9');\n//     // require('./browser/input-event-compatible');\n//     // require('./browser/auto-close-tags');\n//     // require('./util/data-types.js');\n//     // require('./util/create-data-types-checker.js');\n//     // require('./parser/walker');\n//     // require('./parser/create-a-node');\n//     // require('./parser/parse-template');\n//     // require('./runtime/change-expr-compare');\n//     // require('./runtime/data-change-type');\n//     // require('./runtime/default-filters');\n//     // require('./view/life-cycle');\n//     // require('./view/node-type');\n//     // require('./view/get-prop-handler');\n//     // require('./view/is-data-change-by-element');\n//     // require('./view/event-declaration-listener');\n//     // require('./view/create-node');\n\n\n    /**\n * @file 生成唯一id\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n/**\n * 唯一id的起始值\n *\n * @inner\n * @type {number}\n */\nvar guidIndex = 1;\n\n/**\n * 唯一id的前缀\n *\n * @inner\n * @type {string}\n */\nvar guidPrefix = (new Date()).getTime().toString(16).slice(8);\n\n/**\n * 获取唯一id\n *\n * @inner\n * @return {string} 唯一id\n */\nfunction guid() {\n    return '_' + guidPrefix + (guidIndex++);\n}\n\n// exports = module.exports = guid;\n\n\n/**\n * @file 空函数\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n/**\n * 啥都不干\n */\nfunction empty() {}\n\n// exports = module.exports = empty;\n\n\n/**\n * @file 属性拷贝\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 对象属性拷贝\n *\n * @param {Object} target 目标对象\n * @param {Object} source 源对象\n * @return {Object} 返回目标对象\n */\nfunction extend(target, source) {\n    for (var key in source) {\n        if (source.hasOwnProperty(key)) {\n            var value = source[key];\n            if (typeof value !== 'undefined') {\n                target[key] = value;\n            }\n        }\n    }\n\n    return target;\n}\n\n// exports = module.exports = extend;\n\n\n/**\n * @file 构建类之间的继承关系\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var extend = require('./extend');\n\n/**\n * 构建类之间的继承关系\n *\n * @param {Function} subClass 子类函数\n * @param {Function} superClass 父类函数\n */\nfunction inherits(subClass, superClass) {\n    /* jshint -W054 */\n    var subClassProto = subClass.prototype;\n    var F = new Function();\n    F.prototype = superClass.prototype;\n    subClass.prototype = new F();\n    subClass.prototype.constructor = subClass;\n    extend(subClass.prototype, subClassProto);\n    /* jshint +W054 */\n}\n\n// exports = module.exports = inherits;\n\n\n/**\n * @file 遍历数组\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n/**\n * 遍历数组集合\n *\n * @param {Array} array 数组源\n * @param {function(Any,number):boolean} iterator 遍历函数\n */\nfunction each(array, iterator) {\n    if (array && array.length > 0) {\n        for (var i = 0, l = array.length; i < l; i++) {\n            if (iterator(array[i], i) === false) {\n                break;\n            }\n        }\n    }\n}\n\n// exports = module.exports = each;\n\n\n/**\n * @file 判断数组中是否包含某项\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var each = require('./each');\n\n/**\n * 判断数组中是否包含某项\n *\n * @param {Array} array 数组\n * @param {*} value 包含的项\n * @return {boolean}\n */\nfunction contains(array, value) {\n    var result = false;\n    each(array, function (item) {\n        result = item === value;\n        return !result;\n    });\n\n    return result;\n}\n\n// exports = module.exports = contains;\n\n\n/**\n * @file bind函数\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * Function.prototype.bind 方法的兼容性封装\n *\n * @param {Function} func 要bind的函数\n * @param {Object} thisArg this指向对象\n * @param {...*} args 预设的初始参数\n * @return {Function}\n */\nfunction bind(func, thisArg) {\n    var nativeBind = Function.prototype.bind;\n    var slice = Array.prototype.slice;\n    // #[begin] allua\n    if (nativeBind && func.bind === nativeBind) {\n    // #[end]\n        return nativeBind.apply(func, slice.call(arguments, 1));\n    // #[begin] allua\n    }\n\n    var args = slice.call(arguments, 2);\n    return function () {\n        return func.apply(thisArg, args.concat(slice.call(arguments)));\n    };\n    // #[end]\n}\n\n// exports = module.exports = bind;\n\n\n/**\n * @file DOM 事件挂载\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * DOM 事件挂载\n *\n * @inner\n * @param {HTMLElement} el DOM元素\n * @param {string} eventName 事件名\n * @param {Function} listener 监听函数\n * @param {boolean} capture 是否是捕获阶段\n */\nfunction on(el, eventName, listener, capture) {\n    // #[begin] allua\n    if (el.addEventListener) {\n    // #[end]\n        el.addEventListener(eventName, listener, capture);\n    // #[begin] allua\n    }\n    else {\n        el.attachEvent('on' + eventName, listener);\n    }\n    // #[end]\n}\n\n// exports = module.exports = on;\n\n\n/**\n * @file DOM 事件卸载\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * DOM 事件卸载\n *\n * @inner\n * @param {HTMLElement} el DOM元素\n * @param {string} eventName 事件名\n * @param {Function} listener 监听函数\n * @param {boolean} capture 是否是捕获阶段\n */\nfunction un(el, eventName, listener, capture) {\n    // #[begin] allua\n    if (el.addEventListener) {\n    // #[end]\n        el.removeEventListener(eventName, listener, capture);\n    // #[begin] allua\n    }\n    else {\n        el.detachEvent('on' + eventName, listener);\n    }\n    // #[end]\n}\n\n// exports = module.exports = un;\n\n\n/**\n * @file 将字符串逗号切分返回对象\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var each = require('../util/each');\n\n/**\n * 将字符串逗号切分返回对象\n *\n * @param {string} source 源字符串\n * @return {Object}\n */\nfunction splitStr2Obj(source) {\n    var result = {};\n    each(\n        source.split(','),\n        function (key) {\n            result[key] = 1;\n        }\n    );\n    return result;\n}\n\n// exports = module.exports = splitStr2Obj;\n\n\n/**\n * @file SVG标签表\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var splitStr2Obj = require('../util/split-str-2-obj');\n\n/**\n * svgTags\n *\n * @see https://www.w3.org/TR/SVG/svgdtd.html 只取常用\n * @type {Object}\n */\nvar svgTags = splitStr2Obj(''\n    // structure\n    + 'svg,g,defs,desc,metadata,symbol,use,'\n    // image & shape\n    + 'image,path,rect,circle,line,ellipse,polyline,polygon,'\n    // text\n    + 'text,tspan,tref,textpath,'\n    // other\n    + 'marker,pattern,clippath,mask,filter,cursor,view,animate,'\n    // font\n    + 'font,font-face,glyph,missing-glyph');\n\n// exports = module.exports = svgTags;\n\n\n/**\n * @file DOM创建\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var svgTags = require('./svg-tags');\n\n/**\n * 创建 DOM 元素\n *\n * @param  {string} tagName tagName\n * @return {HTMLElement}\n */\nfunction createEl(tagName) {\n    if (svgTags[tagName]) {\n        return document.createElementNS('http://www.w3.org/2000/svg', tagName);\n    }\n\n    return document.createElement(tagName);\n}\n\n// exports = module.exports = createEl;\n\n\n/**\n * @file 移除DOM\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 将 DOM 从页面中移除\n *\n * @param {HTMLElement} el DOM元素\n */\nfunction removeEl(el) {\n    if (el && el.parentNode) {\n        el.parentNode.removeChild(el);\n    }\n}\n\n// exports = module.exports = removeEl;\n\n\n/**\n * @file 在下一个时间周期运行任务\n * @author errorrik(errorrik@gmail.com)\n */\n\n// 该方法参照了vue2.5.0的实现，感谢vue团队\n// SEE: https://github.com/vuejs/vue/blob/0948d999f2fddf9f90991956493f976273c5da1f/src/core/util/env.js#L68\n\n\n// var bind = require('./bind');\n\n/**\n * 下一个周期要执行的任务列表\n *\n * @inner\n * @type {Array}\n */\nvar nextTasks = [];\n\n/**\n * 执行下一个周期任务的函数\n *\n * @inner\n * @type {Function}\n */\nvar nextHandler;\n\n/**\n * 浏览器是否支持原生Promise\n * 对Promise做判断，是为了禁用一些不严谨的Promise的polyfill\n *\n * @inner\n * @type {boolean}\n */\nvar isNativePromise = typeof Promise === 'function' && /native code/.test(Promise);\n\n/**\n * 在下一个时间周期运行任务\n *\n * @inner\n * @param {Function} fn 要运行的任务函数\n * @param {Object=} thisArg this指向对象\n */\nfunction nextTick(fn, thisArg) {\n    if (thisArg) {\n        fn = bind(fn, thisArg);\n    }\n    nextTasks.push(fn);\n\n    if (nextHandler) {\n        return;\n    }\n\n    nextHandler = function () {\n        var tasks = nextTasks.slice(0);\n        nextTasks = [];\n        nextHandler = null;\n\n        for (var i = 0, l = tasks.length; i < l; i++) {\n            tasks[i]();\n        }\n    };\n\n    // 非标准方法，但是此方法非常吻合要求。\n    if (typeof setImmediate === 'function') {\n        setImmediate(nextHandler);\n    }\n    // 用MessageChannel去做setImmediate的polyfill\n    // 原理是将新的message事件加入到原有的dom events之后\n    else if (typeof MessageChannel === 'function') {\n        var channel = new MessageChannel();\n        var port = channel.port2;\n        channel.port1.onmessage = nextHandler;\n        port.postMessage(1);\n    }\n    // for native app\n    else if (isNativePromise) {\n        Promise.resolve().then(nextHandler);\n    }\n    else {\n        setTimeout(nextHandler, 0);\n    }\n}\n\n// exports = module.exports = nextTick;\n\n\n/**\n * @file ie版本号\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 从userAgent中ie版本号的匹配信息\n *\n * @type {Array}\n */\nvar ieVersionMatch = typeof navigator !== 'undefined'\n    && navigator.userAgent.match(/msie\\s*([0-9]+)/i);\n\n/**\n * ie版本号，非ie时为0\n *\n * @type {number}\n */\nvar ie = ieVersionMatch ? ieVersionMatch[1] - 0 : 0;\n\n// exports = module.exports = ie;\n\n\n/**\n * @file 是否 IE 并且小于 9\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ie = require('./ie');\n\n// HACK:\n// 1. IE8下，设置innerHTML时如果以html comment开头，comment会被自动滤掉\n//    为了保证stump存在，需要设置完html后，createComment并appendChild/insertBefore\n// 2. IE8下，innerHTML还不支持custom element，所以需要用div替代，不用createElement\n// 3. 虽然IE8已经优化了字符串+连接，碎片化连接性能不再退化\n//    但是由于上面多个兼容场景都用 < 9 判断，所以字符串连接也沿用\n//    所以结果是IE8下字符串连接用的是数组join的方式\n\n// #[begin] allua\n/**\n * 是否 IE 并且小于 9\n */\nvar ieOldThan9 = ie && ie < 9;\n// #[end]\n\n// exports = module.exports = ieOldThan9;\n\n\n/**\n * @file DOM 事件挂载\n * @author dafrok(o.o@mug.dog)\n */\n\n/**\n * DOM 事件挂载\n *\n * @inner\n * @param {HTMLElement} el DOM元素\n * @param {string} eventName 事件名\n */\nfunction trigger(el, eventName) {\n    var event = document.createEvent('HTMLEvents');\n    event.initEvent(eventName, true, true);\n    el.dispatchEvent(event);\n}\n\n// exports = module.exports = trigger;\n\n\n/**\n * @file 解决 IE9 在表单元素中删除字符时不触发事件的问题\n * @author dafrok(o.o@mug.dog)\n */\n\n// var ie = require('./ie');\n// var on = require('./on');\n// var trigger = require('./trigger');\n\n// #[begin] allua\nif (ie === 9) {\n    on(document, 'selectionchange', function () {\n        var el = document.activeElement;\n        if (el.tagName === 'TEXTAREA' || el.tagName === 'INPUT') {\n            trigger(el, 'input');\n        }\n    });\n}\n// #[end]\n\n\n/**\n * @file 自闭合标签表\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var splitStr2Obj = require('../util/split-str-2-obj');\n\n/**\n * 自闭合标签列表\n *\n * @type {Object}\n */\nvar autoCloseTags = splitStr2Obj('area,base,br,col,embed,hr,img,input,keygen,param,source,track,wbr');\n\n// exports = module.exports = autoCloseTags;\n\n\n/**\n * @file data types\n * @author leon <ludafa@outlook.com>\n */\n\n// var bind = require('./bind');\n// var empty = require('./empty');\n// var extend = require('./extend');\n\n// #[begin] error\nvar ANONYMOUS_CLASS_NAME = '<<anonymous>>';\n\n/**\n * 获取精确的类型\n *\n * @NOTE 如果 obj 是一个 DOMElement，我们会返回 `element`；\n *\n * @param  {*} obj 目标\n * @return {string}\n */\nfunction getDataType(obj) {\n\n    if (obj && obj.nodeType === 1) {\n        return 'element';\n    }\n\n    return Object.prototype.toString\n        .call(obj)\n        .slice(8, -1)\n        .toLowerCase();\n}\n// #[end]\n\n/**\n * 创建链式的数据类型校验器\n *\n * @param  {Function} validate 真正的校验器\n * @return {Function}\n */\nfunction createChainableChecker(validate) {\n    var chainedChecker = function () {};\n    chainedChecker.isRequired = empty;\n\n    // 只在 error 功能启用时才有实际上的 dataTypes 检测\n    // #[begin] error\n    var checkType = function (isRequired, data, dataName, componentName, fullDataName) {\n\n        var dataValue = data[dataName];\n        var dataType = getDataType(dataValue);\n\n        componentName = componentName || ANONYMOUS_CLASS_NAME;\n\n        // 如果是 null 或 undefined，那么要提前返回啦\n        if (dataValue == null) {\n            // 是 required 就报错\n            if (isRequired) {\n                throw new Error('[SAN ERROR] '\n                    + 'The `' + dataName + '` '\n                    + 'is marked as required in `' + componentName + '`, '\n                    + 'but its value is ' + dataType\n                );\n            }\n            // 不是 required，那就是 ok 的\n            return;\n        }\n\n        validate(data, dataName, componentName, fullDataName);\n\n    };\n\n    chainedChecker = bind(checkType, null, false);\n    chainedChecker.isRequired = bind(checkType, null, true);\n    // #[end]\n\n\n\n    return chainedChecker;\n\n}\n\n// #[begin] error\n/**\n * 生成主要类型数据校验器\n *\n * @param  {string} type 主类型\n * @return {Function}\n */\nfunction createPrimaryTypeChecker(type) {\n\n    return createChainableChecker(function (data, dataName, componentName, fullDataName) {\n\n        var dataValue = data[dataName];\n        var dataType = getDataType(dataValue);\n\n        if (dataType !== type) {\n            throw new Error('[SAN ERROR] '\n                + 'Invalid ' + componentName + ' data `' + fullDataName + '` of type'\n                + '(' + dataType + ' supplied to ' + componentName + ', '\n                + 'expected ' + type + ')'\n            );\n        }\n\n    });\n\n}\n\n\n\n/**\n * 生成 arrayOf 校验器\n *\n * @param  {Function} arrayItemChecker 数组中每项数据的校验器\n * @return {Function}\n */\nfunction createArrayOfChecker(arrayItemChecker) {\n\n    return createChainableChecker(function (data, dataName, componentName, fullDataName) {\n\n        if (typeof arrayItemChecker !== 'function') {\n            throw new Error('[SAN ERROR] '\n                + 'Data `' + dataName + '` of `' + componentName + '` has invalid '\n                + 'DataType notation inside `arrayOf`, expected `function`'\n            );\n        }\n\n        var dataValue = data[dataName];\n        var dataType = getDataType(dataValue);\n\n        if (dataType !== 'array') {\n            throw new Error('[SAN ERROR] '\n                + 'Invalid ' + componentName + ' data `' + fullDataName + '` of type'\n                + '(' + dataType + ' supplied to ' + componentName + ', '\n                + 'expected array)'\n            );\n        }\n\n        for (var i = 0, len = dataValue.length; i < len; i++) {\n            arrayItemChecker(dataValue, i, componentName, fullDataName + '[' + i + ']');\n        }\n\n    });\n\n}\n\n/**\n * 生成 instanceOf 检测器\n *\n * @param  {Function|Class} expectedClass 期待的类\n * @return {Function}\n */\nfunction createInstanceOfChecker(expectedClass) {\n\n    return createChainableChecker(function (data, dataName, componentName, fullDataName) {\n\n        var dataValue = data[dataName];\n\n        if (dataValue instanceof expectedClass) {\n            return;\n        }\n\n        var dataValueClassName = dataValue.constructor && dataValue.constructor.name\n            ? dataValue.constructor.name\n            : ANONYMOUS_CLASS_NAME;\n\n        var expectedClassName = expectedClass.name || ANONYMOUS_CLASS_NAME;\n\n        throw new Error('[SAN ERROR] '\n            + 'Invalid ' + componentName + ' data `' + fullDataName + '` of type'\n            + '(' + dataValueClassName + ' supplied to ' + componentName + ', '\n            + 'expected instance of ' + expectedClassName + ')'\n        );\n\n\n    });\n\n}\n\n/**\n * 生成 shape 校验器\n *\n * @param  {Object} shapeTypes shape 校验规则\n * @return {Function}\n */\nfunction createShapeChecker(shapeTypes) {\n\n    return createChainableChecker(function (data, dataName, componentName, fullDataName) {\n\n        if (getDataType(shapeTypes) !== 'object') {\n            throw new Error('[SAN ERROR] '\n                + 'Data `' + fullDataName + '` of `' + componentName + '` has invalid '\n                + 'DataType notation inside `shape`, expected `object`'\n            );\n        }\n\n        var dataValue = data[dataName];\n        var dataType = getDataType(dataValue);\n\n        if (dataType !== 'object') {\n            throw new Error('[SAN ERROR] '\n                + 'Invalid ' + componentName + ' data `' + fullDataName + '` of type'\n                + '(' + dataType + ' supplied to ' + componentName + ', '\n                + 'expected object)'\n            );\n        }\n\n        for (var shapeKeyName in shapeTypes) {\n            if (shapeTypes.hasOwnProperty(shapeKeyName)) {\n                var checker = shapeTypes[shapeKeyName];\n                if (typeof checker === 'function') {\n                    checker(dataValue, shapeKeyName, componentName, fullDataName + '.' + shapeKeyName);\n                }\n            }\n        }\n\n    });\n\n}\n\n/**\n * 生成 oneOf 校验器\n *\n * @param  {Array} expectedEnumValues 期待的枚举值\n * @return {Function}\n */\nfunction createOneOfChecker(expectedEnumValues) {\n\n    return createChainableChecker(function (data, dataName, componentName, fullDataName) {\n\n        if (getDataType(expectedEnumValues) !== 'array') {\n            throw new Error('[SAN ERROR] '\n                + 'Data `' + fullDataName + '` of `' + componentName + '` has invalid '\n                + 'DataType notation inside `oneOf`, array is expected.'\n            );\n        }\n\n        var dataValue = data[dataName];\n\n        for (var i = 0, len = expectedEnumValues.length; i < len; i++) {\n            if (dataValue === expectedEnumValues[i]) {\n                return;\n            }\n        }\n\n        throw new Error('[SAN ERROR] '\n            + 'Invalid ' + componentName + ' data `' + fullDataName + '` of value'\n            + '(`' + dataValue + '` supplied to ' + componentName + ', '\n            + 'expected one of ' + expectedEnumValues.join(',') + ')'\n        );\n\n    });\n\n}\n\n/**\n * 生成 oneOfType 校验器\n *\n * @param  {Array<Function>} expectedEnumOfTypeValues 期待的枚举类型\n * @return {Function}\n */\nfunction createOneOfTypeChecker(expectedEnumOfTypeValues) {\n\n    return createChainableChecker(function (data, dataName, componentName, fullDataName) {\n\n        if (getDataType(expectedEnumOfTypeValues) !== 'array') {\n            throw new Error('[SAN ERROR] '\n                + 'Data `' + dataName + '` of `' + componentName + '` has invalid '\n                + 'DataType notation inside `oneOf`, array is expected.'\n            );\n        }\n\n        var dataValue = data[dataName];\n\n        for (var i = 0, len = expectedEnumOfTypeValues.length; i < len; i++) {\n\n            var checker = expectedEnumOfTypeValues[i];\n\n            if (typeof checker !== 'function') {\n                continue;\n            }\n\n            try {\n                checker(data, dataName, componentName, fullDataName);\n                // 如果 checker 完成校验没报错，那就返回了\n                return;\n            }\n            catch (e) {\n                // 如果有错误，那么应该把错误吞掉\n            }\n\n        }\n\n        // 所有的可接受 type 都失败了，才丢一个异常\n        throw new Error('[SAN ERROR] '\n            + 'Invalid ' + componentName + ' data `' + dataName + '` of value'\n            + '(`' + dataValue + '` supplied to ' + componentName + ')'\n        );\n\n    });\n\n}\n\n/**\n * 生成 objectOf 校验器\n *\n * @param  {Function} typeChecker 对象属性值校验器\n * @return {Function}\n */\nfunction createObjectOfChecker(typeChecker) {\n\n    return createChainableChecker(function (data, dataName, componentName, fullDataName) {\n\n        if (typeof typeChecker !== 'function') {\n            throw new Error('[SAN ERROR] '\n                + 'Data `' + dataName + '` of `' + componentName + '` has invalid '\n                + 'DataType notation inside `objectOf`, expected function'\n            );\n        }\n\n        var dataValue = data[dataName];\n        var dataType = getDataType(dataValue);\n\n        if (dataType !== 'object') {\n            throw new Error('[SAN ERROR] '\n                + 'Invalid ' + componentName + ' data `' + dataName + '` of type'\n                + '(' + dataType + ' supplied to ' + componentName + ', '\n                + 'expected object)'\n            );\n        }\n\n        for (var dataKeyName in dataValue) {\n            if (dataValue.hasOwnProperty(dataKeyName)) {\n                typeChecker(\n                    dataValue,\n                    dataKeyName,\n                    componentName,\n                    fullDataName + '.' + dataKeyName\n                );\n            }\n        }\n\n\n    });\n\n}\n\n/**\n * 生成 exact 校验器\n *\n * @param  {Object} shapeTypes object 形态定义\n * @return {Function}\n */\nfunction createExactChecker(shapeTypes) {\n\n    return createChainableChecker(function (data, dataName, componentName, fullDataName, secret) {\n\n        if (getDataType(shapeTypes) !== 'object') {\n            throw new Error('[SAN ERROR] '\n                + 'Data `' + dataName + '` of `' + componentName + '` has invalid '\n                + 'DataType notation inside `exact`'\n            );\n        }\n\n        var dataValue = data[dataName];\n        var dataValueType = getDataType(dataValue);\n\n        if (dataValueType !== 'object') {\n            throw new Error('[SAN ERROR] '\n                + 'Invalid data `' + fullDataName + '` of type `' + dataValueType + '`'\n                + '(supplied to ' + componentName + ', expected `object`)'\n            );\n        }\n\n        var allKeys = {};\n\n        // 先合入 shapeTypes\n        extend(allKeys, shapeTypes);\n        // 再合入 dataValue\n        extend(allKeys, dataValue);\n        // 保证 allKeys 的类型正确\n\n        for (var key in allKeys) {\n            if (allKeys.hasOwnProperty(key)) {\n                var checker = shapeTypes[key];\n\n                // dataValue 中有一个多余的数据项\n                if (!checker) {\n                    throw new Error('[SAN ERROR] '\n                        + 'Invalid data `' + fullDataName + '` key `' + key + '` '\n                        + 'supplied to `' + componentName + '`. '\n                        + '(`' + key + '` is not defined in `DataTypes.exact`)'\n                    );\n                }\n\n                if (!(key in dataValue)) {\n                    throw new Error('[SAN ERROR] '\n                        + 'Invalid data `' + fullDataName + '` key `' + key + '` '\n                        + 'supplied to `' + componentName + '`. '\n                        + '(`' + key + '` is marked `required` in `DataTypes.exact`)'\n                    );\n                }\n\n                checker(\n                    dataValue,\n                    key,\n                    componentName,\n                    fullDataName + '.' + key,\n                    secret\n                );\n\n            }\n        }\n\n    });\n\n}\n// #[end]\n\n\n\n/* eslint-disable fecs-valid-var-jsdoc */\nvar DataTypes = {\n    array: createChainableChecker(empty),\n    object: createChainableChecker(empty),\n    func: createChainableChecker(empty),\n    string: createChainableChecker(empty),\n    number: createChainableChecker(empty),\n    bool: createChainableChecker(empty),\n    symbol: createChainableChecker(empty),\n    any: createChainableChecker,\n    arrayOf: createChainableChecker,\n    instanceOf: createChainableChecker,\n    shape: createChainableChecker,\n    oneOf: createChainableChecker,\n    oneOfType: createChainableChecker,\n    objectOf: createChainableChecker,\n    exact: createChainableChecker\n};\n\n// #[begin] error\nDataTypes = {\n\n    any: createChainableChecker(empty),\n\n    // 类型检测\n    array: createPrimaryTypeChecker('array'),\n    object: createPrimaryTypeChecker('object'),\n    func: createPrimaryTypeChecker('function'),\n    string: createPrimaryTypeChecker('string'),\n    number: createPrimaryTypeChecker('number'),\n    bool: createPrimaryTypeChecker('boolean'),\n    symbol: createPrimaryTypeChecker('symbol'),\n\n    // 复合类型检测\n    arrayOf: createArrayOfChecker,\n    instanceOf: createInstanceOfChecker,\n    shape: createShapeChecker,\n    oneOf: createOneOfChecker,\n    oneOfType: createOneOfTypeChecker,\n    objectOf: createObjectOfChecker,\n    exact: createExactChecker\n\n};\n/* eslint-enable fecs-valid-var-jsdoc */\n// #[end]\n\n\n// module.exports = DataTypes;\n\n\n/**\n * @file 创建数据检测函数\n * @author leon<ludafa@outlook.com>\n */\n\n\n// #[begin] error\n\n/**\n * 创建数据检测函数\n *\n * @param  {Object} dataTypes     数据格式\n * @param  {string} componentName 组件名\n * @return {Function}\n */\nfunction createDataTypesChecker(dataTypes, componentName) {\n\n    /**\n     * 校验 data 是否满足 data types 的格式\n     *\n     * @param  {*} data 数据\n     */\n    return function (data) {\n\n        for (var dataTypeName in dataTypes) {\n\n            if (dataTypes.hasOwnProperty(dataTypeName)) {\n\n                var dataTypeChecker = dataTypes[dataTypeName];\n\n                if (typeof dataTypeChecker !== 'function') {\n                    throw new Error('[SAN ERROR] '\n                        + componentName + ':' + dataTypeName + ' is invalid; '\n                        + 'it must be a function, usually from san.DataTypes'\n                    );\n                }\n\n                dataTypeChecker(\n                    data,\n                    dataTypeName,\n                    componentName,\n                    dataTypeName\n                );\n\n\n            }\n        }\n\n    };\n\n}\n\n// #[end]\n\n// module.exports = createDataTypesChecker;\n\n\n/**\n * @file 字符串源码读取类\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n/**\n * 字符串源码读取类，用于模板字符串解析过程\n *\n * @class\n * @param {string} source 要读取的字符串\n */\nfunction Walker(source) {\n    this.source = source;\n    this.len = this.source.length;\n    this.index = 0;\n}\n\n/**\n * 获取当前字符码\n *\n * @return {number}\n */\nWalker.prototype.currentCode = function () {\n    return this.charCode(this.index);\n};\n\n/**\n * 截取字符串片段\n *\n * @param {number} start 起始位置\n * @param {number} end 结束位置\n * @return {string}\n */\nWalker.prototype.cut = function (start, end) {\n    return this.source.slice(start, end);\n};\n\n/**\n * 向前读取字符\n *\n * @param {number} distance 读取字符数\n */\nWalker.prototype.go = function (distance) {\n    this.index += distance;\n};\n\n/**\n * 读取下一个字符，返回下一个字符的 code\n *\n * @return {number}\n */\nWalker.prototype.nextCode = function () {\n    this.go(1);\n    return this.currentCode();\n};\n\n/**\n * 获取相应位置字符的 code\n *\n * @param {number} index 字符位置\n * @return {number}\n */\nWalker.prototype.charCode = function (index) {\n    return this.source.charCodeAt(index);\n};\n\n/**\n * 向前读取字符，直到遇到指定字符再停止\n *\n * @param {number=} charCode 指定字符的code\n * @return {boolean} 当指定字符时，返回是否碰到指定的字符\n */\nWalker.prototype.goUntil = function (charCode) {\n    var code;\n    while (this.index < this.len && (code = this.currentCode())) {\n        switch (code) {\n            case 32:\n            case 9:\n                this.index++;\n                break;\n            default:\n                if (code === charCode) {\n                    this.index++;\n                    return 1;\n                }\n                return;\n        }\n    }\n};\n\n/**\n * 向前读取符合规则的字符片段，并返回规则匹配结果\n *\n * @param {RegExp} reg 字符片段的正则表达式\n * @return {Array}\n */\nWalker.prototype.match = function (reg) {\n    reg.lastIndex = this.index;\n\n    var match = reg.exec(this.source);\n    if (match) {\n        this.index = reg.lastIndex;\n    }\n\n    return match;\n};\n\n// exports = module.exports = Walker;\n\n\n\n/**\n * @file 模板解析生成的抽象节点\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 创建模板解析生成的抽象节点\n *\n * @param {Object=} options 节点参数\n * @param {string=} options.tagName 标签名\n * @param {ANode=} options.parent 父节点\n * @param {boolean=} options.textExpr 文本节点表达式对象\n * @return {Object}\n */\nfunction createANode(options) {\n    options = options || {};\n\n    if (!options.textExpr) {\n        options.directives = options.directives || {};\n        options.props = options.props || [];\n        options.events = options.events || [];\n        options.children = options.children || [];\n    }\n\n    return options;\n}\n\n// exports = module.exports = createANode;\n\n\n/**\n * @file 把 kebab case 字符串转换成 camel case\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 把 kebab case 字符串转换成 camel case\n *\n * @param {string} source 源字符串\n * @return {string}\n */\nfunction kebab2camel(source) {\n    return source.replace(/-([a-z])/g, function (match, alpha) {\n        return alpha.toUpperCase();\n    });\n}\n\n// exports = module.exports = kebab2camel;\n\n\n/**\n * @file 表达式类型\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 表达式类型\n *\n * @const\n * @type {Object}\n */\nvar ExprType = {\n    STRING: 1,\n    NUMBER: 2,\n    BOOL: 3,\n    ACCESSOR: 4,\n    INTERP: 5,\n    CALL: 6,\n    TEXT: 7,\n    BINARY: 8,\n    UNARY: 9,\n    TERTIARY: 10\n};\n\n// exports = module.exports = ExprType;\n\n\n/**\n * @file 创建访问表达式对象\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n\n/**\n * 创建访问表达式对象\n *\n * @param {Array} paths 访问路径\n * @return {Object}\n */\nfunction createAccessor(paths) {\n    return {\n        type: ExprType.ACCESSOR,\n        paths: paths\n    };\n}\n\n// exports = module.exports = createAccessor;\n\n\n/**\n * @file 读取字符串\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var ExprType = require('./expr-type');\n\n/**\n * 读取字符串\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readString(walker) {\n    var startCode = walker.currentCode();\n    var startIndex = walker.index;\n    var charCode;\n\n    walkLoop: while ((charCode = walker.nextCode())) {\n        switch (charCode) {\n            case 92: // \\\n                walker.go(1);\n                break;\n            case startCode:\n                walker.go(1);\n                break walkLoop;\n        }\n    }\n\n    var literal = walker.cut(startIndex, walker.index);\n    return {\n        type: ExprType.STRING,\n        value: (new Function('return ' + literal))()\n    };\n}\n\n// exports = module.exports = readString;\n\n\n/**\n * @file 读取数字\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var ExprType = require('./expr-type');\n\n/**\n * 读取数字\n *\n * @inner\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readNumber(walker) {\n    var match = walker.match(/\\s*(-?[0-9]+(\\.[0-9]+)?)/g);\n\n    return {\n        type: ExprType.NUMBER,\n        value: match[1] - 0\n    };\n}\n\n// exports = module.exports = readNumber;\n\n\n/**\n * @file 读取ident\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 读取ident\n *\n * @inner\n * @param {Walker} walker 源码读取对象\n * @return {string}\n */\nfunction readIdent(walker) {\n    var match = walker.match(/\\s*([\\$0-9a-z_]+)/ig);\n    return match[1];\n}\n\n// exports = module.exports = readIdent;\n\n\n/**\n * @file 读取三元表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readLogicalORExpr = require('./read-logical-or-expr');\n\n/**\n * 读取三元表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readTertiaryExpr(walker) {\n    var conditional = readLogicalORExpr(walker);\n    walker.goUntil();\n\n    if (walker.currentCode() === 63) { // ?\n        walker.go(1);\n        var yesExpr = readTertiaryExpr(walker);\n        walker.goUntil();\n\n        if (walker.currentCode() === 58) { // :\n            walker.go(1);\n            return {\n                type: ExprType.TERTIARY,\n                segs: [\n                    conditional,\n                    yesExpr,\n                    readTertiaryExpr(walker)\n                ]\n            };\n        }\n    }\n\n    return conditional;\n}\n\n// exports = module.exports = readTertiaryExpr;\n\n\n/**\n * @file 读取访问表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var createAccessor = require('./create-accessor');\n// var readIdent = require('./read-ident');\n// var readTertiaryExpr = require('./read-tertiary-expr');\n\n/**\n * 读取访问表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readAccessor(walker) {\n    var firstSeg = readIdent(walker);\n    switch (firstSeg) {\n        case 'true':\n        case 'false':\n            return {\n                type: ExprType.BOOL,\n                value: firstSeg === 'true'\n            };\n    }\n\n    var result = createAccessor([\n        {\n            type: ExprType.STRING,\n            value: firstSeg\n        }\n    ]);\n\n    /* eslint-disable no-constant-condition */\n    accessorLoop: while (1) {\n    /* eslint-enable no-constant-condition */\n\n        switch (walker.currentCode()) {\n            case 46: // .\n                walker.go(1);\n\n                // ident as string\n                result.paths.push({\n                    type: ExprType.STRING,\n                    value: readIdent(walker)\n                });\n                break;\n\n            case 91: // [\n                walker.go(1);\n                result.paths.push(readTertiaryExpr(walker));\n                walker.goUntil(93); // ]\n                break;\n\n            default:\n                break accessorLoop;\n        }\n    }\n\n    return result;\n}\n\n// exports = module.exports = readAccessor;\n\n\n/**\n * @file 读取括号表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var readTertiaryExpr = require('./read-tertiary-expr');\n\n/**\n * 读取括号表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readParenthesizedExpr(walker) {\n    walker.go(1);\n    var expr = readTertiaryExpr(walker);\n    walker.goUntil(41); // )\n\n    return expr;\n}\n\n// exports = module.exports = readParenthesizedExpr;\n\n\n/**\n * @file 读取一元表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readString = require('./read-string');\n// var readNumber = require('./read-number');\n// var readAccessor = require('./read-accessor');\n// var readParenthesizedExpr = require('./read-parenthesized-expr');\n\n\n/**\n * 读取一元表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readUnaryExpr(walker) {\n    walker.goUntil();\n\n    switch (walker.currentCode()) {\n        case 33: // !\n            walker.go(1);\n            return {\n                type: ExprType.UNARY,\n                expr: readUnaryExpr(walker)\n            };\n        case 34: // \"\n        case 39: // '\n            return readString(walker);\n        case 45: // number\n        case 48:\n        case 49:\n        case 50:\n        case 51:\n        case 52:\n        case 53:\n        case 54:\n        case 55:\n        case 56:\n        case 57:\n            return readNumber(walker);\n        case 40: // (\n            return readParenthesizedExpr(walker);\n    }\n\n    return readAccessor(walker);\n}\n\n// exports = module.exports = readUnaryExpr;\n\n\n/**\n * @file 读取乘法表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readUnaryExpr = require('./read-unary-expr');\n\n/**\n * 读取乘法表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readMultiplicativeExpr(walker) {\n    var expr = readUnaryExpr(walker);\n\n    while (1) {\n        walker.goUntil();\n\n        var code = walker.currentCode();\n        switch (code) {\n            case 37: // %\n            case 42: // *\n            case 47: // /\n                walker.go(1);\n                expr = {\n                    type: ExprType.BINARY,\n                    operator: code,\n                    segs: [expr, readUnaryExpr(walker)]\n                };\n                continue;\n        }\n\n        break;\n    }\n\n\n    return expr;\n}\n\n// exports = module.exports = readMultiplicativeExpr;\n\n\n/**\n * @file 读取加法表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readMultiplicativeExpr = require('./read-multiplicative-expr');\n\n\n/**\n * 读取加法表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readAdditiveExpr(walker) {\n    var expr = readMultiplicativeExpr(walker);\n\n    while (1) {\n        walker.goUntil();\n        var code = walker.currentCode();\n\n        switch (code) {\n            case 43: // +\n            case 45: // -\n                walker.go(1);\n                expr = {\n                    type: ExprType.BINARY,\n                    operator: code,\n                    segs: [expr, readMultiplicativeExpr(walker)]\n                };\n                continue;\n        }\n\n        break;\n    }\n\n    return expr;\n}\n\n// exports = module.exports = readAdditiveExpr;\n\n\n/**\n * @file 读取关系判断表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readAdditiveExpr = require('./read-additive-expr');\n\n/**\n * 读取关系判断表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readRelationalExpr(walker) {\n    var expr = readAdditiveExpr(walker);\n    walker.goUntil();\n\n    var code = walker.currentCode();\n    switch (code) {\n        case 60: // <\n        case 62: // >\n            if (walker.nextCode() === 61) {\n                code += 61;\n                walker.go(1);\n            }\n\n            return {\n                type: ExprType.BINARY,\n                operator: code,\n                segs: [expr, readAdditiveExpr(walker)]\n            };\n    }\n\n    return expr;\n}\n\n// exports = module.exports = readRelationalExpr;\n\n\n/**\n * @file 读取相等比对表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readRelationalExpr = require('./read-relational-expr');\n\n/**\n * 读取相等比对表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readEqualityExpr(walker) {\n    var expr = readRelationalExpr(walker);\n    walker.goUntil();\n\n    var code = walker.currentCode();\n    switch (code) {\n        case 61: // =\n        case 33: // !\n            if (walker.nextCode() === 61) {\n                code += 61;\n                if (walker.nextCode() === 61) {\n                    code += 61;\n                    walker.go(1);\n                }\n\n                return {\n                    type: ExprType.BINARY,\n                    operator: code,\n                    segs: [expr, readRelationalExpr(walker)]\n                };\n            }\n\n            walker.go(-1);\n    }\n\n    return expr;\n}\n\n// exports = module.exports = readEqualityExpr;\n\n\n/**\n * @file 读取逻辑与表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readEqualityExpr = require('./read-equality-expr');\n\n/**\n * 读取逻辑与表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readLogicalANDExpr(walker) {\n    var expr = readEqualityExpr(walker);\n    walker.goUntil();\n\n    if (walker.currentCode() === 38) { // &\n        if (walker.nextCode() === 38) {\n            walker.go(1);\n            return {\n                type: ExprType.BINARY,\n                operator: 76,\n                segs: [expr, readLogicalANDExpr(walker)]\n            };\n        }\n\n        walker.go(-1);\n    }\n\n    return expr;\n}\n\n// exports = module.exports = readLogicalANDExpr;\n\n\n/**\n * @file 读取逻辑或表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readLogicalANDExpr = require('./read-logical-and-expr');\n\n/**\n * 读取逻辑或表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readLogicalORExpr(walker) {\n    var expr = readLogicalANDExpr(walker);\n    walker.goUntil();\n\n    if (walker.currentCode() === 124) { // |\n        if (walker.nextCode() === 124) {\n            walker.go(1);\n            return {\n                type: ExprType.BINARY,\n                operator: 248,\n                segs: [expr, readLogicalORExpr(walker)]\n            };\n        }\n\n        walker.go(-1);\n    }\n\n    return expr;\n}\n\n// exports = module.exports = readLogicalORExpr;\n\n\n/**\n * @file 解析表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var Walker = require('./walker');\n// var readTertiaryExpr = require('./read-tertiary-expr');\n\n/**\n * 解析表达式\n *\n * @param {string} source 源码\n * @return {Object}\n */\nfunction parseExpr(source) {\n    if (typeof source === 'object' && source.type) {\n        return source;\n    }\n\n    var expr = readTertiaryExpr(new Walker(source));\n    expr.raw = source;\n    return expr;\n}\n\n// exports = module.exports = parseExpr;\n\n\n/**\n * @file 读取调用\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readAccessor = require('./read-accessor');\n// var readTertiaryExpr = require('./read-tertiary-expr');\n\n/**\n * 读取调用\n *\n * @param {Walker} walker 源码读取对象\n * @param {Array=} defaultArgs 默认参数\n * @return {Object}\n */\nfunction readCall(walker, defaultArgs) {\n    walker.goUntil();\n    var ident = readAccessor(walker);\n    var args = [];\n\n    if (walker.goUntil(40)) { // (\n        while (!walker.goUntil(41)) { // )\n            args.push(readTertiaryExpr(walker));\n            walker.goUntil(44); // ,\n        }\n    }\n    else if (defaultArgs) {\n        args = defaultArgs;\n    }\n\n    return {\n        type: ExprType.CALL,\n        name: ident,\n        args: args\n    };\n}\n\n// exports = module.exports = readCall;\n\n\n/**\n * @file 解析调用\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var Walker = require('./walker');\n// var readCall = require('./read-call');\n\n/**\n * 解析调用\n *\n * @param {string} source 源码\n * @param {Array=} defaultArgs 默认参数\n * @return {Object}\n */\nfunction parseCall(source, defaultArgs) {\n    var expr = readCall(new Walker(source), defaultArgs);\n    expr.raw = source;\n    return expr;\n}\n\n// exports = module.exports = parseCall;\n\n\n/**\n * @file 解析插值替换\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var Walker = require('./walker');\n// var readTertiaryExpr = require('./read-tertiary-expr');\n// var ExprType = require('./expr-type');\n// var readCall = require('./read-call');\n\n/**\n * 解析插值替换\n *\n * @param {string} source 源码\n * @return {Object}\n */\nfunction parseInterp(source) {\n    var walker = new Walker(source);\n\n    var interp = {\n        type: ExprType.INTERP,\n        expr: readTertiaryExpr(walker),\n        filters: [],\n        raw: source\n    };\n\n    while (walker.goUntil(124)) { // |\n        var callExpr = readCall(walker);\n        switch (callExpr.name.paths[0].value) {\n            case 'html':\n                break;\n            case 'raw':\n                interp.original = 1;\n                break;\n            default:\n                interp.filters.push(callExpr);\n        }\n    }\n\n    return interp;\n}\n\n// exports = module.exports = parseInterp;\n\n\n/**\n * @file 解析文本\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var Walker = require('./walker');\n// var ExprType = require('./expr-type');\n// var parseInterp = require('./parse-interp');\n\n/**\n * 对字符串进行可用于new RegExp的字面化\n *\n * @inner\n * @param {string} source 需要字面化的字符串\n * @return {string} 字符串字面化结果\n */\nfunction regexpLiteral(source) {\n    return source.replace(/[\\^\\[\\]\\$\\(\\)\\{\\}\\?\\*\\.\\+\\\\]/g, function (c) {\n        return '\\\\' + c;\n    });\n}\n\n/**\n * 解析文本\n *\n * @param {string} source 源码\n * @param {Array?} delimiters 分隔符。默认为 ['{{', '}}']\n * @return {Object}\n */\nfunction parseText(source, delimiters) {\n    delimiters = delimiters || ['{{', '}}'];\n    var exprStartReg = new RegExp(\n        regexpLiteral(delimiters[0]) + '\\\\s*([\\\\s\\\\S]+?)\\\\s*' + regexpLiteral(delimiters[1]),\n        'ig'\n    );\n\n    var exprMatch;\n\n    var walker = new Walker(source);\n    var beforeIndex = 0;\n\n    var expr = {\n        type: ExprType.TEXT,\n        segs: []\n    };\n\n    function pushStringToSeg(text) {\n        text && expr.segs.push({\n            type: ExprType.STRING,\n            value: decodeHTML(text)\n        });\n    }\n\n    while ((exprMatch = walker.match(exprStartReg)) != null) {\n        pushStringToSeg(walker.cut(\n            beforeIndex,\n            walker.index - exprMatch[0].length\n        ));\n\n        var interp = parseInterp(exprMatch[1]);\n        expr.original = expr.original || interp.original;\n\n        expr.segs.push(interp);\n        beforeIndex = walker.index;\n    }\n\n    pushStringToSeg(walker.cut(beforeIndex));\n\n\n\n    if (expr.segs.length === 1 && expr.segs[0].type === ExprType.STRING) {\n        expr.value = expr.segs[0].value;\n    }\n\n    return expr;\n}\n\nfunction decodeHTML(source) {\n    return source\n        .replace(/&lt;/g, '<')\n        .replace(/&gt;/g, '>')\n        .replace(/&nbsp;/g, ' ')\n        .replace(/&quot;/g, '\\\"')\n        .replace(/&#([0-9]+);/g, function (match, code) {\n            return String.fromCharCode(+code);\n        })\n        .replace(/&#x([0-9a-f]+);/ig, function (match, code) {\n            return String.fromCharCode(parseInt(code, 16));\n        })\n        .replace(/&amp;/g, '&');\n}\n\n// exports = module.exports = parseText;\n\n\n/**\n * @file 解析指令\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var Walker = require('./walker');\n// var parseExpr = require('./parse-expr');\n// var parseCall = require('./parse-call');\n// var parseText = require('./parse-text');\n// var readAccessor = require('./read-accessor');\n\n/**\n * 指令解析器\n *\n * @inner\n * @type {Object}\n */\nvar directiveParsers = {\n    'for': function (value) {\n        var walker = new Walker(value);\n        var match = walker.match(/^\\s*([\\$0-9a-z_]+)(\\s*,\\s*([\\$0-9a-z_]+))?\\s+in\\s+/ig);\n\n        if (match) {\n            return {\n                item: parseExpr(match[1]),\n                index: parseExpr(match[3] || '$index'),\n                value: readAccessor(walker)\n            };\n        }\n\n        // #[begin] error\n        throw new Error('[SAN FATAL] for syntax error: ' + value);\n        // #[end]\n    },\n\n    'ref': function (value, options) {\n        return {\n            value: parseText(value, options.delimiters)\n        };\n    },\n\n    'if': function (value) {\n        return {\n            value: parseExpr(value.replace(/(^\\{\\{|\\}\\}$)/g, ''))\n        };\n    },\n\n    'elif': function (value) {\n        return {\n            value: parseExpr(value.replace(/(^\\{\\{|\\}\\}$)/g, ''))\n        };\n    },\n\n    'else': function (value) {\n        return {\n            value: {}\n        };\n    },\n\n    'html': function (value) {\n        return {\n            value: parseExpr(value.replace(/(^\\{\\{|\\}\\}$)/g, ''))\n        };\n    },\n\n    'transition': function (value) {\n        return {\n            value: parseCall(value)\n        };\n    }\n};\n\n/**\n * 解析指令\n *\n * @param {ANode} aNode 抽象节点\n * @param {string} name 指令名称\n * @param {string} value 指令值\n * @param {Object} options 解析参数\n * @param {Array?} options.delimiters 插值分隔符列表\n */\nfunction parseDirective(aNode, name, value, options) {\n    if (name === 'else-if') {\n        name = 'elif';\n    }\n\n    var parser = directiveParsers[name];\n    if (parser) {\n        (aNode.directives[name] = parser(value, options)).raw = value;\n    }\n}\n\n// exports = module.exports = parseDirective;\n\n\n/**\n * @file 对属性信息进行处理\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('../parser/expr-type');\n\n/**\n * 对属性信息进行处理\n * 对组件的 binds 或者特殊的属性（比如 input 的 checked）需要处理\n *\n * 扁平化：\n * 当 text 解析只有一项时，要么就是 string，要么就是 interp\n * interp 有可能是绑定到组件属性的表达式，不希望被 eval text 成 string\n * 所以这里做个处理，只有一项时直接抽出来\n *\n * bool属性：\n * 当绑定项没有值时，默认为true\n *\n * @param {Object} prop 属性对象\n */\nfunction postProp(prop) {\n    var expr = prop.expr;\n\n    if (expr.type === ExprType.TEXT) {\n        switch (expr.segs.length) {\n            case 0:\n                prop.expr = {\n                    type: ExprType.BOOL,\n                    value: true\n                };\n                break;\n\n            case 1:\n                expr = prop.expr = expr.segs[0];\n                if (expr.type === ExprType.INTERP && expr.filters.length === 0) {\n                    prop.expr = expr.expr;\n                }\n        }\n    }\n}\n\n// exports = module.exports = postProp;\n\n\n/**\n * @file 解析抽象节点属性\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var each = require('../util/each');\n// var kebab2camel = require('../util/kebab2camel');\n// var ExprType = require('./expr-type');\n// var createAccessor = require('./create-accessor');\n// var parseExpr = require('./parse-expr');\n// var parseCall = require('./parse-call');\n// var parseText = require('./parse-text');\n// var parseDirective = require('./parse-directive');\n// var postProp = require('./post-prop');\n\n\n/**\n * 解析抽象节点属性\n *\n * @param {ANode} aNode 抽象节点\n * @param {string} name 属性名称\n * @param {string} value 属性值\n * @param {Object} options 解析参数\n * @param {Array?} options.delimiters 插值分隔符列表\n */\nfunction integrateAttr(aNode, name, value, options) {\n    var prefixIndex = name.indexOf('-');\n    var realName;\n    var prefix;\n\n    if (prefixIndex > 0) {\n        prefix = name.slice(0, prefixIndex);\n        realName = name.slice(prefixIndex + 1);\n    }\n\n    switch (prefix) {\n        case 'on':\n            var event = {\n                name: realName,\n                modifier: {}\n            };\n            aNode.events.push(event);\n\n            var colonIndex;\n            while ((colonIndex = value.indexOf(':')) > 0) {\n                var modifier = value.slice(0, colonIndex);\n\n                // eventHandler(\"dd:aa\") 这种情况不能算modifier，需要辨识\n                if (!/^[a-z]+$/i.test(modifier)) {\n                    break;\n                }\n\n                event.modifier[modifier] = true;\n                value = value.slice(colonIndex + 1);\n            }\n\n            event.expr = parseCall(value, [\n                createAccessor([\n                    { type: ExprType.STRING, value: '$event' }\n                ])\n            ]);\n            break;\n\n        case 'san':\n        case 's':\n            parseDirective(aNode, realName, value, options);\n            break;\n\n        case 'prop':\n            integrateProp(aNode, realName, value, options);\n            break;\n\n        case 'var':\n            if (!aNode.vars) {\n                aNode.vars = [];\n            }\n\n            realName = kebab2camel(realName);\n            aNode.vars.push({\n                name: realName,\n                expr: parseExpr(value.replace(/(^\\{\\{|\\}\\}$)/g, ''))\n            });\n            break;\n\n        default:\n            integrateProp(aNode, name, value, options);\n    }\n}\n\n/**\n * 解析抽象节点绑定属性\n *\n * @inner\n * @param {ANode} aNode 抽象节点\n * @param {string} name 属性名称\n * @param {string} value 属性值\n * @param {Object} options 解析参数\n * @param {Array?} options.delimiters 插值分隔符列表\n */\nfunction integrateProp(aNode, name, value, options) {\n    // parse two way binding, e.g. value=\"{=ident=}\"\n    var xMatch = value.match(/^\\{=\\s*(.*?)\\s*=\\}$/);\n\n    if (xMatch) {\n        aNode.props.push({\n            name: name,\n            expr: parseExpr(xMatch[1]),\n            x: 1,\n            raw: value\n        });\n\n        return;\n    }\n\n    // parse normal prop\n    var prop = {\n        name: name,\n        expr: parseText(value, options.delimiters),\n        raw: value\n    };\n\n    // 这里不能把只有一个插值的属性抽取\n    // 因为插值里的值可能是html片段，容易被注入\n    // 组件的数据绑定在组件init时做抽取\n    switch (name) {\n        case 'class':\n        case 'style':\n            each(prop.expr.segs, function (seg) {\n                if (seg.type === ExprType.INTERP) {\n                    seg.filters.push({\n                        type: ExprType.CALL,\n                        name: createAccessor([\n                            {\n                                type: ExprType.STRING,\n                                value: '_' + prop.name\n                            }\n                        ]),\n                        args: []\n                    });\n                }\n            });\n            break;\n\n        case 'checked':\n            if (aNode.tagName === 'input') {\n                postProp(prop);\n            }\n            break;\n    }\n\n    aNode.props.push(prop);\n}\n\n\n// exports = module.exports = integrateAttr;\n\n\n/**\n * @file 解析模板\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var createANode = require('./create-a-node');\n// var Walker = require('./walker');\n// var integrateAttr = require('./integrate-attr');\n// var parseText = require('./parse-text');\n// var autoCloseTags = require('../browser/auto-close-tags');\n\n// #[begin] error\nfunction getXPath(stack, currentTagName) {\n    var path = ['ROOT'];\n    for (var i = 1, len = stack.length; i < len; i++) {\n        path.push(stack[i].tagName);\n    }\n    if (currentTagName) {\n        path.push(currentTagName);\n    }\n    return path.join('>');\n}\n// #[end]\n\n/* eslint-disable fecs-max-statements */\n\n/**\n * 解析 template\n *\n * @param {string} source template源码\n * @param {Object?} options 解析参数\n * @param {string?} options.trimWhitespace 空白文本的处理策略。none|blank|all\n * @param {Array?} options.delimiters 插值分隔符列表\n * @return {ANode}\n */\nfunction parseTemplate(source, options) {\n    options = options || {};\n    options.trimWhitespace = options.trimWhitespace || 'none';\n\n    var rootNode = createANode();\n\n    if (typeof source !== 'string') {\n        return rootNode;\n    }\n\n    source = source.replace(/<!--([\\s\\S]*?)-->/mg, '').replace(/(^\\s+|\\s+$)/g, '');\n    var walker = new Walker(source);\n\n    var tagReg = /<(\\/)?([a-z0-9-]+)\\s*/ig;\n    var attrReg = /([-:0-9a-z\\(\\)\\[\\]]+)(\\s*=\\s*(['\"])([^\\3]*?)\\3)?\\s*/ig;\n\n    var tagMatch;\n    var currentNode = rootNode;\n    var stack = [rootNode];\n    var stackIndex = 0;\n    var beforeLastIndex = 0;\n\n    while ((tagMatch = walker.match(tagReg)) != null) {\n        var tagEnd = tagMatch[1];\n        var tagName = tagMatch[2].toLowerCase();\n\n        pushTextNode(source.slice(\n            beforeLastIndex,\n            walker.index - tagMatch[0].length\n        ));\n\n        // 62: >\n        // 47: /\n        // 处理 </xxxx >\n        if (tagEnd && walker.currentCode() === 62) {\n            // 满足关闭标签的条件时，关闭标签\n            // 向上查找到对应标签，找不到时忽略关闭\n            var closeIndex = stackIndex;\n\n            // #[begin] error\n            // 如果正在闭合一个自闭合的标签，例如 </input>，报错\n            if (autoCloseTags[tagName]) {\n                throw new Error(''\n                    + '[SAN ERROR] ' + getXPath(stack, tagName) + ' is a `auto closed` tag, '\n                    + 'so it cannot be closed with </' + tagName + '>'\n                );\n            }\n\n            // 如果关闭的 tag 和当前打开的不一致，报错\n            if (\n                stack[closeIndex].tagName !== tagName\n                // 这里要把 table 自动添加 tbody 的情况给去掉\n                && !(tagName === 'table' && stack[closeIndex].tagName === 'tbody')\n            ) {\n                throw new Error('[SAN ERROR] ' + getXPath(stack) + ' is closed with ' + tagName);\n            }\n            // #[end]\n\n            while (closeIndex > 0 && stack[closeIndex].tagName !== tagName) {\n                closeIndex--;\n            }\n\n            if (closeIndex > 0) {\n                stackIndex = closeIndex - 1;\n                currentNode = stack[stackIndex];\n            }\n            walker.go(1);\n        }\n\n        // #[begin] error\n        // 处理 </xxx 非正常闭合标签\n        else if (tagEnd) {\n\n            // 如果闭合标签时，匹配后的下一个字符是 <，即下一个标签的开始，那么当前闭合标签未闭合\n            if (walker.currentCode() === 60) {\n                throw new Error(''\n                    + '[SAN ERROR] ' + getXPath(stack)\n                    + '\\'s close tag not closed'\n                );\n            }\n\n            // 闭合标签有属性\n            throw new Error(''\n                + '[SAN ERROR] ' + getXPath(stack)\n                + '\\'s close tag has attributes'\n            );\n\n        }\n        // #[end]\n\n        else if (!tagEnd) {\n            var aElement = createANode({\n                tagName: tagName\n            });\n            var tagClose = autoCloseTags[tagName];\n\n            // 解析 attributes\n\n            /* eslint-disable no-constant-condition */\n            while (1) {\n            /* eslint-enable no-constant-condition */\n\n                var nextCharCode = walker.currentCode();\n\n                // 标签结束时跳出 attributes 读取\n                // 标签可能直接结束或闭合结束\n                if (nextCharCode === 62) {\n                    walker.go(1);\n                    break;\n                }\n                // 遇到 /> 按闭合处理\n                else if (nextCharCode === 47\n                    && walker.charCode(walker.index + 1) === 62\n                ) {\n                    walker.go(2);\n                    tagClose = 1;\n                    break;\n                }\n\n                // #[begin] error\n                // 在处理一个 open 标签时，如果遇到了 <， 即下一个标签的开始，则当前标签未能正常闭合，报错\n                if (nextCharCode === 60) {\n                    throw new Error('[SAN ERROR] ' + getXPath(stack, tagName) + ' is not closed');\n                }\n                // #[end]\n\n                // 读取 attribute\n                var attrMatch = walker.match(attrReg);\n                if (attrMatch) {\n\n                    // #[begin] error\n                    // 如果属性有 =，但没取到 value，报错\n                    if (\n                        walker.charCode(attrMatch.index + attrMatch[1].length) === 61\n                        && !attrMatch[2]\n                    ) {\n                        throw new Error(''\n                            + '[SAN ERROR] ' + getXPath(stack, tagName) + ' attribute `'\n                            + attrMatch[1] + '` is not wrapped with \"\"'\n                        );\n                    }\n                    // #[end]\n\n                    integrateAttr(\n                        aElement,\n                        attrMatch[1],\n                        attrMatch[2] ? attrMatch[4] : '',\n                        options\n                    );\n                }\n\n            }\n\n            // match if directive for else/elif directive\n            var elseDirective = aElement.directives['else'] || aElement.directives.elif; // eslint-disable-line dot-notation\n            if (elseDirective) {\n                var parentChildrenLen = currentNode.children.length;\n\n                while (parentChildrenLen--) {\n                    var parentChild = currentNode.children[parentChildrenLen];\n                    if (parentChild.textExpr) {\n                        currentNode.children.splice(parentChildrenLen, 1);\n                        continue;\n                    }\n\n                    // #[begin] error\n                    if (!parentChild.directives['if']) { // eslint-disable-line dot-notation\n                        throw new Error('[SAN FATEL] else not match if.');\n                    }\n                    // #[end]\n\n                    parentChild.elses = parentChild.elses || [];\n                    parentChild.elses.push(aElement);\n\n                    break;\n                }\n            }\n            else {\n                if (aElement.tagName === 'tr' && currentNode.tagName === 'table') {\n                    var tbodyNode = createANode({\n                        tagName: 'tbody'\n                    });\n                    currentNode.children.push(tbodyNode);\n                    currentNode = tbodyNode;\n                    stack[++stackIndex] = tbodyNode;\n                }\n\n                currentNode.children.push(aElement);\n            }\n\n            if (!tagClose) {\n                currentNode = aElement;\n                stack[++stackIndex] = aElement;\n            }\n        }\n\n        beforeLastIndex = walker.index;\n    }\n\n    pushTextNode(walker.cut(beforeLastIndex));\n\n    return rootNode;\n\n    /**\n     * 在读取栈中添加文本节点\n     *\n     * @inner\n     * @param {string} text 文本内容\n     */\n    function pushTextNode(text) {\n        switch (options.trimWhitespace) {\n            case 'blank':\n                if (/^\\s+$/.test(text)) {\n                    text = null;\n                }\n                break;\n\n            case 'all':\n                text = text.replace(/(^\\s+|\\s+$)/g, '');\n                break;\n        }\n\n        if (text) {\n            currentNode.children.push(createANode({\n                textExpr: parseText(text, options.delimiters)\n            }));\n        }\n    }\n}\n\n/* eslint-enable fecs-max-statements */\n\n// exports = module.exports = parseTemplate;\n\n\n/**\n * @file 默认filter\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n/* eslint-disable fecs-camelcase */\n/* eslint-disable guard-for-in */\n\n/**\n * 默认filter\n *\n * @const\n * @type {Object}\n */\nvar DEFAULT_FILTERS = {\n\n    /**\n     * URL编码filter\n     *\n     * @param {string} source 源串\n     * @return {string} 替换结果串\n     */\n    url: encodeURIComponent,\n\n    _class: function (source) {\n        if (source instanceof Array) {\n            return source.join(' ');\n        }\n\n        return source;\n    },\n\n    _style: function (source) {\n        if (typeof source === 'object') {\n            var result = '';\n            for (var key in source) {\n                result += key + ':' + source[key] + ';';\n            }\n\n            return result;\n        }\n\n        return source;\n    },\n\n    _sep: function (source, sep) {\n        return source ? sep + source : source;\n    }\n};\n/* eslint-enable fecs-camelcase */\n\n// exports = module.exports = DEFAULT_FILTERS;\n\n\n/**\n * @file 表达式计算\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('../parser/expr-type');\n// var DEFAULT_FILTERS = require('./default-filters');\n// var evalArgs = require('./eval-args');\n// var dataCache = require('./data-cache');\n\n/**\n * 计算表达式的值\n *\n * @param {Object} expr 表达式对象\n * @param {Data} data 数据容器对象\n * @param {Component=} owner 所属组件环境\n * @return {*}\n */\nfunction evalExpr(expr, data, owner) {\n    if (expr.value != null) {\n        return expr.value;\n    }\n\n    var value = dataCache.get(data, expr);\n\n    if (value == null) {\n        switch (expr.type) {\n            case ExprType.UNARY:\n                value = !evalExpr(expr.expr, data, owner);\n                break;\n\n            case ExprType.BINARY:\n                var leftValue = evalExpr(expr.segs[0], data, owner);\n                var rightValue = evalExpr(expr.segs[1], data, owner);\n\n                /* eslint-disable eqeqeq */\n                switch (expr.operator) {\n                    case 37:\n                        value = leftValue % rightValue;\n                        break;\n                    case 43:\n                        value = leftValue + rightValue;\n                        break;\n                    case 45:\n                        value = leftValue - rightValue;\n                        break;\n                    case 42:\n                        value = leftValue * rightValue;\n                        break;\n                    case 47:\n                        value = leftValue / rightValue;\n                        break;\n                    case 60:\n                        value = leftValue < rightValue;\n                        break;\n                    case 62:\n                        value = leftValue > rightValue;\n                        break;\n                    case 76:\n                        value = leftValue && rightValue;\n                        break;\n                    case 94:\n                        value = leftValue != rightValue;\n                        break;\n                    case 121:\n                        value = leftValue <= rightValue;\n                        break;\n                    case 122:\n                        value = leftValue == rightValue;\n                        break;\n                    case 123:\n                        value = leftValue >= rightValue;\n                        break;\n                    case 155:\n                        value = leftValue !== rightValue;\n                        break;\n                    case 183:\n                        value = leftValue === rightValue;\n                        break;\n                    case 248:\n                        value = leftValue || rightValue;\n                        break;\n                }\n                /* eslint-enable eqeqeq */\n                break;\n\n            case ExprType.TERTIARY:\n                value = evalExpr(\n                    expr.segs[evalExpr(expr.segs[0], data, owner) ? 1 : 2],\n                    data,\n                    owner\n                );\n                break;\n\n            case ExprType.ACCESSOR:\n                value = data.get(expr);\n                break;\n\n            case ExprType.INTERP:\n                value = evalExpr(expr.expr, data, owner);\n\n                if (owner) {\n                    for (var i = 0, l = expr.filters.length; i < l; i++) {\n                        var filter = expr.filters[i];\n                        var filterName = filter.name.paths[0].value;\n\n                        if (owner.filters[filterName]) {\n                            value = owner.filters[filterName].apply(\n                                owner,\n                                [value].concat(evalArgs(filter.args, data, owner))\n                            );\n                        }\n                        else if (DEFAULT_FILTERS[filterName]) {\n                            value = DEFAULT_FILTERS[filterName](\n                                value,\n                                filter.args[0] ? filter.args[0].value : ''\n                            );\n                        }\n                    }\n                }\n\n                if (value == null) {\n                    value = '';\n                }\n\n                break;\n\n            /* eslint-disable no-redeclare */\n            case ExprType.TEXT:\n                var buf = '';\n                for (var i = 0, l = expr.segs.length; i < l; i++) {\n                    var seg = expr.segs[i];\n                    buf += seg.value || evalExpr(seg, data, owner);\n                }\n                return buf;\n        }\n\n        dataCache.set(data, expr, value);\n    }\n\n    return value;\n}\n\n// exports = module.exports = evalExpr;\n\n\n/**\n * @file 为函数调用计算参数数组的值\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var evalExpr = require('../runtime/eval-expr');\n\n/**\n * 为函数调用计算参数数组的值\n *\n * @param {Array} args 参数表达式列表\n * @param {Data} data 数据环境\n * @param {Component} owner 组件环境\n * @return {Array}\n */\nfunction evalArgs(args, data, owner) {\n    var result = [];\n    for (var i = 0; i < args.length; i++) {\n        result.push(evalExpr(args[i], data, owner));\n    }\n\n    return result;\n}\n\n// exports = module.exports = evalArgs;\n\n\n/**\n * @file 数据缓存管理器\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n\nvar dataCacheSource = {};\nvar dataCacheClearly = 1;\n\n/**\n * 数据缓存管理器\n *\n * @const\n * @type {Object}\n */\nvar dataCache = {\n    clear: function () {\n        if (!dataCacheClearly) {\n            dataCacheClearly = 1;\n            dataCacheSource = {};\n        }\n    },\n\n    set: function (data, expr, value) {\n        if (expr.raw) {\n            dataCacheClearly = 0;\n            (dataCacheSource[data.id] = dataCacheSource[data.id] || {})[expr.raw] = value;\n        }\n    },\n\n    get: function (data, expr) {\n        if (expr.raw && dataCacheSource[data.id]) {\n            return dataCacheSource[data.id][expr.raw];\n        }\n    }\n};\n\n\n// exports = module.exports = dataCache;\n\n\n/**\n * @file 比较变更表达式与目标表达式之间的关系\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('../parser/expr-type');\n// var evalExpr = require('./eval-expr');\n// var each = require('../util/each');\n\n/**\n * 判断变更表达式与多个表达式之间的关系，0为完全没关系，1为有关系\n *\n * @inner\n * @param {Object} changeExpr 目标表达式\n * @param {Array} exprs 多个源表达式\n * @param {Data} data 表达式所属数据环境\n * @return {number}\n */\nfunction changeExprCompareExprs(changeExpr, exprs, data) {\n    for (var i = 0, l = exprs.length; i < l; i++) {\n        if (changeExprCompare(changeExpr, exprs[i], data)) {\n            return 1;\n        }\n    }\n\n    return 0;\n}\n\n/**\n * 比较变更表达式与目标表达式之间的关系，用于视图更新判断\n * 视图更新需要根据其关系，做出相应的更新行为\n *\n * 0: 完全没关系\n * 1: 变更表达式是目标表达式的母项(如a与a.b) 或 表示需要完全变化\n * 2: 变更表达式是目标表达式相等\n * >2: 变更表达式是目标表达式的子项，如a.b.c与a.b\n *\n * @param {Object} changeExpr 变更表达式\n * @param {Object} expr 要比较的目标表达式\n * @param {Data} data 表达式所属数据环境\n * @return {number}\n */\nfunction changeExprCompare(changeExpr, expr, data) {\n    switch (expr.type) {\n        case ExprType.ACCESSOR:\n            var paths = expr.paths;\n            var len = paths.length;\n            var changePaths = changeExpr.paths;\n            var changeLen = changePaths.length;\n\n            var result = 1;\n            for (var i = 0; i < len; i++) {\n                var pathExpr = paths[i];\n\n                if (pathExpr.type === ExprType.ACCESSOR\n                    && changeExprCompare(changeExpr, pathExpr, data)\n                ) {\n                    return 1;\n                }\n\n                if (result && i < changeLen\n                    /* eslint-disable eqeqeq */\n                    && (pathExpr.value || evalExpr(pathExpr, data))\n                        != (changePaths[i].value || evalExpr(changePaths[i], data))\n                    /* eslint-enable eqeqeq */\n                ) {\n                    result = 0;\n                }\n            }\n\n            if (result) {\n                result = Math.max(1, changeLen - len + 2);\n            }\n            return result;\n\n        case ExprType.UNARY:\n            return changeExprCompare(changeExpr, expr.expr, data) ? 1 : 0;\n\n\n        case ExprType.TEXT:\n        case ExprType.BINARY:\n        case ExprType.TERTIARY:\n            return changeExprCompareExprs(changeExpr, expr.segs, data);\n\n        case ExprType.INTERP:\n            if (!changeExprCompare(changeExpr, expr.expr, data)) {\n                var filterResult;\n                each(expr.filters, function (filter) {\n                    filterResult = changeExprCompareExprs(changeExpr, filter.args, data);\n                    return !filterResult;\n                });\n\n                return filterResult ? 1 : 0;\n            }\n\n            return 1;\n    }\n\n    return 0;\n}\n\n// exports = module.exports = changeExprCompare;\n\n\n/**\n * @file 数据变更类型枚举\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 数据变更类型枚举\n *\n * @const\n * @type {Object}\n */\nvar DataChangeType = {\n    SET: 1,\n    SPLICE: 2\n};\n\n// exports = module.exports = DataChangeType;\n\n\n/**\n * @file 生命周期类\n * @author errorrik(errorrik@gmail.com)\n */\n\nfunction lifeCycleOwnIs(name) {\n    return this[name];\n}\n\n/* eslint-disable fecs-valid-var-jsdoc */\n/**\n * 节点生命周期信息\n *\n * @inner\n * @type {Object}\n */\nvar LifeCycle = {\n    start: {},\n\n    compiled: {\n        is: lifeCycleOwnIs,\n        compiled: true\n    },\n\n    inited: {\n        is: lifeCycleOwnIs,\n        compiled: true,\n        inited: true\n    },\n\n    painting: {\n        is: lifeCycleOwnIs,\n        compiled: true,\n        inited: true,\n        painting: true\n    },\n\n    created: {\n        is: lifeCycleOwnIs,\n        compiled: true,\n        inited: true,\n        created: true\n    },\n\n    attached: {\n        is: lifeCycleOwnIs,\n        compiled: true,\n        inited: true,\n        created: true,\n        attached: true\n    },\n\n    leaving: {\n        is: lifeCycleOwnIs,\n        compiled: true,\n        inited: true,\n        created: true,\n        attached: true,\n        leaving: true\n    },\n\n    detached: {\n        is: lifeCycleOwnIs,\n        compiled: true,\n        inited: true,\n        created: true,\n        detached: true\n    },\n\n    disposed: {\n        is: lifeCycleOwnIs,\n        disposed: true\n    }\n};\n/* eslint-enable fecs-valid-var-jsdoc */\n\n\n// exports = module.exports = LifeCycle;\n\n\n/**\n * @file 节点类型\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 节点类型\n *\n * @const\n * @type {Object}\n */\nvar NodeType = {\n    TEXT: 1,\n    IF: 2,\n    FOR: 3,\n    ELEM: 4,\n    CMPT: 5,\n    SLOT: 6,\n    TPL: 7\n};\n\n// exports = module.exports = NodeType;\n\n\n/**\n * @file 获取 ANode props 数组中相应 name 的项\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 获取 ANode props 数组中相应 name 的项\n *\n * @param {Object} aNode ANode对象\n * @param {string} name name属性匹配串\n * @return {Object}\n */\nfunction getANodeProp(aNode, name) {\n    var index = aNode.hotspot.props[name];\n    if (index != null) {\n        return aNode.props[index];\n    }\n}\n\n// exports = module.exports = getANodeProp;\n\n\n/**\n * @file 获取属性处理对象\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var contains = require('../util/contains');\n// var empty = require('../util/empty');\n// var svgTags = require('../browser/svg-tags');\n// var evalExpr = require('../runtime/eval-expr');\n// var getANodeProp = require('./get-a-node-prop');\n// var NodeType = require('./node-type');\n\n\n/**\n * HTML 属性和 DOM 操作属性的对照表\n *\n * @inner\n * @const\n * @type {Object}\n */\nvar HTML_ATTR_PROP_MAP = {\n    'readonly': 'readOnly',\n    'cellpadding': 'cellPadding',\n    'cellspacing': 'cellSpacing',\n    'colspan': 'colSpan',\n    'rowspan': 'rowSpan',\n    'valign': 'vAlign',\n    'usemap': 'useMap',\n    'frameborder': 'frameBorder',\n    'for': 'htmlFor'\n};\n\n/**\n * 默认的元素的属性设置的变换方法\n *\n * @inner\n * @type {Object}\n */\nvar defaultElementPropHandler = {\n    prop: function (el, value, name, element) {\n        var propName = HTML_ATTR_PROP_MAP[name] || name;\n\n        // input 的 type 是个特殊属性，其实也应该用 setAttribute\n        // 但是 type 不应该运行时动态改变，否则会有兼容性问题\n        // 所以这里直接就不管了\n        if (propName in el) {\n            el[propName] = value == null ? '' : value;\n        }\n        else {\n            el.setAttribute(name, value);\n        }\n\n        // attribute 绑定的是 text，所以不会出现 null 的情况，这里无需处理\n        // 换句话来说，san 是做不到 attribute 时有时无的\n        // if (value == null) {\n        //     el.removeAttribute(name);\n        // }\n    },\n\n    output: function (element, bindInfo, data) {\n        data.set(bindInfo.expr, element.el[bindInfo.name], {\n            target: {\n                id: element.id,\n                prop: bindInfo.name\n            }\n        });\n    }\n};\n\nvar svgPropHandler = {\n    prop: function (el, value, name) {\n        el.setAttribute(name, value);\n    }\n};\n\nvar boolPropHandler = {\n    prop: function (el, value, name, element, prop) {\n        var propName = HTML_ATTR_PROP_MAP[name] || name;\n        el[propName] = !!(prop && prop.raw === ''\n            || value && value !== 'false' && value !== '0');\n    }\n};\n\n/* eslint-disable fecs-properties-quote */\n/**\n * 默认的属性设置变换方法\n *\n * @inner\n * @type {Object}\n */\nvar defaultElementPropHandlers = {\n    style: {\n        prop: function (el, value) {\n            el.style.cssText = value;\n        }\n    },\n\n    'class': { // eslint-disable-line\n        prop: function (el, value) {\n            el.className = value;\n        }\n    },\n\n    slot: {\n        prop: empty\n    },\n\n    readonly: boolPropHandler,\n    disabled: boolPropHandler,\n    autofocus: boolPropHandler,\n    required: boolPropHandler,\n    draggable: boolPropHandler\n};\n/* eslint-enable fecs-properties-quote */\n\nvar analInputChecker = {\n    checkbox: contains,\n    radio: function (a, b) {\n        return a === b;\n    }\n};\n\nfunction analInputCheckedState(element, value, oper) {\n    var bindValue = getANodeProp(element.aNode, 'value');\n    var bindType = getANodeProp(element.aNode, 'type');\n\n    if (bindValue && bindType) {\n        var type = evalExpr(bindType.expr, element.scope, element.owner);\n\n        if (analInputChecker[type]) {\n            var bindChecked = getANodeProp(element.aNode, 'checked');\n            if (!bindChecked.hintExpr) {\n                bindChecked.hintExpr = bindValue.expr;\n            }\n\n            return !!analInputChecker[type](\n                value,\n                evalExpr(bindValue.expr, element.scope, element.owner)\n            );\n        }\n    }\n}\n\nvar elementPropHandlers = {\n    input: {\n        multiple: boolPropHandler,\n        checked: {\n            prop: function (el, value, name, element) {\n                var state = analInputCheckedState(element, value);\n\n                boolPropHandler.prop(\n                    el,\n                    state != null ? state : value,\n                    'checked',\n                    element\n                );\n            },\n\n            output: function (element, bindInfo, data) {\n                var el = element.el;\n                var bindValue = getANodeProp(element.aNode, 'value');\n                var bindType = getANodeProp(element.aNode, 'type') || {};\n\n                if (bindValue && bindType) {\n                    switch (bindType.raw) {\n                        case 'checkbox':\n                            data[el.checked ? 'push' : 'remove'](bindInfo.expr, el.value);\n                            return;\n\n                        case 'radio':\n                            el.checked && data.set(bindInfo.expr, el.value, {\n                                target: {\n                                    id: element.id,\n                                    prop: bindInfo.name\n                                }\n                            });\n                            return;\n                    }\n                }\n\n                defaultElementPropHandler.output(element, bindInfo, data);\n            }\n        }\n    },\n\n    option: {\n        value: {\n            prop: function (el, value, name, element) {\n                defaultElementPropHandler.prop(el, value, name, element);\n\n                if (isOptionSelected(element, value)) {\n                    el.selected = true;\n                }\n            }\n        }\n    },\n\n    select: {\n        value: {\n            prop: function (el, value) {\n                el.value = value || '';\n            },\n\n            output: defaultElementPropHandler.output\n        }\n    }\n};\n\nfunction isOptionSelected(element, value) {\n    var parentSelect = element.parent;\n    while (parentSelect) {\n        if (parentSelect.tagName === 'select') {\n            break;\n        }\n\n        parentSelect = parentSelect.parent;\n    }\n\n\n    if (parentSelect) {\n        var selectValue = null;\n        var prop;\n        var expr;\n\n        if ((prop = getANodeProp(parentSelect.aNode, 'value'))\n            && (expr = prop.expr)\n        ) {\n            selectValue = parentSelect.nodeType === NodeType.CMPT\n                ? evalExpr(expr, parentSelect.data, parentSelect)\n                : evalExpr(expr, parentSelect.scope, parentSelect.owner)\n                || '';\n        }\n\n        if (selectValue === value) {\n            return 1;\n        }\n    }\n}\n\n\n/**\n * 获取属性处理对象\n *\n * @param {string} tagName 元素tag\n * @param {string} attrName 属性名\n * @return {Object}\n */\nfunction getPropHandler(tagName, attrName) {\n    if (svgTags[tagName]) {\n        return svgPropHandler;\n    }\n\n    var tagPropHandlers = elementPropHandlers[tagName];\n    if (!tagPropHandlers) {\n        tagPropHandlers = elementPropHandlers[tagName] = {};\n    }\n\n    var propHandler = tagPropHandlers[attrName];\n    if (!propHandler) {\n        propHandler = defaultElementPropHandlers[attrName] || defaultElementPropHandler;\n        tagPropHandlers[attrName] = propHandler;\n    }\n\n    return propHandler;\n}\n\n// exports = module.exports = getPropHandler;\n\n\n/**\n * @file 判断变更是否来源于元素\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 判断变更是否来源于元素，来源于元素时，视图更新需要阻断\n *\n * @param {Object} change 变更对象\n * @param {Element} element 元素\n * @param {string?} propName 属性名，可选。需要精确判断是否来源于此属性时传入\n * @return {boolean}\n */\nfunction isDataChangeByElement(change, element, propName) {\n    var changeTarget = change.option.target;\n    return changeTarget && changeTarget.id === element.id\n        && (!propName || changeTarget.prop === propName);\n}\n\n// exports = module.exports = isDataChangeByElement;\n\n\n/**\n * @file 在对象上使用accessor表达式查找方法\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var evalExpr = require('../runtime/eval-expr');\n\n/**\n * 在对象上使用accessor表达式查找方法\n *\n * @param {Object} source 源对象\n * @param {Object} nameExpr 表达式\n * @param {Data} data 所属数据环境\n * @return {Function}\n */\nfunction findMethod(source, nameExpr, data) {\n    var method = source;\n\n    for (var i = 0; method != null && i < nameExpr.paths.length; i++) {\n        method = method[evalExpr(nameExpr.paths[i], data)];\n    }\n\n    return method;\n}\n\n// exports = module.exports = findMethod;\n\n\n/**\n * @file 数据类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('../parser/expr-type');\n// var evalExpr = require('./eval-expr');\n// var DataChangeType = require('./data-change-type');\n// var createAccessor = require('../parser/create-accessor');\n// var parseExpr = require('../parser/parse-expr');\n// var guid = require('../util/guid');\n// var dataCache = require('./data-cache');\n\n/**\n * 数据类\n *\n * @class\n * @param {Object?} data 初始数据\n * @param {Model?} parent 父级数据容器\n */\nfunction Data(data, parent) {\n    this.id = guid();\n    this.parent = parent;\n    this.raw = data || {};\n    this.listeners = [];\n}\n\n// #[begin] error\n// 以下两个函数只在开发模式下可用，在生产模式下不存在\n/**\n * DataTypes 检测\n */\nData.prototype.checkDataTypes = function () {\n    if (this.typeChecker) {\n        this.typeChecker(this.raw);\n    }\n};\n\n/**\n * 设置 type checker\n *\n * @param  {Function} typeChecker 类型校验器\n */\nData.prototype.setTypeChecker = function (typeChecker) {\n    this.typeChecker = typeChecker;\n};\n\n// #[end]\n\n/**\n * 添加数据变更的事件监听器\n *\n * @param {Function} listener 监听函数\n */\nData.prototype.listen = function (listener) {\n    if (typeof listener === 'function') {\n        this.listeners.push(listener);\n    }\n};\n\n/**\n * 移除数据变更的事件监听器\n *\n * @param {Function} listener 监听函数\n */\nData.prototype.unlisten = function (listener) {\n    var len = this.listeners.length;\n    while (len--) {\n        if (!listener || this.listeners[len] === listener) {\n            this.listeners.splice(len, 1);\n        }\n    }\n};\n\n/**\n * 触发数据变更\n *\n * @param {Object} change 变更信息对象\n */\nData.prototype.fire = function (change) {\n    if (change.option.silent || change.option.silence || change.option.quiet) {\n        return;\n    }\n\n    for (var i = 0; i < this.listeners.length; i++) {\n        this.listeners[i].call(this, change);\n    }\n};\n\n/**\n * 获取数据项\n *\n * @param {string|Object?} expr 数据项路径\n * @param {Data?} callee 当前数据获取的调用环境\n * @return {*}\n */\nData.prototype.get = function (expr, callee) {\n    var value = this.raw;\n    if (!expr) {\n        return value;\n    }\n\n    expr = parseExpr(expr);\n\n    var paths = expr.paths;\n    callee = callee || this;\n\n    value = value[paths[0].value];\n\n    if (value == null && this.parent) {\n        value = this.parent.get(expr, callee);\n    }\n    else {\n        for (var i = 1, l = paths.length; value != null && i < l; i++) {\n            value = value[paths[i].value || evalExpr(paths[i], callee)];\n        }\n    }\n\n    return value;\n};\n\n\n/**\n * 数据对象变更操作\n *\n * @inner\n * @param {Object|Array} source 要变更的源数据\n * @param {Array} exprPaths 属性路径\n * @param {*} value 变更属性值\n * @param {Data} data 对应的Data对象\n * @return {*} 变更后的新数据\n */\nfunction immutableSet(source, exprPaths, value, data) {\n    if (exprPaths.length === 0) {\n        return value;\n    }\n\n    var prop = evalExpr(exprPaths[0], data);\n    var result;\n\n    if (source instanceof Array) {\n        var index = +prop;\n\n        result = source.slice(0);\n        result[isNaN(index) ? prop : index] = immutableSet(source[index], exprPaths.slice(1), value, data);\n\n        return result;\n    }\n    else if (typeof source === 'object') {\n        result = {};\n\n        for (var key in source) {\n            if (key !== prop) {\n                result[key] = source[key];\n            }\n        }\n\n        result[prop] = immutableSet(source[prop] || {}, exprPaths.slice(1), value, data);\n\n        return result;\n    }\n\n    return source;\n}\n\n/**\n * 设置数据项\n *\n * @param {string|Object} expr 数据项路径\n * @param {*} value 数据值\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n */\nData.prototype.set = function (expr, value, option) {\n    option = option || {};\n\n    // #[begin] error\n    var exprRaw = expr;\n    // #[end]\n\n    expr = parseExpr(expr);\n\n    // #[begin] error\n    if (expr.type !== ExprType.ACCESSOR) {\n        throw new Error('[SAN ERROR] Invalid Expression in Data set: ' + exprRaw);\n    }\n    // #[end]\n\n    if (this.get(expr) === value && !option.force) {\n        return;\n    }\n\n    dataCache.clear();\n    this.raw = immutableSet(this.raw, expr.paths, value, this);\n    this.fire({\n        type: DataChangeType.SET,\n        expr: expr,\n        value: value,\n        option: option\n    });\n\n    // #[begin] error\n    this.checkDataTypes();\n    // #[end]\n\n};\n\n/**\n * 合并更新数据项\n *\n * @param {string|Object} expr 数据项路径\n * @param {Object} source 待合并的数据值\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n */\nData.prototype.merge = function (expr, source, option) {\n    option = option || {};\n\n    // #[begin] error\n    var exprRaw = expr;\n    // #[end]\n\n    expr = parseExpr(expr);\n\n    // #[begin] error\n    if (expr.type !== ExprType.ACCESSOR) {\n        throw new Error('[SAN ERROR] Invalid Expression in Data merge: ' + exprRaw);\n    }\n\n    if (typeof this.get(expr) !== 'object') {\n        throw new Error('[SAN ERROR] Merge Expects a Target of Type \\'object\\'; got ' + typeof oldValue);\n    }\n\n    if (typeof source !== 'object') {\n        throw new Error('[SAN ERROR] Merge Expects a Source of Type \\'object\\'; got ' + typeof source);\n    }\n    // #[end]\n\n    for (var key in source) { // eslint-disable-line\n        this.set(\n            createAccessor(\n                expr.paths.concat(\n                    [\n                        {\n                            type: ExprType.STRING,\n                            value: key\n                        }\n                    ]\n                )\n            ),\n            source[key],\n            option\n        );\n    }\n};\n\n/**\n * 基于更新函数更新数据项\n *\n * @param {string|Object} expr 数据项路径\n * @param {Function} fn 数据处理函数\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n */\nData.prototype.apply = function (expr, fn, option) {\n    // #[begin] error\n    var exprRaw = expr;\n    // #[end]\n\n    expr = parseExpr(expr);\n\n    // #[begin] error\n    if (expr.type !== ExprType.ACCESSOR) {\n        throw new Error('[SAN ERROR] Invalid Expression in Data apply: ' + exprRaw);\n    }\n    // #[end]\n\n    var oldValue = this.get(expr);\n\n    // #[begin] error\n    if (typeof fn !== 'function') {\n        throw new Error(\n            '[SAN ERROR] Invalid Argument\\'s Type in Data apply: '\n            + 'Expected Function but got ' + typeof fn\n        );\n    }\n    // #[end]\n\n    this.set(expr, fn(oldValue), option);\n};\n\n/**\n * 数组数据项splice操作\n *\n * @param {string|Object} expr 数据项路径\n * @param {Array} args splice 接受的参数列表，数组项与Array.prototype.splice的参数一致\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n * @return {Array} 新数组\n */\nData.prototype.splice = function (expr, args, option) {\n    option = option || {};\n    // #[begin] error\n    var exprRaw = expr;\n    // #[end]\n\n    expr = parseExpr(expr);\n\n    // #[begin] error\n    if (expr.type !== ExprType.ACCESSOR) {\n        throw new Error('[SAN ERROR] Invalid Expression in Data splice: ' + exprRaw);\n    }\n    // #[end]\n\n    var target = this.get(expr);\n    var returnValue = [];\n\n    if (target instanceof Array) {\n        var index = args[0];\n        if (index < 0 || index > target.length) {\n            return;\n        }\n\n        var newArray = target.slice(0);\n        returnValue = newArray.splice.apply(newArray, args);\n        dataCache.clear();\n        this.raw = immutableSet(this.raw, expr.paths, newArray, this);\n\n        this.fire({\n            expr: expr,\n            type: DataChangeType.SPLICE,\n            index: index,\n            deleteCount: returnValue.length,\n            value: returnValue,\n            insertions: args.slice(2),\n            option: option\n        });\n    }\n\n    // #[begin] error\n    this.checkDataTypes();\n    // #[end]\n\n    return returnValue;\n};\n\n/**\n * 数组数据项push操作\n *\n * @param {string|Object} expr 数据项路径\n * @param {*} item 要push的值\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n * @return {number} 新数组的length属性\n */\nData.prototype.push = function (expr, item, option) {\n    var target = this.get(expr);\n\n    if (target instanceof Array) {\n        this.splice(expr, [target.length, 0, item], option);\n        return target.length + 1;\n    }\n};\n\n/**\n * 数组数据项pop操作\n *\n * @param {string|Object} expr 数据项路径\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n * @return {*}\n */\nData.prototype.pop = function (expr, option) {\n    var target = this.get(expr);\n\n    if (target instanceof Array) {\n        var len = target.length;\n        if (len) {\n            return this.splice(expr, [len - 1, 1], option)[0];\n        }\n    }\n};\n\n/**\n * 数组数据项shift操作\n *\n * @param {string|Object} expr 数据项路径\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n * @return {*}\n */\nData.prototype.shift = function (expr, option) {\n    return this.splice(expr, [0, 1], option)[0];\n};\n\n/**\n * 数组数据项unshift操作\n *\n * @param {string|Object} expr 数据项路径\n * @param {*} item 要unshift的值\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n * @return {number} 新数组的length属性\n */\nData.prototype.unshift = function (expr, item, option) {\n    var target = this.get(expr);\n\n    if (target instanceof Array) {\n        this.splice(expr, [0, 0, item], option);\n        return target.length + 1;\n    }\n};\n\n/**\n * 数组数据项移除操作\n *\n * @param {string|Object} expr 数据项路径\n * @param {number} index 要移除项的索引\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n */\nData.prototype.removeAt = function (expr, index, option) {\n    this.splice(expr, [index, 1], option);\n};\n\n/**\n * 数组数据项移除操作\n *\n * @param {string|Object} expr 数据项路径\n * @param {*} value 要移除的项\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n */\nData.prototype.remove = function (expr, value, option) {\n    var target = this.get(expr);\n\n    if (target instanceof Array) {\n        var len = target.length;\n        while (len--) {\n            if (target[len] === value) {\n                this.splice(expr, [len, 1], option);\n                break;\n            }\n        }\n    }\n};\n\n// exports = module.exports = Data;\n\n\n/**\n * @file 声明式事件的监听函数\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var evalArgs = require('../runtime/eval-args');\n// var findMethod = require('../runtime/find-method');\n// var Data = require('../runtime/data');\n\n/**\n * 声明式事件的监听函数\n *\n * @param {Object} eventBind 绑定信息对象\n * @param {boolean} isComponentEvent 是否组件自定义事件\n * @param {Data} data 数据环境\n * @param {Event} e 事件对象\n */\nfunction eventDeclarationListener(eventBind, isComponentEvent, data, e) {\n    var method = findMethod(this, eventBind.expr.name, data);\n\n    if (typeof method === 'function') {\n        var scope = new Data(\n            {$event: isComponentEvent ? e : e || window.event},\n            data\n        );\n        method.apply(this, evalArgs(eventBind.expr.args, scope, this));\n    }\n}\n\n// exports = module.exports = eventDeclarationListener;\n\n\n/**\n * @file 自闭合标签表\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var splitStr2Obj = require('../util/split-str-2-obj');\n\n/**\n * 自闭合标签列表\n *\n * @type {Object}\n */\nvar hotTags = splitStr2Obj('div,span,input,button,textarea,form,label,dl,dt,dd,ul,ol,li,a,b,u,h1,h2,h3,h4,h5,h6');\n\n// exports = module.exports = hotTags;\n\n\n/**\n * @file 是否浏览器环境\n * @author errorrik(errorrik@gmail.com)\n */\n\nvar isBrowser = typeof window !== 'undefined';\n\n// exports = module.exports = isBrowser;\n\n\n/**\n * @file insertBefore 方法的兼容性封装\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * insertBefore 方法的兼容性封装\n *\n * @param {HTMLNode} targetEl 要插入的节点\n * @param {HTMLElement} parentEl 父元素\n * @param {HTMLElement?} beforeEl 在此元素之前插入\n */\nfunction insertBefore(targetEl, parentEl, beforeEl) {\n    if (parentEl) {\n        if (beforeEl) {\n            parentEl.insertBefore(targetEl, beforeEl);\n        }\n        else {\n            parentEl.appendChild(targetEl);\n        }\n    }\n}\n\n// exports = module.exports = insertBefore;\n\n\n/**\n * @file 判断元素是否不允许设置HTML\n * @author errorrik(errorrik@gmail.com)\n */\n\n// some html elements cannot set innerHTML in old ie\n// see: https://msdn.microsoft.com/en-us/library/ms533897(VS.85).aspx\n\n/**\n * 判断元素是否不允许设置HTML\n *\n * @param {HTMLElement} el 要判断的元素\n * @return {boolean}\n */\nfunction noSetHTML(el) {\n    return /^(col|colgroup|frameset|style|table|tbody|tfoot|thead|tr|select)$/i.test(el.tagName);\n}\n\n// exports = module.exports = noSetHTML;\n\n\n/**\n * @file  获取节点 stump 的 comment\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var noSetHTML = require('../browser/no-set-html');\n\n// #[begin] error\n/**\n * 获取节点 stump 的 comment\n *\n * @param {HTMLElement} el HTML元素\n */\nfunction warnSetHTML(el) {\n    // dont warn if not in browser runtime\n    if (!(typeof window !== 'undefined' && typeof navigator !== 'undefined' && window.document)) {\n        return;\n    }\n\n    // some html elements cannot set innerHTML in old ie\n    // see: https://msdn.microsoft.com/en-us/library/ms533897(VS.85).aspx\n    if (noSetHTML(el)) {\n        var message = '[SAN WARNING] set html for element \"' + el.tagName\n            + '\" may cause an error in old IE';\n        /* eslint-disable no-console */\n        if (typeof console === 'object' && console.warn) {\n            console.warn(message);\n        }\n        else {\n            throw new Error(message);\n        }\n        /* eslint-enable no-console */\n    }\n}\n// #[end]\n\n// exports = module.exports = warnSetHTML;\n\n\n/**\n * @file 判断是否结束桩\n * @author errorrik(errorrik@gmail.com)\n */\n\n// #[begin] reverse\n/**\n * 判断是否结束桩\n *\n * @param {HTMLElement|HTMLComment} target 要判断的元素\n * @param {string} type 桩类型\n * @return {boolean}\n */\nfunction isEndStump(target, type) {\n    return target.nodeType === 8 && target.data === '/s-' + type;\n}\n// #[end]\n\n// exports = module.exports = isEndStump;\n\n\n/**\n * @file 获取节点在组件树中的路径\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var NodeType = require('./node-type');\n\n// #[begin] reverse\n/**\n * 获取节点在组件树中的路径\n *\n * @param {Node} node 节点对象\n * @return {Array}\n */\nfunction getNodePath(node) {\n    var nodePaths = [];\n    var nodeParent = node;\n    while (nodeParent) {\n        switch (nodeParent.nodeType) {\n            case NodeType.ELEM:\n                nodePaths.unshift(nodeParent.tagName);\n                break;\n\n            case NodeType.IF:\n                nodePaths.unshift('if');\n                break;\n\n            case NodeType.FOR:\n                nodePaths.unshift('for[' + nodeParent.anode.directives['for'].raw + ']'); // eslint-disable-line dot-notation\n                break;\n\n            case NodeType.SLOT:\n                nodePaths.unshift('slot[' + (nodeParent.name || 'default') + ']');\n                break;\n\n            case NodeType.TPL:\n                nodePaths.unshift('template');\n                break;\n\n            case NodeType.CMPT:\n                nodePaths.unshift('component[' + (nodeParent.subTag || 'root') + ']');\n                break;\n\n            case NodeType.TEXT:\n                nodePaths.unshift('text');\n                break;\n        }\n\n        nodeParent = nodeParent.parent;\n    }\n\n    return nodePaths;\n}\n// #[end]\n\n// exports = module.exports = getNodePath;\n\n\n/**\n * @file text 节点类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var isBrowser = require('../browser/is-browser');\n// var removeEl = require('../browser/remove-el');\n// var insertBefore = require('../browser/insert-before');\n// var changeExprCompare = require('../runtime/change-expr-compare');\n// var evalExpr = require('../runtime/eval-expr');\n// var NodeType = require('./node-type');\n// var warnSetHTML = require('./warn-set-html');\n// var isEndStump = require('./is-end-stump');\n// var getNodePath = require('./get-node-path');\n\n\n/**\n * text 节点类\n *\n * @param {Object} aNode 抽象节点\n * @param {Component} owner 所属组件环境\n * @param {Model=} scope 所属数据环境\n * @param {Node} parent 父亲节点\n * @param {DOMChildrenWalker?} reverseWalker 子元素遍历对象\n */\nfunction TextNode(aNode, owner, scope, parent, reverseWalker) {\n    this.aNode = aNode;\n    this.owner = owner;\n    this.scope = scope;\n    this.parent = parent;\n\n    // #[begin] reverse\n    if (reverseWalker) {\n        var currentNode = reverseWalker.current;\n        if (currentNode) {\n            switch (currentNode.nodeType) {\n                case 8:\n                    if (currentNode.data === 's-text') {\n                        this.sel = currentNode;\n                        currentNode.data = this.id;\n                        reverseWalker.goNext();\n\n                        while (1) { // eslint-disable-line\n                            currentNode = reverseWalker.current;\n                            if (!currentNode) {\n                                throw new Error('[SAN REVERSE ERROR] Text end flag not found. \\nPaths: '\n                                    + getNodePath(this).join(' > '));\n                            }\n\n                            if (isEndStump(currentNode, 'text')) {\n                                this.el = currentNode;\n                                reverseWalker.goNext();\n                                currentNode.data = this.id;\n                                break;\n                            }\n\n                            reverseWalker.goNext();\n                        }\n                    }\n                    break;\n\n                case 3:\n                    reverseWalker.goNext();\n                    if (!this.aNode.textExpr.original) {\n                        this.el = currentNode;\n                    }\n                    break;\n            }\n        }\n        else {\n            this.el = document.createTextNode('');\n            insertBefore(this.el, reverseWalker.target, reverseWalker.current);\n        }\n    }\n    // #[end]\n}\n\nTextNode.prototype.nodeType = NodeType.TEXT;\n\n/**\n * 将text attach到页面\n *\n * @param {HTMLElement} parentEl 要添加到的父元素\n * @param {HTMLElement＝} beforeEl 要添加到哪个元素之前\n */\nTextNode.prototype.attach = function (parentEl, beforeEl) {\n    this.content = evalExpr(this.aNode.textExpr, this.scope, this.owner);\n\n    if (this.aNode.textExpr.original) {\n        this.sel = document.createComment(this.id);\n        insertBefore(this.sel, parentEl, beforeEl);\n\n        this.el = document.createComment(this.id);\n        insertBefore(this.el, parentEl, beforeEl);\n\n        var tempFlag = document.createElement('script');\n        parentEl.insertBefore(tempFlag, this.el);\n        tempFlag.insertAdjacentHTML('beforebegin', this.content);\n        parentEl.removeChild(tempFlag);\n    }\n    else {\n        this.el = document.createTextNode(this.content);\n        insertBefore(this.el, parentEl, beforeEl);\n    }\n};\n\n/**\n * 销毁 text 节点\n */\nTextNode.prototype.dispose = function () {\n    this._prev = null;\n    this.el = null;\n    this.sel = null;\n};\n\nvar textUpdateProp = isBrowser\n    && (typeof document.createTextNode('').textContent === 'string'\n        ? 'textContent'\n        : 'data');\n\n/**\n * 更新 text 节点的视图\n *\n * @param {Array} changes 数据变化信息\n */\nTextNode.prototype._update = function (changes) {\n    if (this.aNode.textExpr.value) {\n        return;\n    }\n\n    var len = changes ? changes.length : 0;\n    while (len--) {\n        if (changeExprCompare(changes[len].expr, this.aNode.textExpr, this.scope)) {\n            var text = evalExpr(this.aNode.textExpr, this.scope, this.owner);\n\n            if (text !== this.content) {\n                this.content = text;\n\n                if (this.aNode.textExpr.original) {\n                    var startRemoveEl = this.sel.nextSibling;\n                    var parentEl = this.el.parentNode;\n\n                    while (startRemoveEl !== this.el) {\n                        var removeTarget = startRemoveEl;\n                        startRemoveEl = startRemoveEl.nextSibling;\n                        removeEl(removeTarget);\n                    }\n\n                    // #[begin] error\n                    warnSetHTML(parentEl);\n                    // #[end]\n\n                    var tempFlag = document.createElement('script');\n                    parentEl.insertBefore(tempFlag, this.el);\n                    tempFlag.insertAdjacentHTML('beforebegin', text);\n                    parentEl.removeChild(tempFlag);\n                }\n                else {\n                    this.el[textUpdateProp] = text;\n                }\n            }\n\n            return;\n        }\n    }\n};\n\n// exports = module.exports = TextNode;\n\n\n/**\n * @file 判断变更数组是否影响到数据引用摘要\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n/**\n * 判断变更数组是否影响到数据引用摘要\n *\n * @param {Array} changes 变更数组\n * @param {Object} dataRef 数据引用摘要\n * @return {boolean}\n */\nfunction changesIsInDataRef(changes, dataRef) {\n    for (var i = 0; i < changes.length; i++) {\n        var change = changes[i];\n\n        if (!change.overview) {\n            var paths = change.expr.paths;\n            change.overview = paths[0].value;\n\n            if (paths.length > 1) {\n                change.extOverview = paths[0].value + '.' + paths[1].value;\n                change.wildOverview = paths[0].value + '.*';\n            }\n        }\n\n        if (dataRef[change.overview]\n            || change.wildOverview && dataRef[change.wildOverview]\n            || change.extOverview && dataRef[change.extOverview]\n        ) {\n            return true;\n        }\n    }\n}\n\n// exports = module.exports = changesIsInDataRef;\n\n\n/**\n * @file 元素子节点遍历操作类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var removeEl = require('../browser/remove-el');\n\n// #[begin] reverse\n/**\n * 元素子节点遍历操作类\n *\n * @inner\n * @class\n * @param {HTMLElement} el 要遍历的元素\n */\nfunction DOMChildrenWalker(el) {\n    this.raw = [];\n    this.index = 0;\n    this.target = el;\n\n    var child = el.firstChild;\n    var next;\n    while (child) {\n        next = child.nextSibling;\n\n        switch (child.nodeType) {\n            case 3:\n                if (/^\\s*$/.test(child.data || child.textContent)) {\n                    removeEl(child);\n                }\n                else {\n                    this.raw.push(child);\n                }\n                break;\n\n            case 1:\n            case 8:\n                this.raw.push(child);\n        }\n\n        child = next;\n    }\n\n    this.current = this.raw[this.index];\n    this.next = this.raw[this.index + 1];\n}\n\n/**\n * 往下走一个元素\n */\nDOMChildrenWalker.prototype.goNext = function () {\n    this.current = this.raw[++this.index];\n    this.next = this.raw[this.index + 1];\n};\n// #[end]\n\n// exports = module.exports = DOMChildrenWalker;\n\n\n/**\n * @file 元素节点类\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var each = require('../util/each');\n// var guid = require('../util/guid');\n// var removeEl = require('../browser/remove-el');\n// var changeExprCompare = require('../runtime/change-expr-compare');\n// var changesIsInDataRef = require('../runtime/changes-is-in-data-ref');\n// var evalExpr = require('../runtime/eval-expr');\n// var LifeCycle = require('./life-cycle');\n// var NodeType = require('./node-type');\n// var reverseElementChildren = require('./reverse-element-children');\n// var isDataChangeByElement = require('./is-data-change-by-element');\n// var elementUpdateChildren = require('./element-update-children');\n// var elementOwnCreate = require('./element-own-create');\n// var elementOwnAttach = require('./element-own-attach');\n// var elementOwnDetach = require('./element-own-detach');\n// var elementOwnDispose = require('./element-own-dispose');\n// var elementOwnOnEl = require('./element-own-on-el');\n// var elementOwnToPhase = require('./element-own-to-phase');\n// var elementOwnAttached = require('./element-own-attached');\n// var elementDispose = require('./element-dispose');\n// var elementInitTagName = require('./element-init-tag-name');\n// var handleProp = require('./handle-prop');\n// var warnSetHTML = require('./warn-set-html');\n// var getNodePath = require('./get-node-path');\n\n/**\n * 元素节点类\n *\n * @param {Object} aNode 抽象节点\n * @param {Component} owner 所属组件环境\n * @param {Model=} scope 所属数据环境\n * @param {Node} parent 父亲节点\n * @param {DOMChildrenWalker?} reverseWalker 子元素遍历对象\n */\nfunction Element(aNode, owner, scope, parent, reverseWalker) {\n    this.aNode = aNode;\n    this.owner = owner;\n    this.scope = scope;\n    this.parent = parent;\n\n    this.lifeCycle = LifeCycle.start;\n    this.children = [];\n    this._elFns = [];\n    this.parentComponent = parent.nodeType === NodeType.CMPT\n        ? parent\n        : parent.parentComponent;\n\n    this.id = guid();\n\n    elementInitTagName(this);\n\n    this._toPhase('inited');\n\n    // #[begin] reverse\n    if (reverseWalker) {\n        var currentNode = reverseWalker.current;\n\n        if (!currentNode) {\n            throw new Error('[SAN REVERSE ERROR] Element not found. \\nPaths: '\n                + getNodePath(this).join(' > '));\n        }\n\n        if (currentNode.nodeType !== 1) {\n            throw new Error('[SAN REVERSE ERROR] Element type not match, expect 1 but '\n                + currentNode.nodeType + '.\\nPaths: '\n                + getNodePath(this).join(' > '));\n        }\n\n        if (currentNode.tagName.toLowerCase() !== this.tagName) {\n            throw new Error('[SAN REVERSE ERROR] Element tagName not match, expect '\n                + this.tagName + ' but meat ' + currentNode.tagName.toLowerCase() + '.\\nPaths: '\n                + getNodePath(this).join(' > '));\n        }\n\n        this.el = currentNode;\n        reverseWalker.goNext();\n\n        reverseElementChildren(this);\n\n        this._attached();\n    }\n    // #[end]\n}\n\n\n\nElement.prototype.nodeType = NodeType.ELEM;\n\n\nElement.prototype.attach = elementOwnAttach;\nElement.prototype.detach = elementOwnDetach;\nElement.prototype.dispose = elementOwnDispose;\nElement.prototype._create = elementOwnCreate;\nElement.prototype._toPhase = elementOwnToPhase;\nElement.prototype._onEl = elementOwnOnEl;\n\nElement.prototype._doneLeave = function () {\n    if (this.leaveDispose) {\n        if (!this.lifeCycle.disposed) {\n            elementDispose(\n                this,\n                this.disposeNoDetach,\n                this.disposeNoTransition\n            );\n        }\n    }\n    else if (this.lifeCycle.attached) {\n        removeEl(this.el);\n        this._toPhase('detached');\n    }\n};\n\n/**\n * 视图更新\n *\n * @param {Array} changes 数据变化信息\n */\nElement.prototype._update = function (changes) {\n    if (!changesIsInDataRef(changes, this.aNode.hotspot.data)) {\n        return;\n    }\n\n    var me = this;\n\n    var dynamicProps = this.aNode.hotspot.dynamicProps;\n    for (var i = 0, l = dynamicProps.length; i < l; i++) {\n        var prop = dynamicProps[i];\n\n        for (var j = 0, changeLen = changes.length; j < changeLen; j++) {\n            var change = changes[j];\n\n            if (!isDataChangeByElement(change, this, prop.name)\n                && (\n                    changeExprCompare(change.expr, prop.expr, this.scope)\n                    || prop.hintExpr && changeExprCompare(change.expr, prop.hintExpr, this.scope)\n                )\n            ) {\n                handleProp(this, evalExpr(prop.expr, this.scope, this.owner), prop);\n                break;\n            }\n        }\n    }\n\n    var htmlDirective = this.aNode.directives.html;\n    if (htmlDirective) {\n        each(changes, function (change) {\n            if (changeExprCompare(change.expr, htmlDirective.value, me.scope)) {\n                // #[begin] error\n                warnSetHTML(me.el);\n                // #[end]\n                me.el.innerHTML = evalExpr(htmlDirective.value, me.scope, me.owner);\n                return false;\n            }\n        });\n    }\n    else {\n        elementUpdateChildren(this, changes);\n    }\n};\n\n/**\n * 执行完成attached状态的行为\n */\nElement.prototype._attached = elementOwnAttached;\n\n// exports = module.exports = Element;\n\n\n/**\n * @file 销毁节点，清空节点上的无用成员\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n/**\n * 销毁节点\n *\n * @param {Object} node 节点对象\n */\nfunction nodeDispose(node) {\n    node.el = null;\n    node.sel = null;\n    node.owner = null;\n    node.scope = null;\n    node.aNode = null;\n    node.parent = null;\n    node.parentComponent = null;\n    node.children = null;\n\n    if (node._toPhase) {\n        node._toPhase('disposed');\n    }\n\n    if (node._ondisposed) {\n        node._ondisposed();\n    }\n}\n\n// exports = module.exports = nodeDispose;\n\n\n/**\n * @file 通过组件反解创建节点的工厂方法\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var hotTags = require('../browser/hot-tags');\n// var NodeType = require('./node-type');\n// var TextNode = require('./text-node');\n// var Element = require('./element');\n// var SlotNode = require('./slot-node');\n// var ForNode = require('./for-node');\n// var IfNode = require('./if-node');\n// var TemplateNode = require('./template-node');\n\n// #[begin] reverse\n/**\n * 通过组件反解创建节点\n *\n * @param {ANode} aNode 抽象节点\n * @param {DOMChildrenWalker} reverseWalker 子元素遍历对象\n * @param {Node} parent 父亲节点\n * @param {Model=} scope 所属数据环境\n * @return {Node}\n */\nfunction createReverseNode(aNode, reverseWalker, parent, scope) {\n    var parentIsComponent = parent.nodeType === NodeType.CMPT;\n    var owner = parentIsComponent ? parent : (parent.childOwner || parent.owner);\n    scope = scope || (parentIsComponent ? parent.data : (parent.childScope || parent.scope));\n\n    if (aNode.textExpr) {\n        return new TextNode(aNode, owner, scope, parent, reverseWalker);\n    }\n\n    if (aNode.directives['if']) { // eslint-disable-line dot-notation\n        return new IfNode(aNode, owner, scope, parent, reverseWalker);\n    }\n\n    if (aNode.directives['for']) { // eslint-disable-line dot-notation\n        return new ForNode(aNode, owner, scope, parent, reverseWalker);\n    }\n\n    if (hotTags[aNode.tagName]) {\n        return new Element(aNode, owner, scope, parent, reverseWalker);\n    }\n\n    switch (aNode.tagName) {\n        case 'slot':\n            return new SlotNode(aNode, owner, scope, parent, reverseWalker);\n\n        case 'template':\n            return new TemplateNode(aNode, owner, scope, parent, reverseWalker);\n\n        default:\n            var ComponentType = owner.getComponentType(aNode);\n            if (ComponentType) {\n                return new ComponentType({\n                    aNode: aNode,\n                    owner: owner,\n                    scope: scope,\n                    parent: parent,\n                    subTag: aNode.tagName,\n                    reverseWalker: reverseWalker\n                });\n            }\n    }\n\n    return new Element(aNode, owner, scope, parent, reverseWalker);\n}\n// #[end]\n\n// exports = module.exports = createReverseNode;\n\n\n/**\n * @file 销毁释放元素的子元素\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 销毁释放元素的子元素\n *\n * @param {Object} element 元素节点\n * @param {boolean=} noDetach 是否不要把节点从dom移除\n * @param {boolean=} noTransition 是否不显示过渡动画效果\n */\nfunction elementDisposeChildren(element, noDetach, noTransition) {\n    var children = element.children;\n    var len = children && children.length;\n    while (len--) {\n        children[len].dispose(noDetach, noTransition);\n    }\n}\n\n// exports = module.exports = elementDisposeChildren;\n\n\n/**\n * @file 更新元素的子元素视图\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n/**\n * 更新元素的子元素视图\n *\n * @param {Object} element 要更新的元素\n * @param {Array} changes 数据变化信息\n */\nfunction elementUpdateChildren(element, changes) {\n    for (var i = 0, l = element.children.length; i < l; i++) {\n        element.children[i]._update(changes);\n    }\n}\n\n// exports = module.exports = elementUpdateChildren;\n\n\n/**\n * @file 使元素节点到达相应的生命周期\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var LifeCycle = require('./life-cycle');\n\n/**\n * 使元素节点到达相应的生命周期\n *\n * @param {string} name 生命周期名称\n */\nfunction elementOwnToPhase(name) {\n    this.lifeCycle = LifeCycle[name] || this.lifeCycle;\n}\n\n// exports = module.exports = elementOwnToPhase;\n\n\n/**\n * @file 创建节点的工厂方法\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var hotTags = require('../browser/hot-tags');\n// var NodeType = require('./node-type');\n// var TextNode = require('./text-node');\n// var Element = require('./element');\n// var SlotNode = require('./slot-node');\n// var ForNode = require('./for-node');\n// var IfNode = require('./if-node');\n// var TemplateNode = require('./template-node');\n\n\n/**\n * 创建节点\n *\n * @param {ANode} aNode 抽象节点\n * @param {Node} parent 父亲节点\n * @param {Model=} scope 所属数据环境\n * @return {Node}\n */\nfunction createNode(aNode, parent, scope) {\n    var parentIsComponent = parent.nodeType === NodeType.CMPT;\n    var owner = parentIsComponent ? parent : (parent.childOwner || parent.owner);\n    scope = scope || (parentIsComponent ? parent.data : (parent.childScope || parent.scope));\n\n\n    if (aNode.textExpr) {\n        return new TextNode(aNode, owner, scope, parent);\n    }\n\n    if (aNode.directives['if']) { // eslint-disable-line dot-notation\n        return new IfNode(aNode, owner, scope, parent);\n    }\n\n    if (aNode.directives['for']) { // eslint-disable-line dot-notation\n        return new ForNode(aNode, owner, scope, parent);\n    }\n\n    if (hotTags[aNode.tagName]) {\n        return new Element(aNode, owner, scope, parent);\n    }\n\n\n\n    switch (aNode.tagName) {\n        case 'slot':\n            return new SlotNode(aNode, owner, scope, parent);\n\n        case 'template':\n            return new TemplateNode(aNode, owner, scope, parent);\n\n        default:\n            var ComponentType = owner.getComponentType(aNode);\n            if (ComponentType) {\n                return new ComponentType({\n                    aNode: aNode,\n                    owner: owner,\n                    scope: scope,\n                    parent: parent,\n                    subTag: aNode.tagName\n                });\n            }\n    }\n\n    return new Element(aNode, owner, scope, parent);\n}\n\n// exports = module.exports = createNode;\n\n\n/**\n * @file 生成子元素\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var createNode = require('./create-node');\n\n/**\n * 生成子元素\n *\n * @param {Element} element 元素\n * @param {HTMLElement} parentEl 要添加到的父元素\n * @param {HTMLElement＝} beforeEl 要添加到哪个元素之前\n */\nfunction genElementChildren(element, parentEl, beforeEl) {\n    parentEl = parentEl || element.el;\n\n    var aNodeChildren = element.aNode.children;\n    for (var i = 0; i < aNodeChildren.length; i++) {\n        var child = createNode(aNodeChildren[i], element);\n        element.children.push(child);\n        child.attach(parentEl, beforeEl);\n    }\n}\n\n// exports = module.exports = genElementChildren;\n\n\n/**\n * @file 将没有 root 只有 children 的元素 attach 到页面\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var insertBefore = require('../browser/insert-before');\n// var genElementChildren = require('./gen-element-children');\n\n\n/**\n * 将没有 root 只有 children 的元素 attach 到页面\n * 主要用于 slot 和 template\n *\n * @param {HTMLElement} parentEl 要添加到的父元素\n * @param {HTMLElement＝} beforeEl 要添加到哪个元素之前\n */\nfunction nodeOwnOnlyChildrenAttach(parentEl, beforeEl) {\n    this.sel = document.createComment(this.id);\n    insertBefore(this.sel, parentEl, beforeEl);\n\n    genElementChildren(this, parentEl, beforeEl);\n\n    this.el = document.createComment(this.id);\n    insertBefore(this.el, parentEl, beforeEl);\n\n    this._toPhase('attached');\n}\n\n// exports = module.exports = nodeOwnOnlyChildrenAttach;\n\n\n/**\n * @file slot 节点类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var each = require('../util/each');\n// var guid = require('../util/guid');\n// var createANode = require('../parser/create-a-node');\n// var ExprType = require('../parser/expr-type');\n// var createAccessor = require('../parser/create-accessor');\n// var evalExpr = require('../runtime/eval-expr');\n// var Data = require('../runtime/data');\n// var DataChangeType = require('../runtime/data-change-type');\n// var changeExprCompare = require('../runtime/change-expr-compare');\n// var insertBefore = require('../browser/insert-before');\n// var NodeType = require('./node-type');\n// var LifeCycle = require('./life-cycle');\n// var getANodeProp = require('./get-a-node-prop');\n// var nodeDispose = require('./node-dispose');\n// var createReverseNode = require('./create-reverse-node');\n// var elementDisposeChildren = require('./element-dispose-children');\n// var elementUpdateChildren = require('./element-update-children');\n// var elementOwnToPhase = require('./element-own-to-phase');\n// var nodeOwnOnlyChildrenAttach = require('./node-own-only-children-attach');\n\n\n/**\n * slot 节点类\n *\n * @param {Object} aNode 抽象节点\n * @param {Component} owner 所属组件环境\n * @param {Model=} scope 所属数据环境\n * @param {Node} parent 父亲节点\n * @param {DOMChildrenWalker?} reverseWalker 子元素遍历对象\n */\nfunction SlotNode(aNode, owner, scope, parent, reverseWalker) {\n    var realANode = createANode();\n    this.aNode = realANode;\n    this.owner = owner;\n    this.scope = scope;\n    this.parent = parent;\n    this.parentComponent = parent.nodeType === NodeType.CMPT\n        ? parent\n        : parent.parentComponent;\n\n    this.id = guid();\n\n    this.lifeCycle = LifeCycle.start;\n    this.children = [];\n\n    // calc slot name\n    this.nameBind = getANodeProp(aNode, 'name');\n    if (this.nameBind) {\n        this.isNamed = true;\n        this.name = evalExpr(this.nameBind.expr, this.scope, this.owner);\n    }\n\n    // calc aNode children\n    var givenSlots = owner.givenSlots;\n    var givenChildren;\n    if (givenSlots) {\n        givenChildren = this.isNamed ? givenSlots.named[this.name] : givenSlots.noname;\n    }\n\n    if (givenChildren) {\n        this.isInserted = true;\n    }\n\n    realANode.children = givenChildren || aNode.children.slice(0);\n\n    var me = this;\n\n    // calc scoped slot vars\n    realANode.vars = aNode.vars;\n    var initData = {};\n    each(realANode.vars, function (varItem) {\n        me.isScoped = true;\n        initData[varItem.name] = evalExpr(varItem.expr, scope, owner);\n    });\n\n    // child owner & child scope\n    if (this.isInserted) {\n        this.childOwner = owner.owner;\n        this.childScope = owner.scope;\n    }\n\n    if (this.isScoped) {\n        this.childScope = new Data(initData, this.childScope || this.scope);\n    }\n\n\n    owner.slotChildren.push(this);\n\n    // #[begin] reverse\n    if (reverseWalker) {\n\n        this.sel = document.createComment(this.id);\n        insertBefore(this.sel, reverseWalker.target, reverseWalker.current);\n\n        each(this.aNode.children, function (aNodeChild) {\n            me.children.push(createReverseNode(aNodeChild, reverseWalker, me));\n        });\n\n        this.el = document.createComment(this.id);\n        insertBefore(this.el, reverseWalker.target, reverseWalker.current);\n\n        this._toPhase('attached');\n    }\n    // #[end]\n}\n\nSlotNode.prototype.nodeType = NodeType.SLOT;\n\n/**\n * 销毁释放 slot\n *\n * @param {boolean=} noDetach 是否不要把节点从dom移除\n * @param {boolean=} noTransition 是否不显示过渡动画效果\n */\nSlotNode.prototype.dispose = function (noDetach, noTransition) {\n    this.childOwner = null;\n    this.childScope = null;\n\n    elementDisposeChildren(this, noDetach, noTransition);\n    nodeDispose(this);\n};\n\nSlotNode.prototype.attach = nodeOwnOnlyChildrenAttach;\nSlotNode.prototype._toPhase = elementOwnToPhase;\n\n/**\n * 视图更新函数\n *\n * @param {Array} changes 数据变化信息\n * @param {boolean=} isFromOuter 变化信息是否来源于父组件之外的组件\n * @return {boolean}\n */\nSlotNode.prototype._update = function (changes, isFromOuter) {\n    var me = this;\n\n    if (this.nameBind && evalExpr(this.nameBind.expr, this.scope, this.owner) !== me.name) {\n        this.owner._notifyNeedReload();\n        return false;\n    }\n\n    if (isFromOuter) {\n        if (this.isInserted) {\n            elementUpdateChildren(this, changes);\n        }\n    }\n    else {\n        if (this.isScoped) {\n            each(this.aNode.vars, function (varItem) {\n                me.childScope.set(varItem.name, evalExpr(varItem.expr, me.scope, me.owner));\n            });\n\n\n            var scopedChanges = [];\n            each(changes, function (change) {\n                if (!me.isInserted) {\n                    scopedChanges.push(change);\n                }\n\n                each(me.aNode.vars, function (varItem) {\n                    var name = varItem.name;\n                    var relation = changeExprCompare(change.expr, varItem.expr, me.scope);\n\n                    if (relation < 1) {\n                        return;\n                    }\n\n                    if (change.type !== DataChangeType.SPLICE) {\n                        scopedChanges.push({\n                            type: DataChangeType.SET,\n                            expr: createAccessor([\n                                {type: ExprType.STRING, value: name}\n                            ]),\n                            value: me.childScope.get(name),\n                            option: change.option\n                        });\n                    }\n                    else if (relation === 2) {\n                        scopedChanges.push({\n                            expr: createAccessor([\n                                {type: ExprType.STRING, value: name}\n                            ]),\n                            type: DataChangeType.SPLICE,\n                            index: change.index,\n                            deleteCount: change.deleteCount,\n                            value: change.value,\n                            insertions: change.insertions,\n                            option: change.option\n                        });\n                    }\n                });\n            });\n\n            elementUpdateChildren(this, scopedChanges);\n        }\n        else if (!this.isInserted) {\n            elementUpdateChildren(this, changes);\n        }\n    }\n};\n\n// exports = module.exports = SlotNode;\n\n\n/**\n * @file 复制指令集合对象\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 复制指令集合对象\n *\n * @param {Object} source 要复制的指令集合对象\n * @param {Object=} excludes 需要排除的key集合\n * @return {Object}\n */\nfunction cloneDirectives(source, excludes) {\n    var result = {};\n    excludes = excludes || {};\n\n    for (var key in source) {\n        if (!excludes[key]) {\n            result[key] = source[key];\n        }\n    }\n\n    return result;\n}\n\n// exports = module.exports = cloneDirectives;\n\n\n/**\n * @file 简单执行销毁节点的行为\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var removeEl = require('../browser/remove-el');\n// var nodeDispose = require('./node-dispose');\n// var elementDisposeChildren = require('./element-dispose-children');\n\n/**\n * 简单执行销毁节点的行为\n *\n * @param {boolean=} noDetach 是否不要把节点从dom移除\n */\nfunction nodeOwnSimpleDispose(noDetach) {\n    elementDisposeChildren(this, noDetach, 1);\n\n    if (!noDetach) {\n        removeEl(this.el);\n    }\n\n    nodeDispose(this);\n}\n\n// exports = module.exports = nodeOwnSimpleDispose;\n\n\n/**\n * @file 创建节点对应的 stump comment 元素\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n\n/**\n * 创建节点对应的 stump comment 主元素\n */\nfunction nodeOwnCreateStump() {\n    this.el = this.el || document.createComment(this.id);\n}\n\n// exports = module.exports = nodeOwnCreateStump;\n\n\n/**\n * @file for 指令节点类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var inherits = require('../util/inherits');\n// var each = require('../util/each');\n// var guid = require('../util/guid');\n// var createANode = require('../parser/create-a-node');\n// var ExprType = require('../parser/expr-type');\n// var parseExpr = require('../parser/parse-expr');\n// var createAccessor = require('../parser/create-accessor');\n// var cloneDirectives = require('../parser/clone-directives');\n// var Data = require('../runtime/data');\n// var DataChangeType = require('../runtime/data-change-type');\n// var changeExprCompare = require('../runtime/change-expr-compare');\n// var evalExpr = require('../runtime/eval-expr');\n// var changesIsInDataRef = require('../runtime/changes-is-in-data-ref');\n// var removeEl = require('../browser/remove-el');\n// var insertBefore = require('../browser/insert-before');\n// var LifeCycle = require('./life-cycle');\n// var NodeType = require('./node-type');\n// var createNode = require('./create-node');\n// var createReverseNode = require('./create-reverse-node');\n// var nodeOwnSimpleDispose = require('./node-own-simple-dispose');\n// var nodeOwnCreateStump = require('./node-own-create-stump');\n// var elementDisposeChildren = require('./element-dispose-children');\n// var dataCache = require('../runtime/data-cache');\n\n\n/**\n * 循环项的数据容器类\n *\n * @inner\n * @class\n * @param {Object} forElement for元素对象\n * @param {*} item 当前项的数据\n * @param {number} index 当前项的索引\n */\nfunction ForItemData(forElement, item, index) {\n    this.id = guid();\n    this.parent = forElement.scope;\n    this.raw = {};\n    this.listeners = [];\n\n    this.directive = forElement.aNode.directives['for']; // eslint-disable-line dot-notation\n    this.raw[this.directive.item.raw] = item;\n    this.raw[this.directive.index.raw] = index;\n}\n\n/**\n * 将数据操作的表达式，转换成为对parent数据操作的表达式\n * 主要是对item和index进行处理\n *\n * @param {Object} expr 表达式\n * @return {Object}\n */\nForItemData.prototype.exprResolve = function (expr) {\n    var directive = this.directive;\n    var me = this;\n\n    function resolveItem(expr) {\n        if (expr.type === ExprType.ACCESSOR\n            && expr.paths[0].value === directive.item.paths[0].value\n        ) {\n            return createAccessor(\n                directive.value.paths.concat(\n                    {\n                        type: ExprType.NUMBER,\n                        value: me.get(directive.index)\n                    },\n                    expr.paths.slice(1)\n                )\n            );\n        }\n\n        return expr;\n    }\n\n    expr = resolveItem(expr);\n\n    var resolvedPaths = [];\n\n    each(expr.paths, function (item) {\n        resolvedPaths.push(\n            item.type === ExprType.ACCESSOR\n                && item.paths[0].value === directive.index.paths[0].value\n            ? {\n                type: ExprType.NUMBER,\n                value: me.get(directive.index)\n            }\n            : resolveItem(item)\n        );\n    });\n\n    return createAccessor(resolvedPaths);\n};\n\n// 代理数据操作方法\ninherits(ForItemData, Data);\neach(\n    ['set', 'remove', 'unshift', 'shift', 'push', 'pop', 'splice'],\n    function (method) {\n        ForItemData.prototype['_' + method] = Data.prototype[method];\n        ForItemData.prototype[method] = function (expr) {\n            expr = this.exprResolve(parseExpr(expr));\n            dataCache.clear();\n            this.parent[method].apply(\n                this.parent,\n                [expr].concat(Array.prototype.slice.call(arguments, 1))\n            );\n        };\n    }\n);\n\n/**\n * 创建 for 指令元素的子元素\n *\n * @inner\n * @param {ForDirective} forElement for 指令元素对象\n * @param {*} item 子元素对应数据\n * @param {number} index 子元素对应序号\n * @return {Element}\n */\nfunction createForDirectiveChild(forElement, item, index) {\n    var itemScope = new ForItemData(forElement, item, index);\n    return createNode(forElement.itemANode, forElement, itemScope);\n}\n\n/**\n * for 指令节点类\n *\n * @param {Object} aNode 抽象节点\n * @param {Component} owner 所属组件环境\n * @param {Model=} scope 所属数据环境\n * @param {Node} parent 父亲节点\n * @param {DOMChildrenWalker?} reverseWalker 子元素遍历对象\n */\nfunction ForNode(aNode, owner, scope, parent, reverseWalker) {\n    this.aNode = aNode;\n    this.owner = owner;\n    this.scope = scope;\n    this.parent = parent;\n    this.parentComponent = parent.nodeType === NodeType.CMPT\n        ? parent\n        : parent.parentComponent;\n\n    this.id = guid();\n    this.children = [];\n\n    this.itemANode = createANode({\n        children: aNode.children,\n        props: aNode.props,\n        events: aNode.events,\n        tagName: aNode.tagName,\n        vars: aNode.vars,\n        hotspot: aNode.hotspot,\n        directives: cloneDirectives(aNode.directives, {\n            'for': 1\n        })\n    });\n\n    this.param = aNode.directives['for']; // eslint-disable-line dot-notation\n\n    // #[begin] reverse\n    if (reverseWalker) {\n        var me = this;\n        each(\n            evalExpr(this.param.value, this.scope, this.owner),\n            function (item, i) {\n                var itemScope = new ForItemData(me, item, i);\n                var child = createReverseNode(me.itemANode, reverseWalker, me, itemScope);\n                me.children.push(child);\n            }\n        );\n\n        this._create();\n        insertBefore(this.el, reverseWalker.target, reverseWalker.current);\n    }\n    // #[end]\n}\n\n\nForNode.prototype.nodeType = NodeType.FOR;\nForNode.prototype._create = nodeOwnCreateStump;\nForNode.prototype.dispose = nodeOwnSimpleDispose;\n\n/**\n * 将元素attach到页面的行为\n *\n * @param {HTMLElement} parentEl 要添加到的父元素\n * @param {HTMLElement＝} beforeEl 要添加到哪个元素之前\n */\nForNode.prototype.attach = function (parentEl, beforeEl) {\n    this._create();\n    insertBefore(this.el, parentEl, beforeEl);\n\n    // paint list\n    var el = this.el || parentEl.firstChild;\n    var data = evalExpr(this.param.value, this.scope, this.owner);\n    var len = data && data.length || 0;\n    for (var i = 0; i < len; i++) {\n        var child = createForDirectiveChild(this, data[i], i);\n        this.children.push(child);\n        child.attach(parentEl, el);\n    }\n};\n\n/**\n * 将元素从页面上移除的行为\n */\nForNode.prototype.detach = function () {\n    if (this.lifeCycle.attached) {\n        elementDisposeChildren(this);\n        this.children = [];\n        removeEl(this.el);\n        this.lifeCycle = LifeCycle.detached;\n    }\n};\n\n/* eslint-disable fecs-max-statements */\n\n/**\n * 视图更新函数\n *\n * @param {Array} changes 数据变化信息\n */\nForNode.prototype._update = function (changes) {\n\n    var me = this;\n    // 控制列表更新策略是否原样更新的变量\n    var originalUpdate = this.aNode.directives.transition;\n\n\n    var oldChildrenLen = this.children.length;\n    var childrenChanges = new Array(oldChildrenLen);\n\n    function pushToChildrenChanges(change) {\n        for (var i = 0, l = childrenChanges.length; i < l; i++) {\n            (childrenChanges[i] = childrenChanges[i] || []).push(change);\n        }\n    }\n\n    var disposeChildren = [];\n\n\n    // 判断列表是否父元素下唯一的元素\n    // 如果是的话，可以做一些更新优化\n    var parentEl = this.el.parentNode;\n    var parentFirstChild = parentEl.firstChild;\n    var parentLastChild = parentEl.lastChild;\n    var isOnlyParentChild = oldChildrenLen > 0 // 有孩子时\n            && parentFirstChild === this.children[0].el\n            && (parentLastChild === this.el || parentLastChild === this.children[oldChildrenLen - 1].el)\n        || oldChildrenLen === 0 // 无孩子时\n            && parentFirstChild === this.el\n            && parentLastChild === this.el;\n\n    // 控制列表是否整体更新的变量\n    var isChildrenRebuild;\n\n    var newList = evalExpr(this.param.value, this.scope, this.owner);\n    var newLen = newList && newList.length || 0;\n\n    /* eslint-disable no-redeclare */\n    for (var cIndex = 0, cLen = changes.length; cIndex < cLen; cIndex++) {\n        var change = changes[cIndex];\n        var relation = changeExprCompare(change.expr, this.param.value, this.scope);\n\n        if (!relation) {\n            // 无关时，直接传递给子元素更新，列表本身不需要动\n            pushToChildrenChanges(change);\n        }\n        else if (relation > 2) {\n            // 变更表达式是list绑定表达式的子项\n            // 只需要对相应的子项进行更新\n            var changePaths = change.expr.paths;\n            var forLen = this.param.value.paths.length;\n            var changeIndex = +evalExpr(changePaths[forLen], this.scope, this.owner);\n\n            if (isNaN(changeIndex)) {\n                pushToChildrenChanges(change);\n            }\n            else {\n                change = {\n                    type: change.type,\n                    expr: createAccessor(\n                        this.param.item.paths.concat(changePaths.slice(forLen + 1))\n                    ),\n                    value: change.value,\n                    index: change.index,\n                    deleteCount: change.deleteCount,\n                    insertions: change.insertions,\n                    option: change.option\n                };\n\n                (childrenChanges[changeIndex] = childrenChanges[changeIndex] || [])\n                    .push(change);\n\n                if (this.children[changeIndex]) {\n                    if (change.type === DataChangeType.SPLICE) {\n                        this.children[changeIndex].scope._splice(\n                            change.expr,\n                            [].concat(change.index, change.deleteCount, change.insertions),\n                            { silent: 1 }\n                        );\n                    }\n                    else {\n                        this.children[changeIndex].scope._set(\n                            change.expr,\n                            change.value,\n                            { silent: 1 }\n                        );\n                    }\n                }\n            }\n        }\n        else if (change.type !== DataChangeType.SPLICE) {\n            // 变更表达式是list绑定表达式本身或母项的重新设值\n            // 此时需要更新整个列表\n\n\n            // 老的比新的多的部分，标记需要dispose\n            if (oldChildrenLen > newLen) {\n                disposeChildren = disposeChildren.concat(this.children.slice(newLen));\n\n                childrenChanges = childrenChanges.slice(0, newLen);\n                this.children = this.children.slice(0, newLen);\n            }\n\n            // 整项变更\n            for (var i = 0; i < newLen; i++) {\n                (childrenChanges[i] = childrenChanges[i] || []).push({\n                    type: DataChangeType.SET,\n                    option: change.option,\n                    expr: createAccessor(this.param.item.paths.slice(0)),\n                    value: newList[i]\n                });\n\n                // 对list更上级数据的直接设置\n                if (relation < 2) {\n                    childrenChanges[i].push(change);\n                }\n\n                if (this.children[i]) {\n                    this.children[i].scope._set(\n                        this.param.item,\n                        newList[i],\n                        {silent: 1}\n                    );\n                }\n                else {\n                    this.children[i] = 0;\n                }\n            }\n\n            isChildrenRebuild = 1;\n        }\n        else if (relation === 2 && change.type === DataChangeType.SPLICE && !isChildrenRebuild) {\n            // 变更表达式是list绑定表达式本身数组的splice操作\n            // 此时需要删除部分项，创建部分项\n            var changeStart = change.index;\n            var deleteCount = change.deleteCount;\n            var insertionsLen = change.insertions.length;\n            var newCount = insertionsLen - deleteCount;\n\n            if (newCount) {\n                var indexChange = {\n                    type: DataChangeType.SET,\n                    option: change.option,\n                    expr: this.param.index\n                };\n\n                for (var i = changeStart + deleteCount; i < this.children.length; i++) {\n                    (childrenChanges[i] = childrenChanges[i] || []).push(indexChange);\n                    this.children[i] && this.children[i].scope._set(\n                        indexChange.expr,\n                        i - deleteCount + insertionsLen,\n                        {silent: 1}\n                    );\n                }\n            }\n\n            var deleteLen = deleteCount;\n            while (deleteLen--) {\n                if (deleteLen < insertionsLen) {\n                    var i = changeStart + deleteLen;\n                    // update\n                    (childrenChanges[i] = childrenChanges[i] || []).push({\n                        type: DataChangeType.SET,\n                        option: change.option,\n                        expr: createAccessor(this.param.item.paths.slice(0)),\n                        value: change.insertions[deleteLen]\n                    });\n                    if (this.children[i]) {\n                        this.children[i].scope._set(\n                            this.param.item,\n                            change.insertions[deleteLen],\n                            {silent: 1}\n                        );\n                    }\n                }\n            }\n\n            if (newCount < 0) {\n                disposeChildren = disposeChildren.concat(this.children.splice(changeStart + insertionsLen, -newCount));\n                childrenChanges.splice(changeStart + insertionsLen, -newCount);\n            }\n            else if (newCount > 0) {\n                var spliceArgs = [changeStart + deleteCount, 0].concat(new Array(newCount));\n                this.children.splice.apply(this.children, spliceArgs);\n                childrenChanges.splice.apply(childrenChanges, spliceArgs);\n            }\n        }\n    }\n\n    var newChildrenLen = this.children.length;\n\n    // 标记 length 是否发生变化\n    if (newChildrenLen !== oldChildrenLen) {\n        var lengthChange = {\n            type: DataChangeType.SET,\n            option: {},\n            expr: createAccessor(\n                this.param.value.paths.concat({\n                    type: ExprType.STRING,\n                    value: 'length'\n                })\n            )\n        };\n\n        if (changesIsInDataRef([lengthChange], this.aNode.hotspot.data)) {\n            pushToChildrenChanges(lengthChange);\n        }\n    }\n\n    // 清除应该干掉的 child\n    this._doCreateAndUpdate = doCreateAndUpdate;\n\n    // 这里不用getTransition，getTransition和scope相关，for和forItem的scope是不同的\n    // 所以getTransition结果本身也是不一致的。不如直接判断指令是否存在，如果存在就不进入暴力清除模式\n    // var violentClear = isOnlyParentChild && newChildrenLen === 0 && !elementGetTransition(me);\n    var violentClear = !originalUpdate && isOnlyParentChild && newChildrenLen === 0;\n\n    var disposedChildCount = 0;\n    for (var i = 0; i < disposeChildren.length; i++) {\n        var disposeChild = disposeChildren[i];\n        if (disposeChild) {\n            disposeChild._ondisposed = childDisposed;\n            disposeChild.dispose(violentClear, violentClear);\n        }\n        else {\n            childDisposed();\n        }\n    }\n\n    if (violentClear) {\n        // cloneNode + replaceChild is faster\n        // parentEl.innerHTML = '';\n        var replaceNode = parentEl.cloneNode(false);\n        parentEl.parentNode.replaceChild(replaceNode, parentEl);\n        this.el = document.createComment(this.id);\n        replaceNode.appendChild(this.el);\n    }\n\n    if (disposeChildren.length === 0) {\n        doCreateAndUpdate();\n    }\n\n\n    function childDisposed() {\n        disposedChildCount++;\n        if (disposedChildCount === disposeChildren.length\n            && doCreateAndUpdate === me._doCreateAndUpdate\n        ) {\n            doCreateAndUpdate();\n        }\n    }\n\n    function doCreateAndUpdate() {\n        me._doCreateAndUpdate = null;\n        if (violentClear) {\n            return;\n        }\n\n\n        var beforeEl = me.el;\n\n        // 对相应的项进行更新\n        if (oldChildrenLen === 0 && isOnlyParentChild) {\n            for (var i = 0; i < newChildrenLen; i++) {\n                me.children[i] = createForDirectiveChild(me, newList[i], i);\n                me.children[i].attach(parentEl, beforeEl);\n            }\n        }\n        else {\n            // 如果不attached则直接创建，如果存在则调用更新函数\n            var j = -1;\n            for (var i = 0; i < newChildrenLen; i++) {\n                var child = me.children[i];\n\n                if (child) {\n                    childrenChanges[i] && child._update(childrenChanges[i]);\n                }\n                else {\n                    if (j < i) {\n                        j = i + 1;\n                        beforeEl = null;\n                        while (j < newChildrenLen) {\n                            var nextChild = me.children[j];\n                            if (nextChild) {\n                                beforeEl = nextChild.sel || nextChild.el;\n                                break;\n                            }\n                            j++;\n                        }\n                    }\n\n                    me.children[i] = createForDirectiveChild(me, newList[i], i);\n                    me.children[i].attach(parentEl, beforeEl || me.el);\n                }\n            }\n        }\n    }\n};\n\n\n// exports = module.exports = ForNode;\n\n\n/**\n * @file 清洗条件 aNode\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var createANode = require('../parser/create-a-node');\n// var cloneDirectives = require('../parser/clone-directives');\n\n\n/**\n * 清洗条件 aNode，返回纯净无条件指令的 aNode\n *\n * @param {ANode} aNode 条件节点对象\n * @return {ANode}\n */\nfunction rinseCondANode(aNode) {\n    var clearANode = createANode({\n        children: aNode.children,\n        props: aNode.props,\n        events: aNode.events,\n        tagName: aNode.tagName,\n        vars: aNode.vars,\n        hotspot: aNode.hotspot,\n        directives: cloneDirectives(aNode.directives, {\n            'if': 1,\n            'else': 1,\n            'elif': 1\n        })\n    });\n\n    return clearANode;\n}\n\n// exports = module.exports = rinseCondANode;\n\n\n/**\n * @file if 指令节点类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var each = require('../util/each');\n// var guid = require('../util/guid');\n// var insertBefore = require('../browser/insert-before');\n// var evalExpr = require('../runtime/eval-expr');\n// var NodeType = require('./node-type');\n// var rinseCondANode = require('./rinse-cond-anode');\n// var createNode = require('./create-node');\n// var createReverseNode = require('./create-reverse-node');\n// var nodeOwnCreateStump = require('./node-own-create-stump');\n// var elementUpdateChildren = require('./element-update-children');\n// var nodeOwnSimpleDispose = require('./node-own-simple-dispose');\n\n/**\n * if 指令节点类\n *\n * @param {Object} aNode 抽象节点\n * @param {Component} owner 所属组件环境\n * @param {Model=} scope 所属数据环境\n * @param {Node} parent 父亲节点\n * @param {DOMChildrenWalker?} reverseWalker 子元素遍历对象\n */\nfunction IfNode(aNode, owner, scope, parent, reverseWalker) {\n    this.aNode = aNode;\n    this.owner = owner;\n    this.scope = scope;\n    this.parent = parent;\n    this.parentComponent = parent.nodeType === NodeType.CMPT\n        ? parent\n        : parent.parentComponent;\n\n    this.id = guid();\n    this.children = [];\n\n    this.cond = this.aNode.directives['if'].value; // eslint-disable-line dot-notation\n\n    // #[begin] reverse\n    if (reverseWalker) {\n        if (evalExpr(this.cond, this.scope, this.owner)) {\n            this.elseIndex = -1;\n            this.children[0] = createReverseNode(\n                rinseCondANode(aNode),\n                reverseWalker,\n                this\n            );\n        }\n        else {\n            var me = this;\n            each(aNode.elses, function (elseANode, index) {\n                var elif = elseANode.directives.elif;\n\n                if (!elif || elif && evalExpr(elif.value, me.scope, me.owner)) {\n                    me.elseIndex = index;\n                    me.children[0] = createReverseNode(\n                        rinseCondANode(elseANode),\n                        reverseWalker,\n                        me\n                    );\n                    return false;\n                }\n            });\n        }\n\n        this._create();\n        insertBefore(this.el, reverseWalker.target, reverseWalker.current);\n    }\n    // #[end]\n}\n\nIfNode.prototype.nodeType = NodeType.IF;\n\nIfNode.prototype._create = nodeOwnCreateStump;\nIfNode.prototype.dispose = nodeOwnSimpleDispose;\n\nIfNode.prototype.attach = function (parentEl, beforeEl) {\n    var me = this;\n    var elseIndex;\n    var child;\n\n    if (evalExpr(this.cond, this.scope, this.owner)) {\n        child = createNode(rinseCondANode(me.aNode), me);\n        elseIndex = -1;\n    }\n    else {\n        each(me.aNode.elses, function (elseANode, index) {\n            var elif = elseANode.directives.elif;\n\n            if (!elif || elif && evalExpr(elif.value, me.scope, me.owner)) {\n                child = createNode(rinseCondANode(elseANode), me);\n                elseIndex = index;\n                return false;\n            }\n        });\n    }\n\n    if (child) {\n        me.children[0] = child;\n        child.attach(parentEl, beforeEl);\n        me.elseIndex = elseIndex;\n    }\n\n\n    this._create();\n    insertBefore(this.el, parentEl, beforeEl);\n};\n\n\n/**\n * 视图更新函数\n *\n * @param {Array} changes 数据变化信息\n */\nIfNode.prototype._update = function (changes) {\n    var me = this;\n    var childANode = me.aNode;\n    var elseIndex;\n\n    if (evalExpr(this.cond, this.scope, this.owner)) {\n        elseIndex = -1;\n    }\n    else {\n        each(me.aNode.elses, function (elseANode, index) {\n            var elif = elseANode.directives.elif;\n\n            if (elif && evalExpr(elif.value, me.scope, me.owner) || !elif) {\n                elseIndex = index;\n                childANode = elseANode;\n                return false;\n            }\n        });\n    }\n\n    if (elseIndex === me.elseIndex) {\n        elementUpdateChildren(me, changes);\n    }\n    else {\n        var child = me.children[0];\n        me.children = [];\n        if (child) {\n            child._ondisposed = newChild;\n            child.dispose();\n        }\n        else {\n            newChild();\n        }\n\n        me.elseIndex = elseIndex;\n    }\n\n    function newChild() {\n        if (typeof elseIndex !== 'undefined') {\n            var child = createNode(rinseCondANode(childANode), me);\n            // var parentEl = getNodeStumpParent(me);\n            child.attach(me.el.parentNode, me.el);\n\n            me.children[0] = child;\n        }\n    }\n};\n\n// exports = module.exports = IfNode;\n\n\n/**\n * @file template 节点类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var each = require('../util/each');\n// var guid = require('../util/guid');\n// var insertBefore = require('../browser/insert-before');\n// var NodeType = require('./node-type');\n// var LifeCycle = require('./life-cycle');\n// var nodeDispose = require('./node-dispose');\n// var createReverseNode = require('./create-reverse-node');\n// var elementDisposeChildren = require('./element-dispose-children');\n// var elementOwnToPhase = require('./element-own-to-phase');\n// var elementUpdateChildren = require('./element-update-children');\n// var nodeOwnOnlyChildrenAttach = require('./node-own-only-children-attach');\n\n/**\n * template 节点类\n *\n * @param {Object} aNode 抽象节点\n * @param {Component} owner 所属组件环境\n * @param {Model=} scope 所属数据环境\n * @param {Node} parent 父亲节点\n * @param {DOMChildrenWalker?} reverseWalker 子元素遍历对象\n */\nfunction TemplateNode(aNode, owner, scope, parent, reverseWalker) {\n    this.aNode = aNode;\n    this.owner = owner;\n    this.scope = scope;\n    this.parent = parent;\n    this.parentComponent = parent.nodeType === NodeType.CMPT\n        ? parent\n        : parent.parentComponent;\n\n    this.id = guid();\n    this.lifeCycle = LifeCycle.start;\n    this.children = [];\n\n    // #[begin] reverse\n    if (reverseWalker) {\n        this.sel = document.createComment(this.id);\n        insertBefore(this.sel, reverseWalker.target, reverseWalker.current);\n\n        var me = this;\n        each(this.aNode.children, function (aNodeChild) {\n            me.children.push(createReverseNode(aNodeChild, reverseWalker, me));\n        });\n\n        this.el = document.createComment(this.id);\n        insertBefore(this.el, reverseWalker.target, reverseWalker.current);\n\n        this._toPhase('attached');\n    }\n    // #[end]\n}\n\n\n\nTemplateNode.prototype.nodeType = NodeType.TPL;\n\nTemplateNode.prototype.attach = nodeOwnOnlyChildrenAttach;\n\n/**\n * 销毁释放\n *\n * @param {boolean=} noDetach 是否不要把节点从dom移除\n * @param {boolean=} noTransition 是否不显示过渡动画效果\n */\nTemplateNode.prototype.dispose = function (noDetach, noTransition) {\n    elementDisposeChildren(this, noDetach, noTransition);\n    nodeDispose(this);\n};\n\n\nTemplateNode.prototype._toPhase = elementOwnToPhase;\n\n/**\n * 视图更新函数\n *\n * @param {Array} changes 数据变化信息\n */\nTemplateNode.prototype._update = function (changes) {\n    elementUpdateChildren(this, changes);\n};\n\n// exports = module.exports = TemplateNode;\n\n\n/**\n * @file 对元素的子节点进行反解\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var each = require('../util/each');\n// var DOMChildrenWalker = require('./dom-children-walker');\n// var createReverseNode = require('./create-reverse-node');\n\n// #[begin] reverse\n\n/**\n * 对元素的子节点进行反解\n *\n * @param {Object} element 元素\n */\nfunction reverseElementChildren(element) {\n    var htmlDirective = element.aNode.directives.html;\n\n    if (!htmlDirective) {\n        var reverseWalker = new DOMChildrenWalker(element.el);\n\n        each(element.aNode.children, function (aNodeChild) {\n            element.children.push(createReverseNode(aNodeChild, reverseWalker, element));\n        });\n    }\n}\n// #[end]\n\n// exports = module.exports = reverseElementChildren;\n\n\n/**\n * @file 处理元素的属性操作\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var getPropHandler = require('./get-prop-handler');\n\n/**\n * 处理元素属性操作\n *\n * @param {Object} element 元素对象\n * @param {*} value 属性值\n * @param {Object} prop 属性信息对象\n */\nfunction handleProp(element, value, prop) {\n    var name = prop.name;\n    getPropHandler(element.tagName, name).prop(element.el, value, name, element, prop);\n}\n\n// exports = module.exports = handleProp;\n\n\n/**\n * @file 创建节点对应的 HTMLElement 主元素\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var evalExpr = require('../runtime/eval-expr');\n// var createEl = require('../browser/create-el');\n// var handleProp = require('./handle-prop');\n// var LifeCycle = require('./life-cycle');\n// var NodeType = require('./node-type');\n\nvar emptyPropWhenCreate = {\n    'class': 1,\n    'style': 1,\n    'id': 1\n};\n\n/**\n * 创建节点对应的 HTMLElement 主元素\n */\nfunction elementOwnCreate() {\n    if (!this.lifeCycle.created) {\n        this.lifeCycle = LifeCycle.painting;\n\n        var isComponent = this.nodeType === NodeType.CMPT;\n        var sourceNode = this.aNode.hotspot.sourceNode;\n        var props = this.aNode.props;\n\n        if (sourceNode) {\n            this.el = sourceNode.cloneNode();\n            props = this.aNode.hotspot.dynamicProps;\n        }\n        else {\n            this.el = createEl(this.tagName);\n        }\n\n        for (var i = 0, l = props.length; i < l; i++) {\n            var prop = props[i];\n            var value = isComponent\n                ? evalExpr(prop.expr, this.data, this)\n                : evalExpr(prop.expr, this.scope, this.owner);\n\n            if (value || !emptyPropWhenCreate[prop.name]) {\n                handleProp(this, value, prop);\n            }\n        }\n\n        this._toPhase('created');\n    }\n}\n\n// exports = module.exports = elementOwnCreate;\n\n\n/**\n * @file 将元素attach到页面\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var createNode = require('./create-node');\n// var evalExpr = require('../runtime/eval-expr');\n// var insertBefore = require('../browser/insert-before');\n\n/**\n * 将元素attach到页面\n *\n * @param {Object} element 元素节点\n * @param {HTMLElement} parentEl 要添加到的父元素\n * @param {HTMLElement＝} beforeEl 要添加到哪个元素之前\n */\nfunction elementAttach(element, parentEl, beforeEl) {\n    element._create();\n    insertBefore(element.el, parentEl, beforeEl);\n\n    if (!element._contentReady) {\n        var htmlDirective = element.aNode.directives.html;\n\n        if (htmlDirective) {\n            element.el.innerHTML = evalExpr(htmlDirective.value, element.scope, element.owner);\n        }\n        else {\n            var aNodeChildren = element.aNode.children;\n            for (var i = 0; i < aNodeChildren.length; i++) {\n                var child = createNode(aNodeChildren[i], element);\n                element.children.push(child);\n                child.attach(element.el);\n            }\n        }\n\n        element._contentReady = 1;\n    }\n}\n\n\n// exports = module.exports = elementAttach;\n\n\n/**\n * @file 将元素attach到页面\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var elementAttach = require('./element-attach');\n\n/**\n * 将元素attach到页面\n *\n * @param {HTMLElement} parentEl 要添加到的父元素\n * @param {HTMLElement＝} beforeEl 要添加到哪个元素之前\n */\nfunction elementOwnAttach(parentEl, beforeEl) {\n    if (!this.lifeCycle.attached) {\n        elementAttach(this, parentEl, beforeEl);\n        this._attached();\n    }\n}\n\n// exports = module.exports = elementOwnAttach;\n\n\n/**\n * @file 获取 element 的 transition 控制对象\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var evalArgs = require('../runtime/eval-args');\n// var findMethod = require('../runtime/find-method');\n// var NodeType = require('./node-type');\n\n/**\n * 获取 element 的 transition 控制对象\n *\n * @param {Object} element 元素\n * @return {Object?}\n */\nfunction elementGetTransition(element) {\n    var aNode = element.nodeType === NodeType.CMPT ? element.givenANode : element.aNode;\n    var directive = aNode && aNode.directives.transition;\n    var owner = element.owner;\n\n    var transition;\n    if (directive && owner) {\n        transition = findMethod(owner, directive.value.name);\n\n        if (typeof transition === 'function') {\n            transition = transition.apply(\n                owner,\n                evalArgs(directive.value.args, element.scope, owner)\n            );\n        }\n    }\n\n    return transition || element.transition;\n}\n\n// exports = module.exports = elementGetTransition;\n\n\n/**\n * @file 元素节点执行leave行为\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var elementGetTransition = require('./element-get-transition');\n\n\n/**\n * 元素节点执行leave行为\n *\n * @param {Object} element 元素\n */\nfunction elementLeave(element) {\n    var lifeCycle = element.lifeCycle;\n    if (lifeCycle.leaving) {\n        return;\n    }\n\n    if (element.disposeNoTransition) {\n        element._doneLeave();\n    }\n    else {\n        var transition = elementGetTransition(element);\n\n        if (transition && transition.leave) {\n            element._toPhase('leaving');\n            transition.leave(element.el, function () {\n                element._doneLeave();\n            });\n        }\n        else {\n            element._doneLeave();\n        }\n    }\n}\n\n// exports = module.exports = elementLeave;\n\n\n/**\n * @file 将元素从页面上移除\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var elementLeave = require('./element-leave');\n\n/**\n * 将元素从页面上移除\n */\nfunction elementOwnDetach() {\n    elementLeave(this);\n}\n\n\n// exports = module.exports = elementOwnDetach;\n\n\n/**\n * @file 销毁释放元素\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var elementLeave = require('./element-leave');\n\n/**\n * 销毁释放元素\n *\n * @param {boolean=} noDetach 是否不要把节点从dom移除\n * @param {boolean=} noTransition 是否不显示过渡动画效果\n */\nfunction elementOwnDispose(noDetach, noTransition) {\n    this.leaveDispose = 1;\n    this.disposeNoDetach = noDetach;\n    this.disposeNoTransition = noTransition;\n\n    elementLeave(this);\n}\n\n// exports = module.exports = elementOwnDispose;\n\n\n/**\n * @file 为元素的 el 绑定事件\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var on = require('../browser/on');\n\n/**\n * 为元素的 el 绑定事件\n *\n * @param {string} name 事件名\n * @param {Function} listener 监听器\n * @param {boolean} capture 是否是捕获阶段触发\n */\nfunction elementOwnOnEl(name, listener, capture) {\n    if (typeof listener === 'function') {\n        capture = !!capture;\n        this._elFns.push([name, listener, capture]);\n        on(this.el, name, listener, capture);\n    }\n}\n\n// exports = module.exports = elementOwnOnEl;\n\n\n/**\n * @file  事件绑定不存在的 warning\n * @author varsha(wangshuonpu@gmail.com)\n */\n\n// var each = require('../util/each');\n\n// #[begin] error\n/**\n * 事件绑定不存在的 warning\n *\n * @param {Object} eventBind 事件绑定对象\n * @param {Component} owner 所属的组件对象\n */\nfunction warnEventListenMethod(eventBind, owner) {\n    var valid = true;\n    var method = owner;\n    each(eventBind.expr.name.paths, function (path) {\n        if (!path.value) {\n            return false;\n        }\n\n        method = method[path.value];\n        valid = !!method;\n        return valid;\n    });\n\n    if (!valid) {\n        var paths = [];\n        each(eventBind.expr.name.paths, function (path) {\n            paths.push(path.value);\n        });\n        var message = '[SAN WARNING] ' + eventBind.name + ' listen fail,\"' + paths.join('.') + '\" not exist';\n\n        /* eslint-disable no-console */\n        if (typeof console === 'object' && console.warn) {\n            console.warn(message);\n        }\n        else {\n            throw new Error(message);\n        }\n        /* eslint-enable no-console */\n    }\n}\n// #[end]\n\n// exports = module.exports = warnEventListenMethod;\n\n\n/**\n * @file 完成元素 attached 后的行为\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var bind = require('../util/bind');\n// var empty = require('../util/empty');\n// var isBrowser = require('../browser/is-browser');\n// var trigger = require('../browser/trigger');\n// var NodeType = require('./node-type');\n// var elementGetTransition = require('./element-get-transition');\n// var eventDeclarationListener = require('./event-declaration-listener');\n// var getPropHandler = require('./get-prop-handler');\n// var warnEventListenMethod = require('./warn-event-listen-method');\n\n/**\n * 双绑输入框CompositionEnd事件监听函数\n *\n * @inner\n */\nfunction inputOnCompositionEnd() {\n    if (!this.composing) {\n        return;\n    }\n\n    this.composing = 0;\n\n    trigger(this, 'input');\n}\n\n/**\n * 双绑输入框CompositionStart事件监听函数\n *\n * @inner\n */\nfunction inputOnCompositionStart() {\n    this.composing = 1;\n}\n\nfunction xPropOutputer(xProp, data) {\n    getPropHandler(this.tagName, xProp.name).output(this, xProp, data);\n}\n\nfunction inputXPropOutputer(element, xProp, data) {\n    var outputer = bind(xPropOutputer, element, xProp, data);\n    return function (e) {\n        if (!this.composing) {\n            outputer(e);\n        }\n    };\n}\n\n/**\n * 完成元素 attached 后的行为\n *\n * @param {Object} element 元素节点\n */\nfunction elementOwnAttached() {\n    this._toPhase('created');\n\n    var isComponent = this.nodeType === NodeType.CMPT;\n    var data = isComponent ? this.data : this.scope;\n\n    /* eslint-disable no-redeclare */\n\n    // 处理自身变化时双向绑定的逻辑\n    var xProps = this.aNode.hotspot.xProps;\n    for (var i = 0, l = xProps.length; i < l; i++) {\n        var xProp = xProps[i];\n\n        switch (xProp.name) {\n            case 'value':\n                switch (this.tagName) {\n                    case 'input':\n                    case 'textarea':\n                        if (isBrowser && window.CompositionEvent) {\n                            this._onEl('change', inputOnCompositionEnd);\n                            this._onEl('compositionstart', inputOnCompositionStart);\n                            this._onEl('compositionend', inputOnCompositionEnd);\n                        }\n\n                        this._onEl(\n                            ('oninput' in this.el) ? 'input' : 'propertychange',\n                            inputXPropOutputer(this, xProp, data)\n                        );\n\n                        break;\n\n                    case 'select':\n                        this._onEl('change', bind(xPropOutputer, this, xProp, data));\n                        break;\n                }\n                break;\n\n            case 'checked':\n                switch (this.tagName) {\n                    case 'input':\n                        switch (this.el.type) {\n                            case 'checkbox':\n                            case 'radio':\n                                this._onEl('click', bind(xPropOutputer, this, xProp, data));\n                        }\n                }\n                break;\n        }\n    }\n\n    // bind events\n    var events = isComponent\n        ? this.aNode.events.concat(this.nativeEvents)\n        : this.aNode.events;\n\n    for (var i = 0, l = events.length; i < l; i++) {\n        var eventBind = events[i];\n        var owner = isComponent ? this : this.owner;\n\n        // 判断是否是nativeEvent，下面的warn方法和事件绑定都需要\n        // 依此指定eventBind.expr.name位于owner还是owner.owner上\n        if (eventBind.modifier.native) {\n            owner = owner.owner;\n            data = this.scope || owner.data;\n        }\n\n        // #[begin] error\n        warnEventListenMethod(eventBind, owner);\n        // #[end]\n\n        this._onEl(\n            eventBind.name,\n            bind(\n                eventDeclarationListener,\n                owner,\n                eventBind,\n                0,\n                data\n            ),\n            eventBind.modifier.capture\n        );\n    }\n\n    this._toPhase('attached');\n\n\n    if (this._isInitFromEl) {\n        this._isInitFromEl = false;\n    }\n    else {\n        var transition = elementGetTransition(this);\n        if (transition && transition.enter) {\n            transition.enter(this.el, empty);\n        }\n    }\n}\n\n// exports = module.exports = elementOwnAttached;\n\n\n/**\n * @file 销毁元素节点\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var un = require('../browser/un');\n// var removeEl = require('../browser/remove-el');\n// var elementDisposeChildren = require('./element-dispose-children');\n// var nodeDispose = require('./node-dispose');\n\n/**\n * 销毁元素节点\n *\n * @param {Object} element 要销毁的元素节点\n * @param {Object=} options 销毁行为的参数\n */\nfunction elementDispose(element) {\n    elementDisposeChildren(element, 1, 1);\n\n    // el 事件解绑\n    var len = element._elFns.length;\n    while (len--) {\n        var fn = element._elFns[len];\n        un(element.el, fn[0], fn[1], fn[2]);\n    }\n    element._elFns = null;\n\n\n    // 如果没有parent，说明是一个root component，一定要从dom树中remove\n    if (!element.disposeNoDetach || !element.parent) {\n        removeEl(element.el);\n    }\n\n    if (element._toPhase) {\n        element._toPhase('detached');\n    }\n\n    nodeDispose(element);\n}\n\n\n// exports = module.exports = elementDispose;\n\n\n/**\n * @file 初始化 element 节点的 tagName 处理\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ieOldThan9 = require('../browser/ie-old-than-9');\n\n/**\n * 初始化 element 节点的 tagName 处理\n *\n * @param {Object} node 节点对象\n */\nfunction elementInitTagName(node) {\n    node.tagName = node.tagName || node.aNode.tagName || 'div';\n\n    // #[begin] allua\n    // ie8- 不支持innerHTML输出自定义标签\n    if (ieOldThan9 && node.tagName.indexOf('-') > 0) {\n        node.tagName = 'div';\n    }\n    // #[end]\n}\n\n\n// exports = module.exports = elementInitTagName;\n\n\n/**\n * @file 给 devtool 发通知消息\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var isBrowser = require('../browser/is-browser');\n\n// #[begin] devtool\nvar san4devtool;\n\n/**\n * 给 devtool 发通知消息\n *\n * @param {string} name 消息名称\n * @param {*} arg 消息参数\n */\nfunction emitDevtool(name, arg) {\n    if (isBrowser && san4devtool && san4devtool.debug && window.__san_devtool__) {\n        window.__san_devtool__.emit(name, arg);\n    }\n}\n\nemitDevtool.start = function (main) {\n    san4devtool = main;\n    emitDevtool('san', main);\n};\n// #[end]\n\n// exports = module.exports = emitDevtool;\n\n\n/**\n * @file 组件类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var bind = require('../util/bind');\n// var each = require('../util/each');\n// var guid = require('../util/guid');\n// var extend = require('../util/extend');\n// var nextTick = require('../util/next-tick');\n// var emitDevtool = require('../util/emit-devtool');\n// var ExprType = require('../parser/expr-type');\n// var parseExpr = require('../parser/parse-expr');\n// var createAccessor = require('../parser/create-accessor');\n// var postProp = require('../parser/post-prop');\n// var removeEl = require('../browser/remove-el');\n// var Data = require('../runtime/data');\n// var evalExpr = require('../runtime/eval-expr');\n// var changeExprCompare = require('../runtime/change-expr-compare');\n// var compileComponent = require('./compile-component');\n// var componentPreheat = require('./component-preheat');\n// var LifeCycle = require('./life-cycle');\n// var getANodeProp = require('./get-a-node-prop');\n// var isDataChangeByElement = require('./is-data-change-by-element');\n// var eventDeclarationListener = require('./event-declaration-listener');\n// var reverseElementChildren = require('./reverse-element-children');\n// var camelComponentBinds = require('./camel-component-binds');\n// var NodeType = require('./node-type');\n// var elementInitTagName = require('./element-init-tag-name');\n// var elementOwnAttached = require('./element-own-attached');\n// var elementDispose = require('./element-dispose');\n// var elementUpdateChildren = require('./element-update-children');\n// var elementOwnOnEl = require('./element-own-on-el');\n// var elementOwnCreate = require('./element-own-create');\n// var elementOwnAttach = require('./element-own-attach');\n// var elementOwnDetach = require('./element-own-detach');\n// var elementOwnDispose = require('./element-own-dispose');\n// var warnEventListenMethod = require('./warn-event-listen-method');\n// var elementDisposeChildren = require('./element-dispose-children');\n// var elementAttach = require('./element-attach');\n// var handleProp = require('./handle-prop');\n// var createDataTypesChecker = require('../util/create-data-types-checker');\n\n\n\n/**\n * 组件类\n *\n * @class\n * @param {Object} options 初始化参数\n */\nfunction Component(options) { // eslint-disable-line\n    options = options || {};\n\n    this.lifeCycle = LifeCycle.start;\n    this.children = [];\n    this._elFns = [];\n    this.listeners = {};\n    this.slotChildren = [];\n\n    var clazz = this.constructor;\n\n    this.filters = this.filters || clazz.filters || {};\n    this.computed = this.computed || clazz.computed || {};\n    this.messages = this.messages || clazz.messages || {};\n    this.subTag = options.subTag;\n\n    // compile\n    compileComponent(clazz);\n    componentPreheat(clazz);\n\n    var me = this;\n    var protoANode = clazz.prototype.aNode;\n\n    me.givenANode = options.aNode;\n    me.givenNamedSlotBinds = [];\n    me.givenSlots = {\n        named: {}\n    };\n\n    this.owner = options.owner;\n    this.scope = options.scope;\n    this.el = options.el;\n\n    var parent = options.parent;\n    if (parent) {\n        this.parent = parent;\n        this.parentComponent = parent.nodeType === NodeType.CMPT\n            ? parent\n            : parent && parent.parentComponent;\n    }\n\n    this.id = guid();\n\n    // #[begin] reverse\n    if (this.el) {\n        var firstChild = this.el.firstChild;\n        if (firstChild && firstChild.nodeType === 8) {\n            var stumpMatch = firstChild.data.match(/^\\s*s-data:([\\s\\S]+)?$/);\n            if (stumpMatch) {\n                var stumpText = stumpMatch[1];\n\n                // fill component data\n                options.data = (new Function(\n                    'return ' + stumpText.replace(/^[\\s\\n]*/, '')\n                ))();\n\n                removeEl(firstChild);\n            }\n        }\n    }\n    // #[end]\n\n    // native事件数组\n    this.nativeEvents = [];\n\n    if (this.givenANode) {\n        // 组件运行时传入的结构，做slot解析\n        this._createGivenSlots();\n\n        each(this.givenANode.events, function (eventBind) {\n            // 保存当前实例的native事件，下面创建aNode时候做合并\n            if (eventBind.modifier.native) {\n                me.nativeEvents.push(eventBind);\n                return;\n            }\n\n            // #[begin] error\n            warnEventListenMethod(eventBind, options.owner);\n            // #[end]\n\n            me.on(\n                eventBind.name,\n                bind(eventDeclarationListener, options.owner, eventBind, 1, options.scope),\n                eventBind\n            );\n        });\n\n        this.tagName = protoANode.tagName || me.givenANode.tagName;\n        this.binds = camelComponentBinds(this.givenANode.props);\n    }\n\n    this._toPhase('compiled');\n\n    // init data\n    this.data = new Data(\n        extend(\n            typeof this.initData === 'function' && this.initData() || {},\n            options.data\n        )\n    );\n\n    elementInitTagName(this);\n\n    each(this.binds, function (bind) {\n        postProp(bind);\n\n        if (me.scope) {\n            var value = evalExpr(bind.expr, me.scope, me.owner);\n            if (typeof value !== 'undefined') {\n                // See: https://github.com/ecomfe/san/issues/191\n                me.data.set(bind.name, value);\n            }\n        }\n    });\n\n    // #[begin] error\n    // 在初始化 + 数据绑定后，开始数据校验\n    // NOTE: 只在开发版本中进行属性校验\n    var dataTypes = this.dataTypes || clazz.dataTypes;\n    if (dataTypes) {\n        var dataTypeChecker = createDataTypesChecker(\n            dataTypes,\n            this.subTag || this.name || clazz.name\n        );\n        this.data.setTypeChecker(dataTypeChecker);\n        this.data.checkDataTypes();\n    }\n    // #[end]\n\n    this.computedDeps = {};\n    /* eslint-disable guard-for-in */\n    for (var expr in this.computed) {\n        if (!this.computedDeps[expr]) {\n            this._calcComputed(expr);\n        }\n    }\n    /* eslint-enable guard-for-in */\n\n    if (!this.dataChanger) {\n        this.dataChanger = bind(this._dataChanger, this);\n        this.data.listen(this.dataChanger);\n    }\n    this._toPhase('inited');\n\n    // #[begin] reverse\n    if (this.el) {\n        reverseElementChildren(this);\n        this._attached();\n    }\n\n    var walker = options.reverseWalker;\n    if (walker) {\n        var currentNode = walker.current;\n        if (currentNode && currentNode.nodeType === 1) {\n            this.el = currentNode;\n            walker.goNext();\n        }\n\n        reverseElementChildren(this);\n\n        this._attached();\n    }\n    // #[end]\n}\n\n\n\nComponent.prototype.getComponentType = function (aNode) {\n    return this.components[aNode.tagName];\n};\n\n/**\n * 初始化创建组件外部传入的插槽对象\n *\n * @protected\n */\nComponent.prototype._createGivenSlots = function () {\n    var me = this;\n    me.givenSlots.named = {};\n\n    // 组件运行时传入的结构，做slot解析\n    me.givenANode && me.scope && each(me.givenANode.children, function (child) {\n        var target;\n\n        var slotBind = !child.textExpr && getANodeProp(child, 'slot');\n        if (slotBind) {\n            !me.givenSlotInited && me.givenNamedSlotBinds.push(slotBind);\n\n            var slotName = evalExpr(slotBind.expr, me.scope, me.owner);\n            target = me.givenSlots.named[slotName];\n            if (!target) {\n                target = me.givenSlots.named[slotName] = [];\n            }\n        }\n        else if (!me.givenSlotInited) {\n            target = me.givenSlots.noname;\n            if (!target) {\n                target = me.givenSlots.noname = [];\n            }\n        }\n\n        target && target.push(child);\n    });\n\n    me.givenSlotInited = true;\n};\n\n/**\n * 类型标识\n *\n * @type {string}\n */\nComponent.prototype.nodeType = NodeType.CMPT;\n\n/**\n * 在下一个更新周期运行函数\n *\n * @param {Function} fn 要运行的函数\n */\nComponent.prototype.nextTick = nextTick;\n\n/* eslint-disable operator-linebreak */\n/**\n * 使节点到达相应的生命周期\n *\n * @protected\n * @param {string} name 生命周期名称\n */\nComponent.prototype._callHook =\nComponent.prototype._toPhase = function (name) {\n    if (!this.lifeCycle[name]) {\n        this.lifeCycle = LifeCycle[name] || this.lifeCycle;\n        if (typeof this[name] === 'function') {\n            this[name]();\n        }\n\n        // 通知devtool\n        // #[begin] devtool\n        emitDevtool('comp-' + name, this);\n        // #[end]\n    }\n};\n/* eslint-enable operator-linebreak */\n\n\n/**\n * 添加事件监听器\n *\n * @param {string} name 事件名\n * @param {Function} listener 监听器\n * @param {string?} declaration 声明式\n */\nComponent.prototype.on = function (name, listener, declaration) {\n    if (typeof listener === 'function') {\n        if (!this.listeners[name]) {\n            this.listeners[name] = [];\n        }\n        this.listeners[name].push({fn: listener, declaration: declaration});\n    }\n};\n\n/**\n * 移除事件监听器\n *\n * @param {string} name 事件名\n * @param {Function=} listener 监听器\n */\nComponent.prototype.un = function (name, listener) {\n    var nameListeners = this.listeners[name];\n    var len = nameListeners && nameListeners.length;\n\n    while (len--) {\n        if (!listener || listener === nameListeners[len].fn) {\n            nameListeners.splice(len, 1);\n        }\n    }\n};\n\n\n/**\n * 派发事件\n *\n * @param {string} name 事件名\n * @param {Object} event 事件对象\n */\nComponent.prototype.fire = function (name, event) {\n    var me = this;\n    each(this.listeners[name], function (listener) {\n        listener.fn.call(me, event);\n    });\n};\n\n/**\n * 计算 computed 属性的值\n *\n * @private\n * @param {string} computedExpr computed表达式串\n */\nComponent.prototype._calcComputed = function (computedExpr) {\n    var computedDeps = this.computedDeps[computedExpr];\n    if (!computedDeps) {\n        computedDeps = this.computedDeps[computedExpr] = {};\n    }\n\n    this.data.set(computedExpr, this.computed[computedExpr].call({\n        data: {\n            get: bind(function (expr) {\n                // #[begin] error\n                if (!expr) {\n                    throw new Error('[SAN ERROR] call get method in computed need argument');\n                }\n                // #[end]\n\n                if (!computedDeps[expr]) {\n                    computedDeps[expr] = 1;\n\n                    if (this.computed[expr]) {\n                        this._calcComputed(expr);\n                    }\n\n                    this.watch(expr, function () {\n                        this._calcComputed(computedExpr);\n                    });\n                }\n\n                return this.data.get(expr);\n            }, this)\n        }\n    }));\n};\n\n/**\n * 派发消息\n * 组件可以派发消息，消息将沿着组件树向上传递，直到遇上第一个处理消息的组件\n *\n * @param {string} name 消息名称\n * @param {*?} value 消息值\n */\nComponent.prototype.dispatch = function (name, value) {\n    var parentComponent = this.parentComponent;\n\n    while (parentComponent) {\n        var receiver = parentComponent.messages[name] || parentComponent.messages['*'];\n        if (typeof receiver === 'function') {\n            receiver.call(\n                parentComponent,\n                {target: this, value: value, name: name}\n            );\n            break;\n        }\n\n        parentComponent = parentComponent.parentComponent;\n    }\n};\n\n/**\n * 获取组件内部的 slot\n *\n * @param {string=} name slot名称，空为default slot\n * @return {Array}\n */\nComponent.prototype.slot = function (name) {\n    var result = [];\n    var me = this;\n\n    function childrenTraversal(children) {\n        each(children, function (child) {\n            if (child.nodeType === NodeType.SLOT && child.owner === me) {\n                if (child.isNamed && child.name === name\n                    || !child.isNamed && !name\n                ) {\n                    result.push(child);\n                }\n            }\n            else {\n                childrenTraversal(child.children);\n            }\n        });\n    }\n\n    childrenTraversal(this.children);\n    return result;\n};\n\n/**\n * 获取带有 san-ref 指令的子组件引用\n *\n * @param {string} name 子组件的引用名\n * @return {Component}\n */\nComponent.prototype.ref = function (name) {\n    var refTarget;\n    var owner = this;\n\n    function childrenTraversal(children) {\n        each(children, function (child) {\n            elementTraversal(child);\n            return !refTarget;\n        });\n    }\n\n    function elementTraversal(element) {\n        var nodeType = element.nodeType;\n        if (nodeType === NodeType.TEXT) {\n            return;\n        }\n\n        if (element.owner === owner) {\n            var ref;\n            switch (element.nodeType) {\n                case NodeType.ELEM:\n                    ref = element.aNode.directives.ref;\n                    if (ref && evalExpr(ref.value, element.scope, owner) === name) {\n                        refTarget = element.el;\n                    }\n                    break;\n\n                case NodeType.CMPT:\n                    ref = element.givenANode.directives.ref;\n                    if (ref && evalExpr(ref.value, element.scope, owner) === name) {\n                        refTarget = element;\n                    }\n            }\n\n            !refTarget && childrenTraversal(element.slotChildren);\n        }\n\n        !refTarget && childrenTraversal(element.children);\n    }\n\n    childrenTraversal(this.children);\n\n    return refTarget;\n};\n\n\n/**\n * 视图更新函数\n *\n * @param {Array?} changes 数据变化信息\n */\nComponent.prototype._update = function (changes) {\n    if (this.lifeCycle.disposed) {\n        return;\n    }\n\n    var me = this;\n\n\n    var needReloadForSlot = false;\n    this._notifyNeedReload = function () {\n        needReloadForSlot = true;\n    };\n\n    if (changes) {\n        each(changes, function (change) {\n            var changeExpr = change.expr;\n\n            each(me.binds, function (bindItem) {\n                var relation;\n                var setExpr = bindItem.name;\n                var updateExpr = bindItem.expr;\n\n                if (!isDataChangeByElement(change, me, setExpr)\n                    && (relation = changeExprCompare(changeExpr, updateExpr, me.scope))\n                ) {\n                    if (relation > 2) {\n                        setExpr = createAccessor(\n                            [\n                                {\n                                    type: ExprType.STRING,\n                                    value: setExpr\n                                }\n                            ].concat(changeExpr.paths.slice(updateExpr.paths.length))\n                        );\n\n                        updateExpr = changeExpr;\n                    }\n\n                    me.data.set(setExpr, evalExpr(updateExpr, me.scope, me.owner), {\n                        target: {\n                            id: me.owner.id\n                        }\n                    });\n                }\n            });\n\n            each(me.givenNamedSlotBinds, function (bindItem) {\n                needReloadForSlot = needReloadForSlot || changeExprCompare(changeExpr, bindItem.expr, me.scope);\n                return !needReloadForSlot;\n            });\n        });\n\n        if (needReloadForSlot) {\n            this._createGivenSlots();\n            this._repaintChildren();\n        }\n        else {\n            var slotChildrenLen = this.slotChildren.length;\n            while (slotChildrenLen--) {\n                var slotChild = this.slotChildren[slotChildrenLen];\n\n                if (slotChild.lifeCycle.disposed) {\n                    this.slotChildren.splice(slotChildrenLen, 1);\n                }\n                else if (slotChild.isInserted) {\n                    slotChild._update(changes, 1);\n                }\n            }\n        }\n    }\n\n    var dataChanges = this.dataChanges;\n    if (dataChanges) {\n        this.dataChanges = null;\n        each(this.aNode.hotspot.dynamicProps, function (prop) {\n            each(dataChanges, function (change) {\n                if (changeExprCompare(change.expr, prop.expr, me.data)\n                    || prop.hintExpr && changeExprCompare(change.expr, prop.hintExpr, me.data)\n                ) {\n                    handleProp(me, evalExpr(prop.expr, me.data, me), prop);\n                    return false;\n                }\n            });\n        });\n\n        elementUpdateChildren(this, dataChanges);\n        if (needReloadForSlot) {\n            this._createGivenSlots();\n            this._repaintChildren();\n        }\n\n        this._toPhase('updated');\n\n        if (this.owner) {\n            this._updateBindxOwner(dataChanges);\n            this.owner._update();\n        }\n    }\n\n    this._notifyNeedReload = null;\n};\n\nComponent.prototype._updateBindxOwner = function (dataChanges) {\n    var me = this;\n\n    if (this.owner) {\n        each(dataChanges, function (change) {\n            each(me.binds, function (bindItem) {\n                var changeExpr = change.expr;\n                if (bindItem.x\n                    && !isDataChangeByElement(change, me.owner)\n                    && changeExprCompare(changeExpr, parseExpr(bindItem.name), me.data)\n                ) {\n                    var updateScopeExpr = bindItem.expr;\n                    if (changeExpr.paths.length > 1) {\n                        updateScopeExpr = createAccessor(\n                            bindItem.expr.paths.concat(changeExpr.paths.slice(1))\n                        );\n                    }\n\n                    me.scope.set(\n                        updateScopeExpr,\n                        evalExpr(changeExpr, me.data, me),\n                        {\n                            target: {\n                                id: me.id,\n                                prop: bindItem.name\n                            }\n                        }\n                    );\n                }\n            });\n        });\n    }\n};\n\n/**\n * 重新绘制组件的内容\n * 当 dynamic slot name 发生变更或 slot 匹配发生变化时，重新绘制\n * 在组件级别重绘有点粗暴，但是能保证视图结果正确性\n */\nComponent.prototype._repaintChildren = function () {\n    elementDisposeChildren(this, 0, 1);\n    this.children = [];\n\n    this._contentReady = 0;\n    this.slotChildren = [];\n    elementAttach(this);\n};\n\n\n/**\n * 组件内部监听数据变化的函数\n *\n * @private\n * @param {Object} change 数据变化信息\n */\nComponent.prototype._dataChanger = function (change) {\n    if (this.lifeCycle.painting || this.lifeCycle.created) {\n        if (!this.dataChanges) {\n            nextTick(this._update, this);\n            this.dataChanges = [];\n        }\n\n        this.dataChanges.push(change);\n    }\n    else if (this.lifeCycle.inited && this.owner) {\n        this._updateBindxOwner([change]);\n    }\n};\n\n\n/**\n * 监听组件的数据变化\n *\n * @param {string} dataName 变化的数据项\n * @param {Function} listener 监听函数\n */\nComponent.prototype.watch = function (dataName, listener) {\n    var dataExpr = parseExpr(dataName);\n\n    this.data.listen(bind(function (change) {\n        if (changeExprCompare(change.expr, dataExpr, this.data)) {\n            listener.call(this, evalExpr(dataExpr, this.data, this), change);\n        }\n    }, this));\n};\n\n/**\n * 组件销毁的行为\n *\n * @param {Object} options 销毁行为的参数\n */\nComponent.prototype.dispose = elementOwnDispose;\n\nComponent.prototype._doneLeave = function () {\n    if (this.leaveDispose) {\n        if (!this.lifeCycle.disposed) {\n            // 这里不用挨个调用 dispose 了，因为 children 释放链会调用的\n            this.slotChildren = null;\n\n            this.data.unlisten();\n            this.dataChanger = null;\n            this.dataChanges = null;\n\n            elementDispose(\n                this,\n                this.disposeNoDetach,\n                this.disposeNoTransition\n            );\n            this.listeners = null;\n\n            this.givenANode = null;\n            this.givenSlots = null;\n            this.givenNamedSlotBinds = null;\n        }\n    }\n    else if (this.lifeCycle.attached) {\n        removeEl(this.el);\n        this._toPhase('detached');\n    }\n};\n\n/**\n * 完成组件 attached 后的行为\n *\n * @param {Object} element 元素节点\n */\nComponent.prototype._attached = elementOwnAttached;\n\nComponent.prototype.attach = elementOwnAttach;\nComponent.prototype.detach = elementOwnDetach;\nComponent.prototype._create = elementOwnCreate;\nComponent.prototype._onEl = elementOwnOnEl;\n\n\n// exports = module.exports = Component;\n\n\n/**\n * @file 创建组件类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var Component = require('./component');\n// var inherits = require('../util/inherits');\n\n/**\n * 创建组件类\n *\n * @param {Object} proto 组件类的方法表\n * @return {Function}\n */\nfunction defineComponent(proto) {\n    // 如果传入一个不是 san component 的 constructor，直接返回不是组件构造函数\n    // 这种场景导致的错误 san 不予考虑\n    if (typeof proto === 'function') {\n        return proto;\n    }\n\n    // #[begin] error\n    if (typeof proto !== 'object') {\n        throw new Error('[SAN FATAL] param must be a plain object.');\n    }\n    // #[end]\n\n    function ComponentClass(option) { // eslint-disable-line\n        Component.call(this, option);\n    }\n\n    ComponentClass.prototype = proto;\n    inherits(ComponentClass, Component);\n\n    return ComponentClass;\n}\n\n// exports = module.exports = defineComponent;\n\n\n/**\n * @file 编译组件类\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var createANode = require('../parser/create-a-node');\n// var parseTemplate = require('../parser/parse-template');\n// var parseText = require('../parser/parse-text');\n// var defineComponent = require('./define-component');\n\n\n/**\n * 编译组件类。预解析template和components\n *\n * @param {Function} ComponentClass 组件类\n */\nfunction compileComponent(ComponentClass) {\n    var proto = ComponentClass.prototype;\n\n    // pre define components class\n    if (!proto.hasOwnProperty('_cmptReady')) {\n        proto.components = ComponentClass.components || proto.components || {};\n        var components = proto.components;\n\n        for (var key in components) { // eslint-disable-line\n            var componentClass = components[key];\n\n            if (typeof componentClass === 'object') {\n                components[key] = defineComponent(componentClass);\n            }\n            else if (componentClass === 'self') {\n                components[key] = ComponentClass;\n            }\n        }\n\n        proto._cmptReady = 1;\n    }\n\n\n    // pre compile template\n    if (!proto.hasOwnProperty('aNode')) {\n        proto.aNode = createANode();\n\n        var tpl = ComponentClass.template || proto.template;\n        if (tpl) {\n            var aNode = parseTemplate(tpl, {\n                trimWhitespace: proto.trimWhitespace || ComponentClass.trimWhitespace,\n                delimiters: proto.delimiters || ComponentClass.delimiters\n            });\n            var firstChild = aNode.children[0];\n\n            // #[begin] error\n            if (aNode.children.length !== 1 || firstChild.textExpr) {\n                throw new Error('[SAN FATAL] template must have a root element.');\n            }\n            // #[end]\n\n            proto.aNode = firstChild;\n            if (firstChild.tagName === 'template') {\n                firstChild.tagName = null;\n            }\n\n            var componentPropExtra = {\n                'class': {name: 'class', expr: parseText('{{class | _class | _sep(\" \")}}')},\n                'style': {name: 'style', expr: parseText('{{style | _style | _sep(\";\")}}')},\n                'id': {name: 'id', expr: parseText('{{id}}')}\n            };\n\n            var len = firstChild.props.length;\n            while (len--) {\n                var prop = firstChild.props[len];\n                var extra = componentPropExtra[prop.name];\n\n                if (extra) {\n                    firstChild.props.splice(len, 1);\n                    componentPropExtra[prop.name] = prop;\n\n                    if (prop.name !== 'id') {\n                        prop.expr.segs.push(extra.expr.segs[0]);\n                        prop.expr.value = null;\n                    }\n                }\n            }\n\n            firstChild.props.push(\n                componentPropExtra['class'], // eslint-disable-line dot-notation\n                componentPropExtra.style,\n                componentPropExtra.id\n            );\n        }\n    }\n}\n\n// exports = module.exports = compileComponent;\n\n\n/**\n * @file 组件预热\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('../parser/expr-type');\n// var each = require('../util/each');\n// var createEl = require('../browser/create-el');\n// var getPropHandler = require('./get-prop-handler');\n// var getANodeProp = require('./get-a-node-prop');\n// var isBrowser = require('../browser/is-browser');\n\n/**\n * 组件预热，分析组件aNode的数据引用等信息\n *\n * @param {Function} ComponentClass 组件类\n */\nfunction componentPreheat(ComponentClass) {\n    var stack = [];\n\n    function recordHotspotData(refs, notContentData) {\n        var len = stack.length;\n        each(stack, function (aNode, index) {\n            if (!notContentData || index !== len - 1) {\n                each(refs, function (ref) {\n                    aNode.hotspot.data[ref] = 1;\n                });\n            }\n        });\n    }\n\n\n    function analyseANodeHotspot(aNode) {\n        if (!aNode.hotspot) {\n            stack.push(aNode);\n\n\n            if (aNode.textExpr) {\n                aNode.hotspot = {data: {}};\n                recordHotspotData(analyseExprDataHotspot(aNode.textExpr));\n            }\n            else {\n                var sourceNode;\n                if (isBrowser && aNode.tagName && !/^(template|slot|select|input|option)$/i.test(aNode.tagName)) {\n                    sourceNode = createEl(aNode.tagName);\n                }\n\n                aNode.hotspot = {\n                    data: {},\n                    dynamicProps: [],\n                    xProps: [],\n                    props: {},\n                    sourceNode: sourceNode\n                };\n\n\n                // === analyse hotspot data: start\n                each(aNode.vars, function (varItem) {\n                    recordHotspotData(analyseExprDataHotspot(varItem.expr));\n                });\n\n                each(aNode.props, function (prop) {\n                    recordHotspotData(analyseExprDataHotspot(prop.expr));\n                });\n\n                /* eslint-disable guard-for-in */\n                for (var key in aNode.directives) {\n                    var directive = aNode.directives[key];\n                    recordHotspotData(analyseExprDataHotspot(directive.value), key !== 'html');\n                }\n                /* eslint-enable guard-for-in */\n\n                each(aNode.elses, function (child) {\n                    analyseANodeHotspot(child);\n                });\n\n                each(aNode.children, function (child) {\n                    analyseANodeHotspot(child);\n                });\n                // === analyse hotspot data: end\n\n\n                // === analyse hotspot props: start\n                each(aNode.props, function (prop, index) {\n                    aNode.hotspot.props[prop.name] = index;\n\n                    if (prop.name === 'id') {\n                        prop.id = true;\n                        aNode.hotspot.idProp = prop;\n                        aNode.hotspot.dynamicProps.push(prop);\n                    }\n                    else if (prop.expr.value != null) {\n                        if (sourceNode) {\n                            getPropHandler(aNode.tagName, prop.name)\n                                .prop(sourceNode, prop.expr.value, prop.name, aNode);\n                        }\n                    }\n                    else {\n                        if (prop.x) {\n                            aNode.hotspot.xProps.push(prop);\n                        }\n                        aNode.hotspot.dynamicProps.push(prop);\n                    }\n                });\n\n                // ie 下，如果 option 没有 value 属性，select.value = xx 操作不会选中 option\n                // 所以没有设置 value 时，默认把 option 的内容作为 value\n                if (aNode.tagName === 'option'\n                    && !getANodeProp(aNode, 'value')\n                    && aNode.children[0]\n                ) {\n                    var valueProp = {\n                        name: 'value',\n                        expr: aNode.children[0].textExpr\n                    };\n                    aNode.props.push(valueProp);\n                    aNode.hotspot.dynamicProps.push(valueProp);\n                    aNode.hotspot.props.value = aNode.props.length - 1;\n                }\n                // === analyse hotspot props: end\n            }\n\n            stack.pop();\n        }\n    }\n\n    analyseANodeHotspot(ComponentClass.prototype.aNode);\n}\n\n/**\n * 分析表达式的数据引用\n *\n * @param {Object} expr 要分析的表达式\n * @return {Array}\n */\nfunction analyseExprDataHotspot(expr) {\n    var refs = [];\n\n    function analyseExprs(exprs) {\n        each(exprs, function (expr) {\n            refs = refs.concat(analyseExprDataHotspot(expr));\n        });\n    }\n\n    switch (expr.type) {\n        case ExprType.ACCESSOR:\n            var paths = expr.paths;\n            refs.push(paths[0].value);\n\n            if (paths.length > 1) {\n                refs.push(paths[0].value + '.' + (paths[1].value || '*'));\n            }\n\n            analyseExprs(paths.slice(1));\n            break;\n\n        case ExprType.UNARY:\n            return analyseExprDataHotspot(expr.expr);\n\n        case ExprType.TEXT:\n        case ExprType.BINARY:\n        case ExprType.TERTIARY:\n            analyseExprs(expr.segs);\n            break;\n\n        case ExprType.INTERP:\n            refs = analyseExprDataHotspot(expr.expr);\n\n            each(expr.filters, function (filter) {\n                analyseExprs(filter.name.paths);\n                analyseExprs(filter.args);\n            });\n\n            break;\n\n    }\n\n    return refs;\n}\n\n// exports = module.exports = componentPreheat;\n\n\n/**\n * @file 将 binds 的 name 从 kebabcase 转换成 camelcase\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var kebab2camel = require('../util/kebab2camel');\n// var each = require('../util/each');\n\n/**\n * 将 binds 的 name 从 kebabcase 转换成 camelcase\n *\n * @param {Array} binds binds集合\n * @return {Array}\n */\nfunction camelComponentBinds(binds) {\n    var result = [];\n    each(binds, function (bind) {\n        result.push({\n            name: kebab2camel(bind.name),\n            expr: bind.expr,\n            x: bind.x,\n            raw: bind.raw\n        });\n    });\n\n    return result;\n}\n\n// exports = module.exports = camelComponentBinds;\n\n\n/**\n * @file 编译源码的 helper 方法集合\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var each = require('../util/each');\n// var ExprType = require('../parser/expr-type');\n\n// #[begin] ssr\n// \n// /**\n//  * 编译源码的 helper 方法集合对象\n//  */\n// var compileExprSource = {\n// \n//     /**\n//      * 字符串字面化\n//      *\n//      * @param {string} source 需要字面化的字符串\n//      * @return {string} 字符串字面化结果\n//      */\n//     stringLiteralize: function (source) {\n//         return '\"'\n//             + source\n//                 .replace(/\\x5C/g, '\\\\\\\\')\n//                 .replace(/\"/g, '\\\\\"')\n//                 .replace(/\\x0A/g, '\\\\n')\n//                 .replace(/\\x09/g, '\\\\t')\n//                 .replace(/\\x0D/g, '\\\\r')\n//                 // .replace( /\\x08/g, '\\\\b' )\n//                 // .replace( /\\x0C/g, '\\\\f' )\n//             + '\"';\n//     },\n// \n//     /**\n//      * 生成数据访问表达式代码\n//      *\n//      * @param {Object?} accessorExpr accessor表达式对象\n//      * @return {string}\n//      */\n//     dataAccess: function (accessorExpr) {\n//         var code = 'componentCtx.data';\n//         if (accessorExpr) {\n//             each(accessorExpr.paths, function (path) {\n//                 if (path.type === ExprType.ACCESSOR) {\n//                     code += '[' + compileExprSource.dataAccess(path) + ']';\n//                     return;\n//                 }\n// \n//                 switch (typeof path.value) {\n//                     case 'string':\n//                         code += '.' + path.value;\n//                         break;\n// \n//                     case 'number':\n//                         code += '[' + path.value + ']';\n//                         break;\n//                 }\n//             });\n//         }\n// \n//         return code;\n//     },\n// \n//     /**\n//      * 生成插值代码\n//      *\n//      * @param {Object} interpExpr 插值表达式对象\n//      * @return {string}\n//      */\n//     interp: function (interpExpr) {\n//         var code = compileExprSource.expr(interpExpr.expr);\n// \n// \n//         each(interpExpr.filters, function (filter) {\n//             code = 'componentCtx.callFilter(\"' + filter.name.paths[0].value + '\", [' + code;\n//             each(filter.args, function (arg) {\n//                 code += ', ' + compileExprSource.expr(arg);\n//             });\n//             code += '])';\n//         });\n// \n//         if (!interpExpr.original) {\n//             return 'escapeHTML(' + code + ')';\n//         }\n// \n//         return code;\n//     },\n// \n//     /**\n//      * 生成文本片段代码\n//      *\n//      * @param {Object} textExpr 文本片段表达式对象\n//      * @return {string}\n//      */\n//     text: function (textExpr) {\n//         if (textExpr.segs.length === 0) {\n//             return '\"\"';\n//         }\n// \n//         var code = '';\n// \n//         each(textExpr.segs, function (seg) {\n//             var segCode = compileExprSource.expr(seg);\n//             code += code ? ' + ' + segCode : segCode;\n//         });\n// \n//         return code;\n//     },\n// \n//     /**\n//      * 二元表达式操作符映射表\n//      *\n//      * @type {Object}\n//      */\n//     binaryOp: {\n//         /* eslint-disable */\n//         43: '+',\n//         45: '-',\n//         42: '*',\n//         47: '/',\n//         60: '<',\n//         62: '>',\n//         76: '&&',\n//         94: '!=',\n//         121: '<=',\n//         122: '==',\n//         123: '>=',\n//         155: '!==',\n//         183: '===',\n//         248: '||'\n//         /* eslint-enable */\n//     },\n// \n//     /**\n//      * 生成表达式代码\n//      *\n//      * @param {Object} expr 表达式对象\n//      * @return {string}\n//      */\n//     expr: function (expr) {\n//         switch (expr.type) {\n//             case ExprType.UNARY:\n//                 return '!' + compileExprSource.expr(expr.expr);\n// \n//             case ExprType.BINARY:\n//                 return compileExprSource.expr(expr.segs[0])\n//                     + compileExprSource.binaryOp[expr.operator]\n//                     + compileExprSource.expr(expr.segs[1]);\n// \n//             case ExprType.TERTIARY:\n//                 return compileExprSource.expr(expr.segs[0])\n//                     + '?' + compileExprSource.expr(expr.segs[1])\n//                     + ':' + compileExprSource.expr(expr.segs[2]);\n// \n//             case ExprType.STRING:\n//                 return compileExprSource.stringLiteralize(expr.value);\n// \n//             case ExprType.NUMBER:\n//                 return expr.value;\n// \n//             case ExprType.BOOL:\n//                 return expr.value ? 'true' : 'false';\n// \n//             case ExprType.ACCESSOR:\n//                 return compileExprSource.dataAccess(expr);\n// \n//             case ExprType.INTERP:\n//                 return compileExprSource.interp(expr);\n// \n//             case ExprType.TEXT:\n//                 return compileExprSource.text(expr);\n//         }\n//     }\n// };\n// #[end]\n\n// exports = module.exports = compileExprSource;\n\n\n/**\n * @file 编译源码的中间buffer类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var each = require('../util/each');\n// var compileExprSource = require('./compile-expr-source');\n\n\n// #[begin] ssr\n// /**\n//  * 编译源码的中间buffer类\n//  *\n//  * @class\n//  */\n// function CompileSourceBuffer() {\n//     this.segs = [];\n// }\n// \n// /**\n//  * 添加原始代码，将原封不动输出\n//  *\n//  * @param {string} code 原始代码\n//  */\n// CompileSourceBuffer.prototype.addRaw = function (code) {\n//     this.segs.push({\n//         type: 'RAW',\n//         code: code\n//     });\n// };\n// \n// /**\n//  * 添加被拼接为html的原始代码\n//  *\n//  * @param {string} code 原始代码\n//  */\n// CompileSourceBuffer.prototype.joinRaw = function (code) {\n//     this.segs.push({\n//         type: 'JOIN_RAW',\n//         code: code\n//     });\n// };\n// \n// /**\n//  * 添加renderer方法的起始源码\n//  */\n// CompileSourceBuffer.prototype.addRendererStart = function () {\n//     this.addRaw('function (data, parentCtx, givenSlots) {');\n//     this.addRaw('var html = \"\";');\n// };\n// \n// /**\n//  * 添加renderer方法的结束源码\n//  */\n// CompileSourceBuffer.prototype.addRendererEnd = function () {\n//     this.addRaw('return html;');\n//     this.addRaw('}');\n// };\n// \n// /**\n//  * 添加被拼接为html的静态字符串\n//  *\n//  * @param {string} str 被拼接的字符串\n//  */\n// CompileSourceBuffer.prototype.joinString = function (str) {\n//     this.segs.push({\n//         str: str,\n//         type: 'JOIN_STRING'\n//     });\n// };\n// \n// /**\n//  * 添加被拼接为html的数据访问\n//  *\n//  * @param {Object?} accessor 数据访问表达式对象\n//  */\n// CompileSourceBuffer.prototype.joinDataStringify = function () {\n//     this.segs.push({\n//         type: 'JOIN_DATA_STRINGIFY'\n//     });\n// };\n// \n// /**\n//  * 添加被拼接为html的表达式\n//  *\n//  * @param {Object} expr 表达式对象\n//  */\n// CompileSourceBuffer.prototype.joinExpr = function (expr) {\n//     this.segs.push({\n//         expr: expr,\n//         type: 'JOIN_EXPR'\n//     });\n// };\n// \n// /**\n//  * 生成编译后代码\n//  *\n//  * @return {string}\n//  */\n// CompileSourceBuffer.prototype.toCode = function () {\n//     var code = [];\n//     var temp = '';\n// \n//     function genStrLiteral() {\n//         if (temp) {\n//             code.push('html += ' + compileExprSource.stringLiteralize(temp) + ';');\n//         }\n// \n//         temp = '';\n//     }\n// \n//     each(this.segs, function (seg) {\n//         if (seg.type === 'JOIN_STRING') {\n//             temp += seg.str;\n//             return;\n//         }\n// \n//         genStrLiteral();\n//         switch (seg.type) {\n//             case 'JOIN_DATA_STRINGIFY':\n//                 code.push('html += stringifier.any(' + compileExprSource.dataAccess() + ');');\n//                 break;\n// \n//             case 'JOIN_EXPR':\n//                 code.push('html += ' + compileExprSource.expr(seg.expr) + ';');\n//                 break;\n// \n//             case 'JOIN_RAW':\n//                 code.push('html += ' + seg.code + ';');\n//                 break;\n// \n//             case 'RAW':\n//                 code.push(seg.code);\n//                 break;\n// \n//         }\n//     });\n// \n//     genStrLiteral();\n// \n//     return code.join('\\n');\n// };\n// \n// #[end]\n\n// exports = module.exports = CompileSourceBuffer;\n\n\n/**\n * @file 将组件编译成 render 方法的 js 源码\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var each = require('../util/each');\n// var guid = require('../util/guid');\n// var parseExpr = require('../parser/parse-expr');\n// var createANode = require('../parser/create-a-node');\n// var cloneDirectives = require('../parser/clone-directives');\n// var autoCloseTags = require('../browser/auto-close-tags');\n// var CompileSourceBuffer = require('./compile-source-buffer');\n// var compileExprSource = require('./compile-expr-source');\n// var rinseCondANode = require('./rinse-cond-anode');\n// var getANodeProp = require('./get-a-node-prop');\n\n// #[begin] ssr\n// \n// /**\n//  * 生成序列化时起始桩的html\n//  *\n//  * @param {string} type 桩类型标识\n//  * @param {string?} content 桩内的内容\n//  * @return {string}\n//  */\n// function serializeStump(type, content) {\n//     return '<!--s-' + type + (content ? ':' + content : '') + '-->';\n// }\n// \n// /**\n//  * 生成序列化时结束桩的html\n//  *\n//  * @param {string} type 桩类型标识\n//  * @return {string}\n//  */\n// function serializeStumpEnd(type) {\n//     return '<!--/s-' + type + '-->';\n// }\n// \n// /**\n//  * element 的编译方法集合对象\n//  *\n//  * @inner\n//  */\n// var elementSourceCompiler = {\n// \n//     /* eslint-disable max-params */\n//     /**\n//      * 编译元素标签头\n//      *\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {string} tagName 标签名\n//      * @param {Array} props 属性列表\n//      * @param {string?} extraProp 额外的属性串\n//      * @param {boolean?} isClose 是否闭合\n//      */\n//     tagStart: function (sourceBuffer, tagName, props, extraProp, isClose) {\n//         sourceBuffer.joinString('<' + tagName);\n//         sourceBuffer.joinString(extraProp || '');\n// \n//         // index list\n//         var propsIndex = {};\n//         each(props, function (prop) {\n//             propsIndex[prop.name] = prop;\n//         });\n// \n//         each(props, function (prop) {\n//             if (prop.name === 'slot') {\n//                 return;\n//             }\n// \n//             if (prop.name === 'value') {\n//                 switch (tagName) {\n//                     case 'textarea':\n//                         return;\n// \n//                     case 'select':\n//                         sourceBuffer.addRaw('$selectValue = '\n//                             + compileExprSource.expr(prop.expr)\n//                             + ' || \"\";'\n//                         );\n//                         return;\n// \n//                     case 'option':\n//                         sourceBuffer.addRaw('$optionValue = '\n//                             + compileExprSource.expr(prop.expr)\n//                             + ';'\n//                         );\n//                         // value\n//                         sourceBuffer.addRaw('if ($optionValue != null) {');\n//                         sourceBuffer.joinRaw('\" value=\\\\\"\" + $optionValue + \"\\\\\"\"');\n//                         sourceBuffer.addRaw('}');\n// \n//                         // selected\n//                         sourceBuffer.addRaw('if ($optionValue === $selectValue) {');\n//                         sourceBuffer.joinString(' selected');\n//                         sourceBuffer.addRaw('}');\n//                         return;\n//                 }\n//             }\n// \n//             switch (prop.name) {\n//                 case 'readonly':\n//                 case 'disabled':\n//                 case 'multiple':\n//                     if (prop.raw === '') {\n//                         sourceBuffer.joinString(' ' + prop.name);\n//                     }\n//                     else {\n//                         sourceBuffer.joinRaw('boolAttrFilter(\"' + prop.name + '\", '\n//                             + compileExprSource.expr(prop.expr)\n//                             + ')'\n//                         );\n//                     }\n//                     break;\n// \n//                 case 'checked':\n//                     if (tagName === 'input') {\n//                         var valueProp = propsIndex.value;\n//                         var valueCode = compileExprSource.expr(valueProp.expr);\n// \n//                         if (valueProp) {\n//                             switch (propsIndex.type.raw) {\n//                                 case 'checkbox':\n//                                     sourceBuffer.addRaw('if (contains('\n//                                         + compileExprSource.expr(prop.expr)\n//                                         + ', '\n//                                         + valueCode\n//                                         + ')) {'\n//                                     );\n//                                     sourceBuffer.joinString(' checked');\n//                                     sourceBuffer.addRaw('}');\n//                                     break;\n// \n//                                 case 'radio':\n//                                     sourceBuffer.addRaw('if ('\n//                                         + compileExprSource.expr(prop.expr)\n//                                         + ' === '\n//                                         + valueCode\n//                                         + ') {'\n//                                     );\n//                                     sourceBuffer.joinString(' checked');\n//                                     sourceBuffer.addRaw('}');\n//                                     break;\n//                             }\n//                         }\n//                     }\n//                     break;\n// \n//                 default:\n//                     if (prop.attr) {\n//                         sourceBuffer.joinString(' ' + prop.attr);\n//                     }\n//                     else {\n//                         sourceBuffer.joinRaw('attrFilter(\"' + prop.name + '\", '\n//                             + (prop.x ? 'escapeHTML(' : '')\n//                             + compileExprSource.expr(prop.expr)\n//                             + (prop.x ? ')' : '')\n//                             + ')'\n//                         );\n//                     }\n//                     break;\n//             }\n//         });\n// \n//         sourceBuffer.joinString(isClose ? '/>' : '>');\n//     },\n//     /* eslint-enable max-params */\n// \n//     /**\n//      * 编译元素闭合\n//      *\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {string} tagName 标签名\n//      */\n//     tagEnd: function (sourceBuffer, tagName) {\n//         if (!autoCloseTags[tagName]) {\n//             sourceBuffer.joinString('</' + tagName + '>');\n//         }\n// \n//         if (tagName === 'select') {\n//             sourceBuffer.addRaw('$selectValue = null;');\n//         }\n// \n//         if (tagName === 'option') {\n//             sourceBuffer.addRaw('$optionValue = null;');\n//         }\n//     },\n// \n//     /**\n//      * 编译元素内容\n//      *\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {ANode} aNode 元素的抽象节点信息\n//      * @param {Component} owner 所属组件实例环境\n//      */\n//     inner: function (sourceBuffer, aNode, owner) {\n//         // inner content\n//         if (aNode.tagName === 'textarea') {\n//             var valueProp = getANodeProp(aNode, 'value');\n//             if (valueProp) {\n//                 sourceBuffer.joinRaw('escapeHTML('\n//                     + compileExprSource.expr(valueProp.expr)\n//                     + ')'\n//                 );\n//             }\n// \n//             return;\n//         }\n// \n//         var htmlDirective = aNode.directives.html;\n//         if (htmlDirective) {\n//             sourceBuffer.joinExpr(htmlDirective.value);\n//         }\n//         else {\n//             /* eslint-disable no-use-before-define */\n//             each(aNode.children, function (aNodeChild) {\n//                 sourceBuffer.addRaw(aNodeCompiler.compile(aNodeChild, sourceBuffer, owner));\n//             });\n//             /* eslint-enable no-use-before-define */\n//         }\n//     }\n// };\n// \n// /**\n//  * ANode 的编译方法集合对象\n//  *\n//  * @inner\n//  */\n// var aNodeCompiler = {\n// \n//     /**\n//      * 编译节点\n//      *\n//      * @param {ANode} aNode 抽象节点\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {Component} owner 所属组件实例环境\n//      * @param {Object} extra 编译所需的一些额外信息\n//      */\n//     compile: function (aNode, sourceBuffer, owner, extra) {\n//         extra = extra || {};\n//         var compileMethod = 'compileElement';\n// \n//         if (aNode.textExpr) {\n//             compileMethod = 'compileText';\n//         }\n//         else if (aNode.directives['if']) { // eslint-disable-line dot-notation\n//             compileMethod = 'compileIf';\n//         }\n//         else if (aNode.directives['for']) { // eslint-disable-line dot-notation\n//             compileMethod = 'compileFor';\n//         }\n//         else if (aNode.tagName === 'slot') {\n//             compileMethod = 'compileSlot';\n//         }\n//         else if (aNode.tagName === 'template') {\n//             compileMethod = 'compileTemplate';\n//         }\n//         else {\n//             var ComponentType = owner.getComponentType(aNode);\n//             if (ComponentType) {\n//                 compileMethod = 'compileComponent';\n//                 extra.ComponentClass = ComponentType;\n//             }\n//         }\n// \n//         aNodeCompiler[compileMethod](aNode, sourceBuffer, owner, extra);\n//     },\n// \n//     /**\n//      * 编译文本节点\n//      *\n//      * @param {ANode} aNode 节点对象\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      */\n//     compileText: function (aNode, sourceBuffer) {\n//         if (aNode.textExpr.original) {\n//             sourceBuffer.joinString(serializeStump('text'));\n//         }\n// \n//         var value = aNode.textExpr.value;\n//         if (value == null) {\n//             sourceBuffer.joinExpr(aNode.textExpr);\n//         }\n//         else {\n//             sourceBuffer.joinString(value);\n//         }\n// \n//         if (aNode.textExpr.original) {\n//             sourceBuffer.joinString(serializeStumpEnd('text'));\n//         }\n//     },\n// \n//     /**\n//      * 编译template节点\n//      *\n//      * @param {ANode} aNode 节点对象\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {Component} owner 所属组件实例环境\n//      */\n//     compileTemplate: function (aNode, sourceBuffer, owner) {\n//         elementSourceCompiler.inner(sourceBuffer, aNode, owner);\n//     },\n// \n//     /**\n//      * 编译 if 节点\n//      *\n//      * @param {ANode} aNode 节点对象\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {Component} owner 所属组件实例环境\n//      */\n//     compileIf: function (aNode, sourceBuffer, owner) {\n//         sourceBuffer.addRaw('(function () {');\n// \n//         sourceBuffer.addRaw('var ifIndex = null;');\n// \n//         // output main if\n//         var ifDirective = aNode.directives['if']; // eslint-disable-line dot-notation\n//         sourceBuffer.addRaw('if (' + compileExprSource.expr(ifDirective.value) + ') {');\n//         sourceBuffer.addRaw(\n//             aNodeCompiler.compile(\n//                 rinseCondANode(aNode),\n//                 sourceBuffer,\n//                 owner\n//             )\n//         );\n//         sourceBuffer.addRaw('}');\n// \n//         // output elif and else\n//         each(aNode.elses, function (elseANode, index) {\n//             var elifDirective = elseANode.directives.elif;\n//             if (elifDirective) {\n//                 sourceBuffer.addRaw('else if (' + compileExprSource.expr(elifDirective.value) + ') {');\n//             }\n//             else {\n//                 sourceBuffer.addRaw('else {');\n//             }\n// \n//             sourceBuffer.addRaw(\n//                 aNodeCompiler.compile(\n//                     rinseCondANode(elseANode),\n//                     sourceBuffer,\n//                     owner\n//                 )\n//             );\n//             sourceBuffer.addRaw('}');\n//         });\n// \n//         sourceBuffer.addRaw('})();');\n//     },\n// \n//     /**\n//      * 编译 for 节点\n//      *\n//      * @param {ANode} aNode 节点对象\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {Component} owner 所属组件实例环境\n//      */\n//     compileFor: function (aNode, sourceBuffer, owner) {\n//         var forElementANode = createANode({\n//             children: aNode.children,\n//             props: aNode.props,\n//             events: aNode.events,\n//             tagName: aNode.tagName,\n//             directives: cloneDirectives(aNode.directives, {\n//                 'for': 1\n//             }),\n//             hotspot: aNode.hotspot\n//         });\n// \n//         var forDirective = aNode.directives['for']; // eslint-disable-line dot-notation\n//         var itemName = forDirective.item.raw;\n//         var indexName = forDirective.index.raw;\n//         var listName = compileExprSource.dataAccess(forDirective.value);\n// \n//         if (indexName === '$index') {\n//             indexName = guid();\n//         }\n// \n//         sourceBuffer.addRaw('for ('\n//             + 'var ' + indexName + ' = 0; '\n//             + indexName + ' < ' + listName + '.length; '\n//             + indexName + '++) {'\n//         );\n//         sourceBuffer.addRaw('componentCtx.data.' + indexName + '=' + indexName + ';');\n//         sourceBuffer.addRaw('componentCtx.data.' + itemName + '= ' + listName + '[' + indexName + '];');\n//         sourceBuffer.addRaw(\n//             aNodeCompiler.compile(\n//                 forElementANode,\n//                 sourceBuffer,\n//                 owner\n//             )\n//         );\n//         sourceBuffer.addRaw('}');\n//     },\n// \n//     /**\n//      * 编译 slot 节点\n//      *\n//      * @param {ANode} aNode 节点对象\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {Component} owner 所属组件实例环境\n//      */\n//     compileSlot: function (aNode, sourceBuffer, owner) {\n//         sourceBuffer.addRaw('(function () {');\n// \n//         sourceBuffer.addRaw('function $defaultSlotRender(componentCtx) {');\n//         sourceBuffer.addRaw('  var html = \"\";');\n//         each(aNode.children, function (aNodeChild) {\n//             sourceBuffer.addRaw(aNodeCompiler.compile(aNodeChild, sourceBuffer, owner));\n//         });\n//         sourceBuffer.addRaw('  return html;');\n//         sourceBuffer.addRaw('}');\n// \n//         sourceBuffer.addRaw('  var $givenSlot = [];');\n// \n//         var nameProp = getANodeProp(aNode, 'name');\n//         if (nameProp) {\n//             sourceBuffer.addRaw('var $slotName = ' + compileExprSource.expr(nameProp.expr) + ';');\n//         }\n//         else {\n//             sourceBuffer.addRaw('var $slotName = null;');\n//         }\n// \n//         sourceBuffer.addRaw('var $ctxGivenSlots = componentCtx.givenSlots;');\n//         sourceBuffer.addRaw('for (var $i = 0; $i < $ctxGivenSlots.length; $i++) {');\n//         sourceBuffer.addRaw('  if ($ctxGivenSlots[$i][1] == $slotName) {');\n//         sourceBuffer.addRaw('    $givenSlot.push($ctxGivenSlots[$i][0]);');\n//         sourceBuffer.addRaw('  }');\n//         sourceBuffer.addRaw('}');\n// \n// \n//         sourceBuffer.addRaw('var $isInserted = $givenSlot.length > 0;');\n//         sourceBuffer.addRaw('if (!$isInserted) { $givenSlot.push($defaultSlotRender); }');\n// \n//         sourceBuffer.addRaw('var $slotCtx = $isInserted ? componentCtx.owner : componentCtx;');\n//         if (aNode.vars) {\n//             sourceBuffer.addRaw('$slotCtx = {data: extend({}, $slotCtx.data), filters: $slotCtx.filters, callFilter: $slotCtx.callFilter};'); // eslint-disable-line\n//             each(aNode.vars, function (varItem) {\n//                 sourceBuffer.addRaw(\n//                     '$slotCtx.data[\"' + varItem.name + '\"] = '\n//                     + compileExprSource.expr(varItem.expr)\n//                     + ';'\n//                 );\n//             });\n//         }\n// \n//         sourceBuffer.addRaw('for (var $renderIndex = 0; $renderIndex < $givenSlot.length; $renderIndex++) {');\n//         sourceBuffer.addRaw('  html += $givenSlot[$renderIndex]($slotCtx);');\n//         sourceBuffer.addRaw('}');\n// \n//         sourceBuffer.addRaw('})();');\n//     },\n// \n//     /**\n//      * 编译普通节点\n//      *\n//      * @param {ANode} aNode 节点对象\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {Component} owner 所属组件实例环境\n//      * @param {Object} extra 编译所需的一些额外信息\n//      */\n//     compileElement: function (aNode, sourceBuffer, owner, extra) {\n//         extra = extra || {};\n//         // if (aNode.tagName === 'option'\n//         //     && !getANodeProp(aNode, 'value')\n//         //     && aNode.children[0]\n//         // ) {\n//         //     aNode.props.push({\n//         //         name: 'value',\n//         //         expr: aNode.children[0].textExpr\n//         //     });\n//         // }\n// \n//         elementSourceCompiler.tagStart(\n//             sourceBuffer,\n//             aNode.tagName,\n//             aNode.props,\n//             extra.prop\n//         );\n// \n//         elementSourceCompiler.inner(sourceBuffer, aNode, owner);\n//         elementSourceCompiler.tagEnd(sourceBuffer, aNode.tagName);\n//     },\n// \n//     /**\n//      * 编译组件节点\n//      *\n//      * @param {ANode} aNode 节点对象\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {Component} owner 所属组件实例环境\n//      * @param {Object} extra 编译所需的一些额外信息\n//      * @param {Function} extra.ComponentClass 对应组件类\n//      */\n//     compileComponent: function (aNode, sourceBuffer, owner, extra) {\n//         if (aNode) {\n//             sourceBuffer.addRaw('var $slotName = null;');\n//             sourceBuffer.addRaw('var $givenSlots = [];');\n//             each(aNode.children, function (child) {\n//                 var slotBind = !child.textExpr && getANodeProp(child, 'slot');\n//                 if (slotBind) {\n//                     sourceBuffer.addRaw('$slotName = ' + compileExprSource.expr(slotBind.expr) + ';');\n//                     sourceBuffer.addRaw('$givenSlots.push([function (componentCtx) {');\n//                     sourceBuffer.addRaw('  var html = \"\";');\n//                     sourceBuffer.addRaw(aNodeCompiler.compile(child, sourceBuffer, owner));\n//                     sourceBuffer.addRaw('  return html;');\n//                     sourceBuffer.addRaw('}, $slotName]);');\n//                 }\n//                 else {\n//                     sourceBuffer.addRaw('$givenSlots.push([function (componentCtx) {');\n//                     sourceBuffer.addRaw('  var html = \"\";');\n//                     sourceBuffer.addRaw(aNodeCompiler.compile(child, sourceBuffer, owner));\n//                     sourceBuffer.addRaw('  return html;');\n//                     sourceBuffer.addRaw('}]);');\n//                 }\n//             });\n//         }\n// \n//         var ComponentClass = extra.ComponentClass;\n//         var component = new ComponentClass({\n//             aNode: aNode,\n//             owner: owner,\n//             subTag: aNode.tagName\n//         });\n// \n//         var givenData = [];\n// \n//         each(component.binds, function (prop) {\n//             givenData.push(\n//                 compileExprSource.stringLiteralize(prop.name)\n//                 + ':'\n//                 + compileExprSource.expr(prop.expr)\n//             );\n//         });\n// \n//         sourceBuffer.addRaw('html += (');\n//         sourceBuffer.addRendererStart();\n//         compileComponentSource(sourceBuffer, component, extra && extra.prop);\n//         sourceBuffer.addRendererEnd();\n//         sourceBuffer.addRaw(')({' + givenData.join(',\\n') + '}, componentCtx, $givenSlots);');\n//         sourceBuffer.addRaw('$givenSlots = null;');\n//     }\n// };\n// /* eslint-disable guard-for-in */\n// \n// /**\n//  * 生成组件 renderer 时 ctx 对象构建的代码\n//  *\n//  * @inner\n//  * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//  * @param {Object} component 组件实例\n//  * @param {string?} extraProp 额外的属性串\n//  */\n// function compileComponentSource(sourceBuffer, component, extraProp) {\n//     sourceBuffer.addRaw(genComponentContextCode(component));\n//     sourceBuffer.addRaw('componentCtx.owner = parentCtx;');\n//     sourceBuffer.addRaw('componentCtx.givenSlots = givenSlots;');\n// \n// \n//     sourceBuffer.addRaw('data = extend(componentCtx.data, data);');\n//     sourceBuffer.addRaw('for (var $i = 0; $i < componentCtx.computedNames.length; $i++) {');\n//     sourceBuffer.addRaw('  var $computedName = componentCtx.computedNames[$i];');\n//     sourceBuffer.addRaw('  data[$computedName] = componentCtx.computed[$computedName]();');\n//     sourceBuffer.addRaw('}');\n// \n//     extraProp = extraProp || '';\n// \n//     var eventDeclarations = [];\n//     for (var key in component.listeners) {\n//         each(component.listeners[key], function (listener) {\n//             if (listener.declaration) {\n//                 eventDeclarations.push(listener.declaration);\n//             }\n//         });\n//     }\n// \n//     elementSourceCompiler.tagStart(\n//         sourceBuffer,\n//         component.tagName,\n//         component.aNode.props,\n//         extraProp\n//     );\n// \n//     if (!component.owner) {\n//         sourceBuffer.joinString('<!--s-data:');\n//         sourceBuffer.joinDataStringify();\n//         sourceBuffer.joinString('-->');\n//     }\n// \n// \n// \n//     elementSourceCompiler.inner(sourceBuffer, component.aNode, component);\n//     elementSourceCompiler.tagEnd(sourceBuffer, component.tagName);\n// }\n// \n// var stringifier = {\n//     obj: function (source) {\n//         var prefixComma;\n//         var result = '{';\n// \n//         for (var key in source) {\n//             if (typeof source[key] === 'undefined') {\n//                 continue;\n//             }\n// \n//             if (prefixComma) {\n//                 result += ',';\n//             }\n//             prefixComma = 1;\n// \n//             result += compileExprSource.stringLiteralize(key) + ':' + stringifier.any(source[key]);\n//         }\n// \n//         return result + '}';\n//     },\n// \n//     arr: function (source) {\n//         var prefixComma;\n//         var result = '[';\n// \n//         each(source, function (value) {\n//             if (prefixComma) {\n//                 result += ',';\n//             }\n//             prefixComma = 1;\n// \n//             result += stringifier.any(value);\n//         });\n// \n//         return result + ']';\n//     },\n// \n//     str: function (source) {\n//         return compileExprSource.stringLiteralize(source);\n//     },\n// \n//     date: function (source) {\n//         return 'new Date(' + source.getTime() + ')';\n//     },\n// \n//     any: function (source) {\n//         switch (typeof source) {\n//             case 'string':\n//                 return stringifier.str(source);\n// \n//             case 'number':\n//                 return '' + source;\n// \n//             case 'boolean':\n//                 return source ? 'true' : 'false';\n// \n//             case 'object':\n//                 if (!source) {\n//                     return null;\n//                 }\n// \n//                 if (source instanceof Array) {\n//                     return stringifier.arr(source);\n//                 }\n// \n//                 if (source instanceof Date) {\n//                     return stringifier.date(source);\n//                 }\n// \n//                 return stringifier.obj(source);\n//         }\n// \n//         throw new Error('Cannot Stringify:' + source);\n//     }\n// };\n// \n// /**\n//  * 生成组件 renderer 时 ctx 对象构建的代码\n//  *\n//  * @inner\n//  * @param {Object} component 组件实例\n//  * @return {string}\n//  */\n// function genComponentContextCode(component) {\n//     var code = ['var componentCtx = {'];\n// \n//     // given anode\n//     code.push('givenSlots: [],');\n// \n//     // filters\n//     code.push('filters: {');\n//     var filterCode = [];\n//     for (var key in component.filters) {\n//         var filter = component.filters[key];\n// \n//         if (typeof filter === 'function') {\n//             filterCode.push(key + ': ' + filter.toString());\n//         }\n//     }\n//     code.push(filterCode.join(','));\n//     code.push('},');\n// \n//     code.push(\n//         'callFilter: function (name, args) {',\n//         '    var filter = this.filters[name] || DEFAULT_FILTERS[name];',\n//         '    if (typeof filter === \"function\") {',\n//         '        return filter.apply(this, args);',\n//         '    }',\n//         '},'\n//     );\n// \n//     /* eslint-disable no-redeclare */\n//     // computed obj\n//     code.push('computed: {');\n//     var computedCode = [];\n//     for (var key in component.computed) {\n//         var computed = component.computed[key];\n// \n//         if (typeof computed === 'function') {\n//             computedCode.push(key + ': '\n//                 + computed.toString().replace(\n//                     /this.data.get\\(([^\\)]+)\\)/g,\n//                     function (match, exprLiteral) {\n//                         var exprStr = (new Function('return ' + exprLiteral))();\n//                         var expr = parseExpr(exprStr);\n// \n//                         return compileExprSource.expr(expr);\n//                     })\n//             );\n//         }\n//     }\n//     code.push(computedCode.join(','));\n//     code.push('},');\n// \n//     // computed names\n//     code.push('computedNames: [');\n//     computedCode = [];\n//     for (var key in component.computed) {\n//         var computed = component.computed[key];\n// \n//         if (typeof computed === 'function') {\n//             computedCode.push('\"' + key + '\"');\n//         }\n//     }\n//     code.push(computedCode.join(','));\n//     code.push('],');\n//     /* eslint-enable no-redeclare */\n// \n//     // data\n//     code.push('data: ' + stringifier.any(component.data.get()) + ',');\n// \n//     // tagName\n//     code.push('tagName: \"' + component.tagName + '\"');\n//     code.push('};');\n// \n//     return code.join('\\n');\n// }\n// \n// /* eslint-enable guard-for-in */\n// \n// /* eslint-disable no-unused-vars */\n// /* eslint-disable fecs-camelcase */\n// \n// /**\n//  * 组件编译的模板函数\n//  *\n//  * @inner\n//  */\n// function componentCompilePreCode() {\n//     var $version = '3.5.6';\n// \n//     function extend(target, source) {\n//         if (source) {\n//             Object.keys(source).forEach(function (key) {\n//                 let value = source[key];\n//                 if (typeof value !== 'undefined') {\n//                     target[key] = value;\n//                 }\n//             });\n//         }\n// \n//         return target;\n//     }\n// \n//     function each(array, iterator) {\n//         if (array && array.length > 0) {\n//             for (var i = 0, l = array.length; i < l; i++) {\n//                 if (iterator(array[i], i) === false) {\n//                     break;\n//                 }\n//             }\n//         }\n//     }\n// \n//     function contains(array, value) {\n//         var result;\n//         each(array, function (item) {\n//             result = item === value;\n//             return !result;\n//         });\n// \n//         return result;\n//     }\n// \n//     var HTML_ENTITY = {\n//         /* jshint ignore:start */\n//         '&': '&amp;',\n//         '<': '&lt;',\n//         '>': '&gt;',\n//         '\"': '&quot;',\n//         /* eslint-disable quotes */\n//         \"'\": '&#39;'\n//         /* eslint-enable quotes */\n//         /* jshint ignore:end */\n//     };\n// \n//     function htmlFilterReplacer(c) {\n//         return HTML_ENTITY[c];\n//     }\n// \n//     function escapeHTML(source) {\n//         if (source == null) {\n//             return '';\n//         }\n// \n//         return String(source).replace(/[&<>\"']/g, htmlFilterReplacer);\n//     }\n// \n//     var DEFAULT_FILTERS = {\n//         url: encodeURIComponent,\n//         _class: function (source) {\n//             if (source instanceof Array) {\n//                 return source.join(' ');\n//             }\n// \n//             return source;\n//         },\n//         _style: function (source) {\n//             if (typeof source === 'object') {\n//                 var result = '';\n//                 if (source) {\n//                     Object.keys(source).forEach(function (key) {\n//                         result += key + ':' + source[key] + ';';\n//                     });\n//                 }\n// \n//                 return result;\n//             }\n// \n//             return source || '';\n//         },\n//         _sep: function (source, sep) {\n//             return source ? sep + source : '';\n//         }\n//     };\n// \n//     function attrFilter(name, value) {\n//         if (value) {\n//             return ' ' + name + '=\"' + value + '\"';\n//         }\n// \n//         return '';\n//     }\n// \n//     function boolAttrFilter(name, value) {\n//         if (value && value !== 'false' && value !== '0') {\n//             return ' ' + name;\n//         }\n// \n//         return '';\n//     }\n// \n//     function stringLiteralize(source) {\n//         return '\"'\n//             + source\n//                 .replace(/\\x5C/g, '\\\\\\\\')\n//                 .replace(/\"/g, '\\\\\"')\n//                 .replace(/\\x0A/g, '\\\\n')\n//                 .replace(/\\x09/g, '\\\\t')\n//                 .replace(/\\x0D/g, '\\\\r')\n//             + '\"';\n//     }\n// \n//     var stringifier = {\n//         obj: function (source) {\n//             var prefixComma;\n//             var result = '{';\n// \n//             Object.keys(source).forEach(function (key) {\n//                 if (typeof source[key] === 'undefined') {\n//                     return;\n//                 }\n// \n//                 if (prefixComma) {\n//                     result += ',';\n//                 }\n//                 prefixComma = 1;\n// \n//                 result += stringLiteralize(key) + ':' + stringifier.any(source[key]);\n//             });\n// \n//             return result + '}';\n//         },\n// \n//         arr: function (source) {\n//             var prefixComma;\n//             var result = '[';\n// \n//             each(source, function (value) {\n//                 if (prefixComma) {\n//                     result += ',';\n//                 }\n//                 prefixComma = 1;\n// \n//                 result += stringifier.any(value);\n//             });\n// \n//             return result + ']';\n//         },\n// \n//         str: function (source) {\n//             return stringLiteralize(source);\n//         },\n// \n//         date: function (source) {\n//             return 'new Date(' + source.getTime() + ')';\n//         },\n// \n//         any: function (source) {\n//             switch (typeof source) {\n//                 case 'string':\n//                     return stringifier.str(source);\n// \n//                 case 'number':\n//                     return '' + source;\n// \n//                 case 'boolean':\n//                     return source ? 'true' : 'false';\n// \n//                 case 'object':\n//                     if (!source) {\n//                         return null;\n//                     }\n// \n//                     if (source instanceof Array) {\n//                         return stringifier.arr(source);\n//                     }\n// \n//                     if (source instanceof Date) {\n//                         return stringifier.date(source);\n//                     }\n// \n//                     return stringifier.obj(source);\n//             }\n// \n//             throw new Error('Cannot Stringify:' + source);\n//         }\n//     };\n// }\n// /* eslint-enable no-unused-vars */\n// /* eslint-enable fecs-camelcase */\n// \n// /**\n//  * 将组件编译成 render 方法的 js 源码\n//  *\n//  * @param {Function} ComponentClass 组件类\n//  * @return {string}\n//  */\n// function compileJSSource(ComponentClass) {\n//     var sourceBuffer = new CompileSourceBuffer();\n// \n//     sourceBuffer.addRendererStart();\n//     sourceBuffer.addRaw(\n//         componentCompilePreCode.toString()\n//             .split('\\n')\n//             .slice(1)\n//             .join('\\n')\n//             .replace(/\\}\\s*$/, '')\n//     );\n// \n//     // 先初始化个实例，让模板编译成 ANode，并且能获得初始化数据\n//     var component = new ComponentClass();\n// \n//     compileComponentSource(sourceBuffer, component);\n//     sourceBuffer.addRendererEnd();\n//     return sourceBuffer.toCode();\n// }\n// #[end]\n\n// exports = module.exports = compileJSSource;\n\n    /* eslint-disable no-unused-vars */\n//     var nextTick = require('./util/next-tick');\n//     var inherits = require('./util/inherits');\n//     var parseTemplate = require('./parser/parse-template');\n//     var parseExpr = require('./parser/parse-expr');\n//     var ExprType = require('./parser/expr-type');\n//     var LifeCycle = require('./view/life-cycle');\n//     var NodeType = require('./view/node-type');\n//     var Component = require('./view/component');\n//     var compileComponent = require('./view/compile-component');\n//     var defineComponent = require('./view/define-component');\n//     var emitDevtool = require('./util/emit-devtool');\n//     var compileJSSource = require('./view/compile-js-source');\n//     var Data = require('./runtime/data');\n//     var evalExpr = require('./runtime/eval-expr');\n//     var DataTypes = require('./util/data-types');\n\n\n    var san = {\n        /**\n         * san版本号\n         *\n         * @type {string}\n         */\n        version: '3.5.6',\n\n        // #[begin] devtool\n        /**\n         * 是否开启调试。开启调试时 devtool 会工作\n         *\n         * @type {boolean}\n         */\n        debug: true,\n        // #[end]\n\n        // #[begin] ssr\n//         /**\n//          * 将组件类编译成 renderer 方法\n//          *\n//          * @param {Function} ComponentClass 组件类\n//          * @return {function(Object):string}\n//          */\n//         compileToRenderer: function (ComponentClass) {\n//             var renderer = ComponentClass.__ssrRenderer;\n// \n//             if (!renderer) {\n//                 var code = compileJSSource(ComponentClass);\n//                 renderer = (new Function('return ' + code))();\n//                 ComponentClass.__ssrRenderer = renderer;\n//             }\n// \n//             return renderer;\n//         },\n// \n//         /**\n//          * 将组件类编译成 renderer 方法的源文件\n//          *\n//          * @param {Function} ComponentClass 组件类\n//          * @return {string}\n//          */\n//         compileToSource: compileJSSource,\n        // #[end]\n\n        /**\n         * 组件基类\n         *\n         * @type {Function}\n         */\n        Component: Component,\n\n        /**\n         * 创建组件类\n         *\n         * @param {Object} proto 组件类的方法表\n         * @return {Function}\n         */\n        defineComponent: defineComponent,\n\n        /**\n         * 编译组件类。预解析template和components\n         *\n         * @param {Function} ComponentClass 组件类\n         */\n        compileComponent: compileComponent,\n\n        /**\n         * 解析 template\n         *\n         * @inner\n         * @param {string} source template 源码\n         * @return {ANode}\n         */\n        parseTemplate: parseTemplate,\n\n        /**\n         * 解析表达式\n         *\n         * @param {string} source 源码\n         * @return {Object}\n         */\n        parseExpr: parseExpr,\n\n        /**\n         * 表达式类型枚举\n         *\n         * @const\n         * @type {Object}\n         */\n        ExprType: ExprType,\n\n        /**\n         * 生命周期\n         */\n        LifeCycle: LifeCycle,\n\n        /**\n         * 节点类型\n         *\n         * @const\n         * @type {Object}\n         */\n        NodeType: NodeType,\n\n        /**\n         * 在下一个更新周期运行函数\n         *\n         * @param {Function} fn 要运行的函数\n         */\n        nextTick: nextTick,\n\n        /**\n         * 数据类\n         *\n         * @class\n         * @param {Object?} data 初始数据\n         * @param {Data?} parent 父级数据对象\n         */\n        Data: Data,\n\n        /**\n         * 计算表达式的值\n         *\n         * @param {Object} expr 表达式对象\n         * @param {Data} data 数据对象\n         * @param {Component=} owner 组件对象，用于表达式中filter的执行\n         * @return {*}\n         */\n        evalExpr: evalExpr,\n\n        /**\n         * 构建类之间的继承关系\n         *\n         * @param {Function} subClass 子类函数\n         * @param {Function} superClass 父类函数\n         */\n        inherits: inherits,\n\n        /**\n         * DataTypes\n         *\n         * @type {Object}\n         */\n        DataTypes: DataTypes\n    };\n\n    // export\n    if (typeof exports === 'object' && typeof module === 'object') {\n        // For CommonJS\n        exports = module.exports = san;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        // For AMD\n        define('san', [], san);\n    }\n    else {\n        // For <script src=\"...\"\n        root.san = san;\n    }\n\n    // #[begin] devtool\n    emitDevtool.start(san);\n    // #[end]\n})(this);\n","module.exports = \"\\n<div>\\n    <h1 class=\\\"hello\\\">Hello {{msg}}</h1>\\n    <h3>Hello san</h3>\\n</div>\\n\";","<template>\n    <div>\n        <h1 class=\"hello\">Hello {{msg}}</h1>\n        <h3>Hello san</h3>\n    </div>\n</template>\n\n<script>\n    export default {\n        initData () {\n            return {\n                msg: 'world'\n            };\n        }\n    }\n</script>\n\n<style>\n    .hello {\n        color: blue;\n    }\n</style>","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n","exports = module.exports = require(\"../node_modules/css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n.hello {\\n    color: blue;\\n}\\n\", \"\", {\"version\":3,\"sources\":[\"/home/peterchen/桌面/IFE2018/1.2/src/HelloWorld.san?0e4869cc\"],\"names\":[],\"mappings\":\";;;;;;;;;;;;;;;;;;AAkBA;IACA,YAAA;CACA\",\"file\":\"HelloWorld.san\",\"sourcesContent\":[\"<template>\\n    <div>\\n        <h1 class=\\\"hello\\\">Hello {{msg}}</h1>\\n        <h3>Hello san</h3>\\n    </div>\\n</template>\\n\\n<script>\\n    export default {\\n        initData () {\\n            return {\\n                msg: 'world'\\n            };\\n        }\\n    }\\n</script>\\n\\n<style>\\n    .hello {\\n        color: blue;\\n    }\\n</style>\"],\"sourceRoot\":\"\"}]);\n\n// exports\n","\nvar content = require(\"!!../node_modules/css-loader/index.js?sourceMap!../node_modules/san-loader/lib/style-rewriter.js!../node_modules/san-loader/lib/selector.js?type=style&index=0!./HelloWorld.san\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../node_modules/css-loader/index.js?sourceMap!../node_modules/san-loader/lib/style-rewriter.js!../node_modules/san-loader/lib/selector.js?type=style&index=0!./HelloWorld.san\", function() {\n\t\tvar newContent = require(\"!!../node_modules/css-loader/index.js?sourceMap!../node_modules/san-loader/lib/style-rewriter.js!../node_modules/san-loader/lib/selector.js?type=style&index=0!./HelloWorld.san\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","var __san_script__, __san_template__\nvar __san_styles__ = {}\nrequire(\"!!style-loader!css-loader?sourceMap!../node_modules/san-loader/lib/style-rewriter.js!../node_modules/san-loader/lib/selector.js?type=style&index=0!./HelloWorld.san\")\n__san_script__ = require(\"!!babel-loader!../node_modules/san-loader/lib/selector.js?type=script&index=0!./HelloWorld.san\")\nif (__san_script__ &&\n    __san_script__.__esModule &&\n    Object.keys(__san_script__).length > 1) {\n  console.warn(\"[san-loader] src/HelloWorld.san: named exports in *.san files are ignored.\")}\n__san_template__ = require(\"!!html-loader?minimize=false!../node_modules/san-loader/lib/selector.js?type=template&index=0!./HelloWorld.san\")\nvar __san_proto__ = {}\nif (__san_script__) {\n  __san_proto__ = __san_script__.__esModule\n    ? __san_script__['default']\n    : __san_script__\n}\nif (__san_template__) {\n  __san_proto__.template = __san_template__\n}\nvar san = require(\"san\")\nvar __san_exports__ = san.defineComponent(__san_proto__)\nmodule.exports = __san_exports__\nif (module.exports.__esModule) module.exports = module.exports['default']\nif (!__san_exports__.computed) __san_exports__.computed = {}\nObject.keys(__san_styles__).forEach(function (key) {\nvar module = __san_styles__[key]\n__san_exports__.computed[key] = function () { return module }\n})\n","import HelloWorld from './HelloWorld'\nimport \"./main.css\"\n\nimport { router } from 'san-router'\n\nrouter.add({rule: '/', Component: HelloWorld, target: '#main'})\n\n// start\nrouter.start()"],"sourceRoot":""}