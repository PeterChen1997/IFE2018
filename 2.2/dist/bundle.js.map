{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/san-mui/lib/babelHelpers.js","webpack:///./node_modules/san-mui/node_modules/san/dist/san.dev.js","webpack:///./node_modules/san-mui/lib/Table/TH.js","webpack:///./node_modules/san-mui/lib/Table/TD.js","webpack:///./node_modules/san-mui/lib/Table/TR.js","webpack:///./node_modules/classnames/index.js","webpack:///./node_modules/san-mui/lib/common/util/cx.js","webpack:///./node_modules/style-loader/lib/addStyles.js","webpack:///./node_modules/css-loader/lib/css-base.js","webpack:///./node_modules/san/dist/san.dev.js","webpack:///./node_modules/san-mui/lib/Table/TBody.js","webpack:///./node_modules/san-mui/lib/Ripple/Ripple.js","webpack:///./node_modules/san-mui/lib/Ripple/index.js","webpack:///./node_modules/san-mui/lib/Icon/index.js","webpack:///./node_modules/san-mui/lib/Table/THead.js","webpack:///./node_modules/san-mui/lib/Table/Table.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/timers-browserify/main.js","webpack:///./src/MyApp.san?f571","webpack:///./node_modules/san-mui/lib/common/font/MaterialIcons-Regular.ttf","webpack:///./node_modules/san-mui/lib/common/font/MaterialIcons-Regular.woff","webpack:///./node_modules/san-mui/lib/common/font/MaterialIcons-Regular.woff2","webpack:///./node_modules/san-mui/lib/common/font/MaterialIcons-Regular.eot","webpack:///./node_modules/css-loader/lib/url/escape.js","webpack:///./node_modules/san-mui/lib/Table/Table.styl","webpack:///./node_modules/san-mui/lib/Table/Table.styl?6161","webpack:///./node_modules/san-mui/lib/Table/ConfigurableTable.js","webpack:///./node_modules/san-mui/lib/Radio/Radio.js","webpack:///./node_modules/san-mui/lib/Radio/index.js","webpack:///./node_modules/san-mui/lib/Ripple/FocusRipple.js","webpack:///./node_modules/san-mui/lib/Ripple/CenterRipple.js","webpack:///./node_modules/san-mui/lib/common/help.js","webpack:///./node_modules/san-mui/lib/Ripple/TouchRipple.js","webpack:///./node_modules/san-mui/lib/Icon/Icon.js","webpack:///./node_modules/san-mui/lib/Checkbox/Checkbox.js","webpack:///./node_modules/san-mui/lib/Checkbox/index.js","webpack:///./node_modules/san-mui/lib/Table/TFoot.js","webpack:///./node_modules/san-mui/lib/constants.js","webpack:///./node_modules/san-mui/lib/Table/index.js","webpack:///MyApp.san","webpack:///./src/MyApp.san?81d9","webpack:///./src/MyApp.san?f251","webpack:///./src/MyApp.san","webpack:///./node_modules/style-loader/lib/urls.js","webpack:///./src/main.css","webpack:///./src/main.css?e0d3","webpack:///./node_modules/process/browser.js","webpack:///./node_modules/setimmediate/setImmediate.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","undefined","global","babelHelpers","typeof","Symbol","iterator","obj","constructor","classCallCheck","instance","Constructor","TypeError","createClass","defineProperties","target","props","length","descriptor","writable","key","protoProps","staticProps","extends","assign","arguments","source","receiver","Function","desc","getOwnPropertyDescriptor","parent","getPrototypeOf","inherits","subClass","superClass","create","setPrototypeOf","__proto__","interopRequireDefault","default","interopRequireWildcard","newObj","possibleConstructorReturn","self","ReferenceError","slicedToArray","arr","Array","isArray","_arr","_n","_d","_e","_s","_i","next","done","push","err","sliceIterator","toConsumableArray","arr2","from","apply","setImmediate","root","guidIndex","guidPrefix","Date","getTime","toString","slice","guid","empty","extend","subClassProto","F","each","array","bind","func","thisArg","nativeBind","args","concat","on","el","eventName","listener","capture","addEventListener","attachEvent","splitStr2Obj","result","split","svgTags","createEl","tagName","document","createElementNS","createElement","removeEl","parentNode","removeChild","nextHandler","nextTasks","isNativePromise","Promise","test","nextTick","fn","tasks","MessageChannel","channel","port","port2","port1","onmessage","postMessage","resolve","then","setTimeout","ieVersionMatch","navigator","userAgent","match","ie","ieOldThan9","trigger","event","createEvent","initEvent","dispatchEvent","activeElement","autoCloseTags","ANONYMOUS_CLASS_NAME","getDataType","nodeType","toLowerCase","createChainableChecker","validate","chainedChecker","isRequired","checkType","data","dataName","componentName","fullDataName","dataValue","dataType","Error","createPrimaryTypeChecker","type","DataTypes","Walker","this","len","index","createANode","options","textExpr","directives","events","children","kebab2camel","replace","alpha","toUpperCase","any","string","number","bool","symbol","arrayOf","arrayItemChecker","instanceOf","expectedClass","dataValueClassName","expectedClassName","shape","shapeTypes","shapeKeyName","checker","oneOf","expectedEnumValues","join","oneOfType","expectedEnumOfTypeValues","e","objectOf","typeChecker","dataKeyName","exact","secret","dataValueType","allKeys","currentCode","charCode","cut","start","end","go","distance","nextCode","charCodeAt","goUntil","code","reg","lastIndex","exec","ExprType","STRING","NUMBER","BOOL","ACCESSOR","INTERP","CALL","TEXT","BINARY","UNARY","TERTIARY","createAccessor","paths","readIdent","walker","readTertiaryExpr","conditional","readLogicalORExpr","expr","readLogicalANDExpr","readRelationalExpr","operator","segs","readEqualityExpr","yesExpr","readAccessor","firstSeg","accessorLoop","readUnaryExpr","startCode","startIndex","walkLoop","literal","readString","readNumber","readParenthesizedExpr","readMultiplicativeExpr","readAdditiveExpr","parseExpr","raw","readCall","defaultArgs","ident","parseCall","parseInterp","interp","filters","callExpr","original","ENTITY_DECODE_MAP","lt","gt","nbsp","quot","emsp","ensp","thinsp","copy","zwnj","zwj","amp","regexpLiteral","parseText","delimiters","exprMatch","exprStartReg","RegExp","beforeIndex","pushStringToSeg","text","String","fromCharCode","parseInt","directiveParsers","for","item","ref","if","elif","else","html","transition","postProp","prop","integrateAttr","aNode","realName","prefix","prefixIndex","indexOf","colonIndex","modifier","parser","parseDirective","integrateProp","vars","xMatch","x","seg","getXPath","stack","currentTagName","path","parseTemplate","trimWhitespace","rootNode","tagMatch","tagReg","attrReg","currentNode","stackIndex","beforeLastIndex","tagEnd","pushTextNode","closeIndex","aElement","tagClose","nextCharCode","attrMatch","parentChildrenLen","parentChild","elses","splice","tbodyNode","DEFAULT_FILTERS","url","encodeURIComponent","_class","_style","_sep","sep","evalExpr","owner","dataCache","leftValue","rightValue","filter","filterName","evalArgs","buf","set","dataCacheSource","dataCacheClearly","clear","id","changeExprCompareExprs","changeExpr","exprs","changeExprCompare","changePaths","changeLen","pathExpr","Math","max","filterResult","DataChangeType","lifeCycleOwnIs","LifeCycle","compiled","is","inited","painting","created","attached","leaving","detached","disposed","NodeType","IF","FOR","ELEM","CMPT","SLOT","TPL","getANodeProp","hotspot","HTML_ATTR_PROP_MAP","readonly","cellpadding","cellspacing","colspan","rowspan","valign","usemap","frameborder","defaultElementPropHandler","element","propName","setAttribute","output","bindInfo","svgPropHandler","boolPropHandler","defaultElementPropHandlers","style","cssText","class","className","slot","disabled","autofocus","required","draggable","analInputChecker","checkbox","radio","a","b","elementPropHandlers","input","multiple","checked","state","oper","bindValue","bindType","scope","bindChecked","hintExpr","analInputCheckedState","option","parentSelect","selectValue","isOptionSelected","selected","select","getPropHandler","attrName","tagPropHandlers","propHandler","isDataChangeByElement","change","changeTarget","findMethod","nameExpr","method","Data","listeners","immutableSet","exprPaths","isNaN","eventDeclarationListener","eventBind","isComponentEvent","$event","window","checkDataTypes","setTypeChecker","listen","unlisten","fire","silent","silence","quiet","callee","exprRaw","force","merge","oldValue","returnValue","newArray","deleteCount","insertions","pop","shift","unshift","removeAt","remove","hotTags","isBrowser","insertBefore","targetEl","parentEl","beforeEl","appendChild","warnSetHTML","noSetHTML","message","console","warn","getNodePath","node","nodePaths","nodeParent","anode","subTag","TextNode","reverseWalker","current","sel","goNext","createTextNode","attach","content","createComment","tempFlag","insertAdjacentHTML","dispose","_prev","textUpdateProp","textContent","changesIsInDataRef","changes","dataRef","overview","extOverview","wildOverview","DOMChildrenWalker","child","firstChild","nextSibling","Element","lifeCycle","_elFns","parentComponent","elementInitTagName","_toPhase","reverseElementChildren","_attached","nodeDispose","_ondisposed","createReverseNode","parentIsComponent","childOwner","childScope","IfNode","ForNode","SlotNode","TemplateNode","ComponentType","getComponentType","elementDisposeChildren","noDetach","noTransition","elementUpdateChildren","_update","elementOwnToPhase","createNode","nodeOwnOnlyChildrenAttach","aNodeChildren","genElementChildren","realANode","nameBind","isNamed","givenChildren","givenSlots","named","noname","isInserted","me","initData","varItem","isScoped","slotChildren","aNodeChild","cloneDirectives","excludes","nodeOwnSimpleDispose","nodeOwnCreateStump","ForItemData","forElement","directive","createForDirectiveChild","itemScope","itemANode","param","_create","rinseCondANode","cond","elseIndex","elseANode","handleProp","startRemoveEl","removeTarget","elementOwnAttach","detach","elementOwnDetach","elementOwnDispose","elementOwnCreate","_onEl","elementOwnOnEl","_doneLeave","leaveDispose","elementDispose","disposeNoDetach","disposeNoTransition","dynamicProps","j","htmlDirective","innerHTML","elementOwnAttached","isFromOuter","_notifyNeedReload","scopedChanges","relation","exprResolve","resolveItem","resolvedPaths","originalUpdate","oldChildrenLen","childrenChanges","pushToChildrenChanges","isChildrenRebuild","disposeChildren","parentFirstChild","parentLastChild","lastChild","isOnlyParentChild","newList","newLen","cIndex","cLen","forLen","changeIndex","_splice","_set","changeStart","insertionsLen","newCount","indexChange","deleteLen","spliceArgs","newChildrenLen","lengthChange","_doCreateAndUpdate","doCreateAndUpdate","violentClear","disposedChildCount","disposeChild","childDisposed","replaceNode","cloneNode","replaceChild","nextChild","childANode","newChild","san4devtool","emptyPropWhenCreate","isComponent","sourceNode","elementAttach","_contentReady","elementGetTransition","givenANode","elementLeave","leave","warnEventListenMethod","valid","inputOnCompositionEnd","composing","inputOnCompositionStart","xPropOutputer","xProp","inputXPropOutputer","outputer","xProps","CompositionEvent","nativeEvents","native","_isInitFromEl","enter","removeEventListener","detachEvent","emitDevtool","arg","debug","__san_devtool__","emit","Component","clazz","computed","messages","compileComponent","ComponentClass","recordHotspotData","refs","notContentData","analyseANodeHotspot","analyseExprDataHotspot","idProp","valueProp","componentPreheat","protoANode","givenNamedSlotBinds","binds","firstCommentNode","stumpMatch","stumpText","previousSibling","_createGivenSlots","dataTypes","dataTypeChecker","dataTypeName","createDataTypesChecker","computedDeps","_calcComputed","dataChanger","_dataChanger","defineComponent","proto","components","componentClass","_cmptReady","tpl","template","componentPropExtra","extra","analyseExprs","main","slotBind","givenSlotInited","slotName","_callHook","declaration","un","nameListeners","computedExpr","watch","dispatch","childrenTraversal","refTarget","elementTraversal","needReloadForSlot","bindItem","setExpr","updateExpr","_repaintChildren","slotChildrenLen","slotChild","dataChanges","_updateBindxOwner","updateScopeExpr","dataExpr","san","version","_san","TH","_san$Component","TD","_TD","_TH","_index","_index3","_san2","_TD2","_TH2","_index2","_index4","TR","pos","indeterminate","disable","_data$get","nextSelected","sm-td","sm-th","sm-checkbox","sm-radio","tableSelectable","hasOwn","classNames","classes","argType","_classnames","_constants","getPartClassName","part","COMPONENT_CLASSNAME_PREFIX","classNameBuilder","component","variants","convertToVariants","states","readOnly","hidden","resolveStates","getVariantClassName","addPrefix","getStateClassName","builder","build","_classnames2","setPart","addVariants","_len","extraVariants","_key","map","addStates","_len2","extraStates","_key2","reduce","trim","variant","memo","stylesInDom","isOldIE","all","atob","getElement","styleTarget","querySelector","HTMLIFrameElement","contentDocument","head","singleton","singletonCounter","stylesInsertedAtTop","fixUrls","addStylesToDom","styles","domStyle","parts","addStyle","listToStyles","list","newStyles","base","css","media","sourceMap","insertStyleElement","insertInto","lastStyleElementInsertedAtTop","insertAt","before","removeStyleElement","idx","createStyleElement","attrs","addAttrs","keys","forEach","update","transform","styleIndex","applyToSingletonTag","URL","createObjectURL","revokeObjectURL","Blob","btoa","link","rel","createLinkElement","autoFixUrls","convertToAbsoluteUrls","unescape","JSON","stringify","blob","oldSrc","href","styleSheet","DEBUG","mayRemove","textStore","replaceText","replacement","Boolean","cssNode","childNodes","useSourceMap","cssMapping","sourceMapping","sourceURLs","sources","sourceRoot","cssWithMappingToString","mediaQuery","alreadyImportedModules","_TR","_TR2","TBody","_this2","findChildrenTRs","find","UI:tr-inited","tr","UI:table-select-item","selectable","eachItem","isSelected","_cx","_help","cx","getTimingValue","_ref","progress","_ref2","stop","step","steps","opacity","scale","animating","color","opacityTrans","_this","top","left","width","height","radius","backgroundColor","goStep","curOpacity","curScale","requestAnimationId","requestAnimationFrame","stopAnimation","cancelAnimationFrame","_TouchRipple","_CenterRipple","_FocusRipple","FocusRipple","TouchRipple","CenterRipple","_TouchRipple2","_CenterRipple2","_FocusRipple2","_Icon","_Icon2","THead","Table","thead","checkTHeadState","updateSelectedState","val","total","tbody","tfoot","UI:tbody-inited","UI:thead-inited","UI:table-select-head","selectAll","trDisabled","trSelected","UI:table-select-body","g","eval","Timeout","clearFn","_id","_clearFn","clearTimeout","setInterval","clearInterval","timeout","close","unref","enroll","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","active","_onTimeout","clearImmediate","escape","hmr","locals","_Table2","_THead","_TBody","_Table3","_THead2","_TBody2","ConfigurableTable","_Table","ui-tr","ui-th","ui-td","ui-tbody","ui-thead","renderField","field","fields","title","sm-icon","sm-center-ripple","mainClass","label-left","no-label","label","labelLeft","labelClass","uncheckIcon","checkedIcon","iconClass","handleClick","click","handleTouchStart","handleTouchEnd","handleChange","_Radio","_Radio2","circleStyle","styleClass","_Ripple","_Ripple2","san-ripple","ripples","_el$getBoundingClient","getBoundingClientRect","y","onRippleAnimateEnd","rippleIndex","mozRequestAnimationFrame","webkitRequestAnimationFrame","msRequestAnimationFrame","mozCancelAnimationFrame","clientX","clientY","size","CHECKBOX_DATA_TYPES","indeterminateIcon","dataFullName","realChecked","_e$target","inputChecked","inputValue","stringToInputValue","indeterminateIndex","checkInputDataType","valueType","valueDataType","t","str","Number","_Checkbox","_Checkbox2","TFoot","_TFoot","_ConfigurableTable","_TFoot2","_ConfigurableTable2","sm-table","sm-tr","sm-tbody","sm-thead","sm-tfoot","lists","names","mappings","file","__san_script__","__san_template__","__san_styles__","__san_proto__","__san_exports__","location","baseUrl","protocol","host","currentDir","pathname","fullMatch","origUrl","newUrl","unquotedOrigUrl","$1","cachedSetTimeout","cachedClearTimeout","process","defaultSetTimout","defaultClearTimeout","runTimeout","fun","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","run","marker","runClearTimeout","Item","noop","browser","env","argv","versions","addListener","once","off","removeListener","removeAllListeners","prependListener","prependOnceListener","binding","cwd","chdir","dir","umask","registerImmediate","messagePrefix","onGlobalMessage","nextHandle","tasksByHandle","currentlyRunningATask","doc","attachTo","handle","runIfPresent","importScripts","postMessageIsAsynchronous","oldOnMessage","canUsePostMessage","documentElement","script","onreadystatechange","random","callback","task","getElementById"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 48);\n","(function (root, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"exports\"], factory);\n  } else if (typeof exports === \"object\") {\n    factory(exports);\n  } else {\n    factory(root.babelHelpers = {});\n  }\n})(this, function (global) {\n  var babelHelpers = global;\n  babelHelpers.typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  };\n\n  babelHelpers.classCallCheck = function (instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  };\n\n  babelHelpers.createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n\n  babelHelpers.defineProperty = function (obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n\n    return obj;\n  };\n\n  babelHelpers.extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  babelHelpers.get = function get(object, property, receiver) {\n    if (object === null) object = Function.prototype;\n    var desc = Object.getOwnPropertyDescriptor(object, property);\n\n    if (desc === undefined) {\n      var parent = Object.getPrototypeOf(object);\n\n      if (parent === null) {\n        return undefined;\n      } else {\n        return get(parent, property, receiver);\n      }\n    } else if (\"value\" in desc) {\n      return desc.value;\n    } else {\n      var getter = desc.get;\n\n      if (getter === undefined) {\n        return undefined;\n      }\n\n      return getter.call(receiver);\n    }\n  };\n\n  babelHelpers.inherits = function (subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n      throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n  };\n\n  babelHelpers.interopRequireDefault = function (obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  };\n\n  babelHelpers.interopRequireWildcard = function (obj) {\n    if (obj && obj.__esModule) {\n      return obj;\n    } else {\n      var newObj = {};\n\n      if (obj != null) {\n        for (var key in obj) {\n          if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n        }\n      }\n\n      newObj.default = obj;\n      return newObj;\n    }\n  };\n\n  babelHelpers.possibleConstructorReturn = function (self, call) {\n    if (!self) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n\n    return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n  };\n\n  babelHelpers.slicedToArray = function () {\n    function sliceIterator(arr, i) {\n      var _arr = [];\n      var _n = true;\n      var _d = false;\n      var _e = undefined;\n\n      try {\n        for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n          _arr.push(_s.value);\n\n          if (i && _arr.length === i) break;\n        }\n      } catch (err) {\n        _d = true;\n        _e = err;\n      } finally {\n        try {\n          if (!_n && _i[\"return\"]) _i[\"return\"]();\n        } finally {\n          if (_d) throw _e;\n        }\n      }\n\n      return _arr;\n    }\n\n    return function (arr, i) {\n      if (Array.isArray(arr)) {\n        return arr;\n      } else if (Symbol.iterator in Object(arr)) {\n        return sliceIterator(arr, i);\n      } else {\n        throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n      }\n    };\n  }();\n\n  babelHelpers.toConsumableArray = function (arr) {\n    if (Array.isArray(arr)) {\n      for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n      return arr2;\n    } else {\n      return Array.from(arr);\n    }\n  };\n});\n//# sourceMappingURL=babelHelpers.js.map\n","/**\n * San\n * Copyright 2016 Baidu Inc. All rights reserved.\n *\n * @file 主文件\n * @author errorrik(errorrik@gmail.com)\n *         otakustay(otakustay@gmail.com)\n *         junmer(junmer@foxmail.com)\n */\n\n(function (root) {\n    // 人工调整打包代码顺序，通过注释手工写一些依赖\n//     // require('./util/guid');\n//     // require('./util/empty');\n//     // require('./util/extend');\n//     // require('./util/inherits');\n//     // require('./util/each');\n//     // require('./util/contains');\n//     // require('./util/bind');\n//     // require('./browser/on');\n//     // require('./browser/un');\n//     // require('./browser/svg-tags');\n//     // require('./browser/create-el');\n//     // require('./browser/remove-el');\n//     // require('./util/next-tick');\n//     // require('./browser/ie');\n//     // require('./browser/ie-old-than-9');\n//     // require('./browser/input-event-compatible');\n//     // require('./browser/auto-close-tags');\n//     // require('./util/data-types.js');\n//     // require('./util/create-data-types-checker.js');\n//     // require('./parser/walker');\n//     // require('./parser/create-a-node');\n//     // require('./parser/parse-template');\n//     // require('./runtime/change-expr-compare');\n//     // require('./runtime/data-change-type');\n//     // require('./runtime/default-filters');\n//     // require('./view/life-cycle');\n//     // require('./view/node-type');\n//     // require('./view/get-prop-handler');\n//     // require('./view/is-data-change-by-element');\n//     // require('./view/event-declaration-listener');\n//     // require('./view/create-node');\n\n\n    /**\n * @file 生成唯一id\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n/**\n * 唯一id的起始值\n *\n * @inner\n * @type {number}\n */\nvar guidIndex = 1;\n\n/**\n * 唯一id的前缀\n *\n * @inner\n * @type {string}\n */\nvar guidPrefix = (new Date()).getTime().toString(16).slice(8);\n\n/**\n * 获取唯一id\n *\n * @inner\n * @return {string} 唯一id\n */\nfunction guid() {\n    return '_' + guidPrefix + (guidIndex++);\n}\n\n// exports = module.exports = guid;\n\n\n/**\n * @file 空函数\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n/**\n * 啥都不干\n */\nfunction empty() {}\n\n// exports = module.exports = empty;\n\n\n/**\n * @file 属性拷贝\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 对象属性拷贝\n *\n * @param {Object} target 目标对象\n * @param {Object} source 源对象\n * @return {Object} 返回目标对象\n */\nfunction extend(target, source) {\n    for (var key in source) {\n        if (source.hasOwnProperty(key)) {\n            var value = source[key];\n            if (typeof value !== 'undefined') {\n                target[key] = value;\n            }\n        }\n    }\n\n    return target;\n}\n\n// exports = module.exports = extend;\n\n\n/**\n * @file 构建类之间的继承关系\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var extend = require('./extend');\n\n/**\n * 构建类之间的继承关系\n *\n * @param {Function} subClass 子类函数\n * @param {Function} superClass 父类函数\n */\nfunction inherits(subClass, superClass) {\n    /* jshint -W054 */\n    var subClassProto = subClass.prototype;\n    var F = new Function();\n    F.prototype = superClass.prototype;\n    subClass.prototype = new F();\n    subClass.prototype.constructor = subClass;\n    extend(subClass.prototype, subClassProto);\n    /* jshint +W054 */\n}\n\n// exports = module.exports = inherits;\n\n\n/**\n * @file 遍历数组\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n/**\n * 遍历数组集合\n *\n * @param {Array} array 数组源\n * @param {function(Any,number):boolean} iterator 遍历函数\n */\nfunction each(array, iterator) {\n    if (array && array.length > 0) {\n        for (var i = 0, l = array.length; i < l; i++) {\n            if (iterator(array[i], i) === false) {\n                break;\n            }\n        }\n    }\n}\n\n// exports = module.exports = each;\n\n\n/**\n * @file 判断数组中是否包含某项\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var each = require('./each');\n\n/**\n * 判断数组中是否包含某项\n *\n * @param {Array} array 数组\n * @param {*} value 包含的项\n * @return {boolean}\n */\nfunction contains(array, value) {\n    var result = false;\n    each(array, function (item) {\n        result = item === value;\n        return !result;\n    });\n\n    return result;\n}\n\n// exports = module.exports = contains;\n\n\n/**\n * @file bind函数\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * Function.prototype.bind 方法的兼容性封装\n *\n * @param {Function} func 要bind的函数\n * @param {Object} thisArg this指向对象\n * @param {...*} args 预设的初始参数\n * @return {Function}\n */\nfunction bind(func, thisArg) {\n    var nativeBind = Function.prototype.bind;\n    var slice = Array.prototype.slice;\n    // #[begin] allua\n    if (nativeBind && func.bind === nativeBind) {\n    // #[end]\n        return nativeBind.apply(func, slice.call(arguments, 1));\n    // #[begin] allua\n    }\n\n    var args = slice.call(arguments, 2);\n    return function () {\n        return func.apply(thisArg, args.concat(slice.call(arguments)));\n    };\n    // #[end]\n}\n\n// exports = module.exports = bind;\n\n\n/**\n * @file DOM 事件挂载\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * DOM 事件挂载\n *\n * @inner\n * @param {HTMLElement} el DOM元素\n * @param {string} eventName 事件名\n * @param {Function} listener 监听函数\n * @param {boolean} capture 是否是捕获阶段\n */\nfunction on(el, eventName, listener, capture) {\n    // #[begin] allua\n    if (el.addEventListener) {\n    // #[end]\n        el.addEventListener(eventName, listener, capture);\n    // #[begin] allua\n    }\n    else {\n        el.attachEvent('on' + eventName, listener);\n    }\n    // #[end]\n}\n\n// exports = module.exports = on;\n\n\n/**\n * @file DOM 事件卸载\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * DOM 事件卸载\n *\n * @inner\n * @param {HTMLElement} el DOM元素\n * @param {string} eventName 事件名\n * @param {Function} listener 监听函数\n * @param {boolean} capture 是否是捕获阶段\n */\nfunction un(el, eventName, listener, capture) {\n    // #[begin] allua\n    if (el.addEventListener) {\n    // #[end]\n        el.removeEventListener(eventName, listener, capture);\n    // #[begin] allua\n    }\n    else {\n        el.detachEvent('on' + eventName, listener);\n    }\n    // #[end]\n}\n\n// exports = module.exports = un;\n\n\n/**\n * @file 将字符串逗号切分返回对象\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var each = require('../util/each');\n\n/**\n * 将字符串逗号切分返回对象\n *\n * @param {string} source 源字符串\n * @return {Object}\n */\nfunction splitStr2Obj(source) {\n    var result = {};\n    each(\n        source.split(','),\n        function (key) {\n            result[key] = 1;\n        }\n    );\n    return result;\n}\n\n// exports = module.exports = splitStr2Obj;\n\n\n/**\n * @file SVG标签表\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var splitStr2Obj = require('../util/split-str-2-obj');\n\n/**\n * svgTags\n *\n * @see https://www.w3.org/TR/SVG/svgdtd.html 只取常用\n * @type {Object}\n */\nvar svgTags = splitStr2Obj(''\n    // structure\n    + 'svg,g,defs,desc,metadata,symbol,use,'\n    // image & shape\n    + 'image,path,rect,circle,line,ellipse,polyline,polygon,'\n    // text\n    + 'text,tspan,tref,textpath,'\n    // other\n    + 'marker,pattern,clippath,mask,filter,cursor,view,animate,'\n    // font\n    + 'font,font-face,glyph,missing-glyph');\n\n// exports = module.exports = svgTags;\n\n\n/**\n * @file DOM创建\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var svgTags = require('./svg-tags');\n\n/**\n * 创建 DOM 元素\n *\n * @param  {string} tagName tagName\n * @return {HTMLElement}\n */\nfunction createEl(tagName) {\n    if (svgTags[tagName]) {\n        return document.createElementNS('http://www.w3.org/2000/svg', tagName);\n    }\n\n    return document.createElement(tagName);\n}\n\n// exports = module.exports = createEl;\n\n\n/**\n * @file 移除DOM\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 将 DOM 从页面中移除\n *\n * @param {HTMLElement} el DOM元素\n */\nfunction removeEl(el) {\n    if (el && el.parentNode) {\n        el.parentNode.removeChild(el);\n    }\n}\n\n// exports = module.exports = removeEl;\n\n\n/**\n * @file 在下一个时间周期运行任务\n * @author errorrik(errorrik@gmail.com)\n */\n\n// 该方法参照了vue2.5.0的实现，感谢vue团队\n// SEE: https://github.com/vuejs/vue/blob/0948d999f2fddf9f90991956493f976273c5da1f/src/core/util/env.js#L68\n\n\n// var bind = require('./bind');\n\n/**\n * 下一个周期要执行的任务列表\n *\n * @inner\n * @type {Array}\n */\nvar nextTasks = [];\n\n/**\n * 执行下一个周期任务的函数\n *\n * @inner\n * @type {Function}\n */\nvar nextHandler;\n\n/**\n * 浏览器是否支持原生Promise\n * 对Promise做判断，是为了禁用一些不严谨的Promise的polyfill\n *\n * @inner\n * @type {boolean}\n */\nvar isNativePromise = typeof Promise === 'function' && /native code/.test(Promise);\n\n/**\n * 在下一个时间周期运行任务\n *\n * @inner\n * @param {Function} fn 要运行的任务函数\n * @param {Object=} thisArg this指向对象\n */\nfunction nextTick(fn, thisArg) {\n    if (thisArg) {\n        fn = bind(fn, thisArg);\n    }\n    nextTasks.push(fn);\n\n    if (nextHandler) {\n        return;\n    }\n\n    nextHandler = function () {\n        var tasks = nextTasks.slice(0);\n        nextTasks = [];\n        nextHandler = null;\n\n        for (var i = 0, l = tasks.length; i < l; i++) {\n            tasks[i]();\n        }\n    };\n\n    // 非标准方法，但是此方法非常吻合要求。\n    if (typeof setImmediate === 'function') {\n        setImmediate(nextHandler);\n    }\n    // 用MessageChannel去做setImmediate的polyfill\n    // 原理是将新的message事件加入到原有的dom events之后\n    else if (typeof MessageChannel === 'function') {\n        var channel = new MessageChannel();\n        var port = channel.port2;\n        channel.port1.onmessage = nextHandler;\n        port.postMessage(1);\n    }\n    // for native app\n    else if (isNativePromise) {\n        Promise.resolve().then(nextHandler);\n    }\n    else {\n        setTimeout(nextHandler, 0);\n    }\n}\n\n// exports = module.exports = nextTick;\n\n\n/**\n * @file ie版本号\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 从userAgent中ie版本号的匹配信息\n *\n * @type {Array}\n */\nvar ieVersionMatch = typeof navigator !== 'undefined'\n    && navigator.userAgent.match(/msie\\s*([0-9]+)/i);\n\n/**\n * ie版本号，非ie时为0\n *\n * @type {number}\n */\nvar ie = ieVersionMatch ? ieVersionMatch[1] - 0 : 0;\n\n// exports = module.exports = ie;\n\n\n/**\n * @file 是否 IE 并且小于 9\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ie = require('./ie');\n\n// HACK:\n// 1. IE8下，设置innerHTML时如果以html comment开头，comment会被自动滤掉\n//    为了保证stump存在，需要设置完html后，createComment并appendChild/insertBefore\n// 2. IE8下，innerHTML还不支持custom element，所以需要用div替代，不用createElement\n// 3. 虽然IE8已经优化了字符串+连接，碎片化连接性能不再退化\n//    但是由于上面多个兼容场景都用 < 9 判断，所以字符串连接也沿用\n//    所以结果是IE8下字符串连接用的是数组join的方式\n\n// #[begin] allua\n/**\n * 是否 IE 并且小于 9\n */\nvar ieOldThan9 = ie && ie < 9;\n// #[end]\n\n// exports = module.exports = ieOldThan9;\n\n\n/**\n * @file DOM 事件挂载\n * @author dafrok(o.o@mug.dog)\n */\n\n/**\n * DOM 事件挂载\n *\n * @inner\n * @param {HTMLElement} el DOM元素\n * @param {string} eventName 事件名\n */\nfunction trigger(el, eventName) {\n    var event = document.createEvent('HTMLEvents');\n    event.initEvent(eventName, true, true);\n    el.dispatchEvent(event);\n}\n\n// exports = module.exports = trigger;\n\n\n/**\n * @file 解决 IE9 在表单元素中删除字符时不触发事件的问题\n * @author dafrok(o.o@mug.dog)\n */\n\n// var ie = require('./ie');\n// var on = require('./on');\n// var trigger = require('./trigger');\n\n// #[begin] allua\nif (ie === 9) {\n    on(document, 'selectionchange', function () {\n        var el = document.activeElement;\n        if (el.tagName === 'TEXTAREA' || el.tagName === 'INPUT') {\n            trigger(el, 'input');\n        }\n    });\n}\n// #[end]\n\n\n/**\n * @file 自闭合标签表\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var splitStr2Obj = require('../util/split-str-2-obj');\n\n/**\n * 自闭合标签列表\n *\n * @type {Object}\n */\nvar autoCloseTags = splitStr2Obj('area,base,br,col,embed,hr,img,input,keygen,param,source,track,wbr');\n\n// exports = module.exports = autoCloseTags;\n\n\n/**\n * @file data types\n * @author leon <ludafa@outlook.com>\n */\n\n// var bind = require('./bind');\n// var empty = require('./empty');\n// var extend = require('./extend');\n\n// #[begin] error\nvar ANONYMOUS_CLASS_NAME = '<<anonymous>>';\n\n/**\n * 获取精确的类型\n *\n * @NOTE 如果 obj 是一个 DOMElement，我们会返回 `element`；\n *\n * @param  {*} obj 目标\n * @return {string}\n */\nfunction getDataType(obj) {\n\n    if (obj && obj.nodeType === 1) {\n        return 'element';\n    }\n\n    return Object.prototype.toString\n        .call(obj)\n        .slice(8, -1)\n        .toLowerCase();\n}\n// #[end]\n\n/**\n * 创建链式的数据类型校验器\n *\n * @param  {Function} validate 真正的校验器\n * @return {Function}\n */\nfunction createChainableChecker(validate) {\n    var chainedChecker = function () {};\n    chainedChecker.isRequired = empty;\n\n    // 只在 error 功能启用时才有实际上的 dataTypes 检测\n    // #[begin] error\n    var checkType = function (isRequired, data, dataName, componentName, fullDataName) {\n\n        var dataValue = data[dataName];\n        var dataType = getDataType(dataValue);\n\n        componentName = componentName || ANONYMOUS_CLASS_NAME;\n\n        // 如果是 null 或 undefined，那么要提前返回啦\n        if (dataValue == null) {\n            // 是 required 就报错\n            if (isRequired) {\n                throw new Error('[SAN ERROR] '\n                    + 'The `' + dataName + '` '\n                    + 'is marked as required in `' + componentName + '`, '\n                    + 'but its value is ' + dataType\n                );\n            }\n            // 不是 required，那就是 ok 的\n            return;\n        }\n\n        validate(data, dataName, componentName, fullDataName);\n\n    };\n\n    chainedChecker = bind(checkType, null, false);\n    chainedChecker.isRequired = bind(checkType, null, true);\n    // #[end]\n\n\n\n    return chainedChecker;\n\n}\n\n// #[begin] error\n/**\n * 生成主要类型数据校验器\n *\n * @param  {string} type 主类型\n * @return {Function}\n */\nfunction createPrimaryTypeChecker(type) {\n\n    return createChainableChecker(function (data, dataName, componentName, fullDataName) {\n\n        var dataValue = data[dataName];\n        var dataType = getDataType(dataValue);\n\n        if (dataType !== type) {\n            throw new Error('[SAN ERROR] '\n                + 'Invalid ' + componentName + ' data `' + fullDataName + '` of type'\n                + '(' + dataType + ' supplied to ' + componentName + ', '\n                + 'expected ' + type + ')'\n            );\n        }\n\n    });\n\n}\n\n\n\n/**\n * 生成 arrayOf 校验器\n *\n * @param  {Function} arrayItemChecker 数组中每项数据的校验器\n * @return {Function}\n */\nfunction createArrayOfChecker(arrayItemChecker) {\n\n    return createChainableChecker(function (data, dataName, componentName, fullDataName) {\n\n        if (typeof arrayItemChecker !== 'function') {\n            throw new Error('[SAN ERROR] '\n                + 'Data `' + dataName + '` of `' + componentName + '` has invalid '\n                + 'DataType notation inside `arrayOf`, expected `function`'\n            );\n        }\n\n        var dataValue = data[dataName];\n        var dataType = getDataType(dataValue);\n\n        if (dataType !== 'array') {\n            throw new Error('[SAN ERROR] '\n                + 'Invalid ' + componentName + ' data `' + fullDataName + '` of type'\n                + '(' + dataType + ' supplied to ' + componentName + ', '\n                + 'expected array)'\n            );\n        }\n\n        for (var i = 0, len = dataValue.length; i < len; i++) {\n            arrayItemChecker(dataValue, i, componentName, fullDataName + '[' + i + ']');\n        }\n\n    });\n\n}\n\n/**\n * 生成 instanceOf 检测器\n *\n * @param  {Function|Class} expectedClass 期待的类\n * @return {Function}\n */\nfunction createInstanceOfChecker(expectedClass) {\n\n    return createChainableChecker(function (data, dataName, componentName, fullDataName) {\n\n        var dataValue = data[dataName];\n\n        if (dataValue instanceof expectedClass) {\n            return;\n        }\n\n        var dataValueClassName = dataValue.constructor && dataValue.constructor.name\n            ? dataValue.constructor.name\n            : ANONYMOUS_CLASS_NAME;\n\n        var expectedClassName = expectedClass.name || ANONYMOUS_CLASS_NAME;\n\n        throw new Error('[SAN ERROR] '\n            + 'Invalid ' + componentName + ' data `' + fullDataName + '` of type'\n            + '(' + dataValueClassName + ' supplied to ' + componentName + ', '\n            + 'expected instance of ' + expectedClassName + ')'\n        );\n\n\n    });\n\n}\n\n/**\n * 生成 shape 校验器\n *\n * @param  {Object} shapeTypes shape 校验规则\n * @return {Function}\n */\nfunction createShapeChecker(shapeTypes) {\n\n    return createChainableChecker(function (data, dataName, componentName, fullDataName) {\n\n        if (getDataType(shapeTypes) !== 'object') {\n            throw new Error('[SAN ERROR] '\n                + 'Data `' + fullDataName + '` of `' + componentName + '` has invalid '\n                + 'DataType notation inside `shape`, expected `object`'\n            );\n        }\n\n        var dataValue = data[dataName];\n        var dataType = getDataType(dataValue);\n\n        if (dataType !== 'object') {\n            throw new Error('[SAN ERROR] '\n                + 'Invalid ' + componentName + ' data `' + fullDataName + '` of type'\n                + '(' + dataType + ' supplied to ' + componentName + ', '\n                + 'expected object)'\n            );\n        }\n\n        for (var shapeKeyName in shapeTypes) {\n            if (shapeTypes.hasOwnProperty(shapeKeyName)) {\n                var checker = shapeTypes[shapeKeyName];\n                if (typeof checker === 'function') {\n                    checker(dataValue, shapeKeyName, componentName, fullDataName + '.' + shapeKeyName);\n                }\n            }\n        }\n\n    });\n\n}\n\n/**\n * 生成 oneOf 校验器\n *\n * @param  {Array} expectedEnumValues 期待的枚举值\n * @return {Function}\n */\nfunction createOneOfChecker(expectedEnumValues) {\n\n    return createChainableChecker(function (data, dataName, componentName, fullDataName) {\n\n        if (getDataType(expectedEnumValues) !== 'array') {\n            throw new Error('[SAN ERROR] '\n                + 'Data `' + fullDataName + '` of `' + componentName + '` has invalid '\n                + 'DataType notation inside `oneOf`, array is expected.'\n            );\n        }\n\n        var dataValue = data[dataName];\n\n        for (var i = 0, len = expectedEnumValues.length; i < len; i++) {\n            if (dataValue === expectedEnumValues[i]) {\n                return;\n            }\n        }\n\n        throw new Error('[SAN ERROR] '\n            + 'Invalid ' + componentName + ' data `' + fullDataName + '` of value'\n            + '(`' + dataValue + '` supplied to ' + componentName + ', '\n            + 'expected one of ' + expectedEnumValues.join(',') + ')'\n        );\n\n    });\n\n}\n\n/**\n * 生成 oneOfType 校验器\n *\n * @param  {Array<Function>} expectedEnumOfTypeValues 期待的枚举类型\n * @return {Function}\n */\nfunction createOneOfTypeChecker(expectedEnumOfTypeValues) {\n\n    return createChainableChecker(function (data, dataName, componentName, fullDataName) {\n\n        if (getDataType(expectedEnumOfTypeValues) !== 'array') {\n            throw new Error('[SAN ERROR] '\n                + 'Data `' + dataName + '` of `' + componentName + '` has invalid '\n                + 'DataType notation inside `oneOf`, array is expected.'\n            );\n        }\n\n        var dataValue = data[dataName];\n\n        for (var i = 0, len = expectedEnumOfTypeValues.length; i < len; i++) {\n\n            var checker = expectedEnumOfTypeValues[i];\n\n            if (typeof checker !== 'function') {\n                continue;\n            }\n\n            try {\n                checker(data, dataName, componentName, fullDataName);\n                // 如果 checker 完成校验没报错，那就返回了\n                return;\n            }\n            catch (e) {\n                // 如果有错误，那么应该把错误吞掉\n            }\n\n        }\n\n        // 所有的可接受 type 都失败了，才丢一个异常\n        throw new Error('[SAN ERROR] '\n            + 'Invalid ' + componentName + ' data `' + dataName + '` of value'\n            + '(`' + dataValue + '` supplied to ' + componentName + ')'\n        );\n\n    });\n\n}\n\n/**\n * 生成 objectOf 校验器\n *\n * @param  {Function} typeChecker 对象属性值校验器\n * @return {Function}\n */\nfunction createObjectOfChecker(typeChecker) {\n\n    return createChainableChecker(function (data, dataName, componentName, fullDataName) {\n\n        if (typeof typeChecker !== 'function') {\n            throw new Error('[SAN ERROR] '\n                + 'Data `' + dataName + '` of `' + componentName + '` has invalid '\n                + 'DataType notation inside `objectOf`, expected function'\n            );\n        }\n\n        var dataValue = data[dataName];\n        var dataType = getDataType(dataValue);\n\n        if (dataType !== 'object') {\n            throw new Error('[SAN ERROR] '\n                + 'Invalid ' + componentName + ' data `' + dataName + '` of type'\n                + '(' + dataType + ' supplied to ' + componentName + ', '\n                + 'expected object)'\n            );\n        }\n\n        for (var dataKeyName in dataValue) {\n            if (dataValue.hasOwnProperty(dataKeyName)) {\n                typeChecker(\n                    dataValue,\n                    dataKeyName,\n                    componentName,\n                    fullDataName + '.' + dataKeyName\n                );\n            }\n        }\n\n\n    });\n\n}\n\n/**\n * 生成 exact 校验器\n *\n * @param  {Object} shapeTypes object 形态定义\n * @return {Function}\n */\nfunction createExactChecker(shapeTypes) {\n\n    return createChainableChecker(function (data, dataName, componentName, fullDataName, secret) {\n\n        if (getDataType(shapeTypes) !== 'object') {\n            throw new Error('[SAN ERROR] '\n                + 'Data `' + dataName + '` of `' + componentName + '` has invalid '\n                + 'DataType notation inside `exact`'\n            );\n        }\n\n        var dataValue = data[dataName];\n        var dataValueType = getDataType(dataValue);\n\n        if (dataValueType !== 'object') {\n            throw new Error('[SAN ERROR] '\n                + 'Invalid data `' + fullDataName + '` of type `' + dataValueType + '`'\n                + '(supplied to ' + componentName + ', expected `object`)'\n            );\n        }\n\n        var allKeys = {};\n\n        // 先合入 shapeTypes\n        extend(allKeys, shapeTypes);\n        // 再合入 dataValue\n        extend(allKeys, dataValue);\n        // 保证 allKeys 的类型正确\n\n        for (var key in allKeys) {\n            if (allKeys.hasOwnProperty(key)) {\n                var checker = shapeTypes[key];\n\n                // dataValue 中有一个多余的数据项\n                if (!checker) {\n                    throw new Error('[SAN ERROR] '\n                        + 'Invalid data `' + fullDataName + '` key `' + key + '` '\n                        + 'supplied to `' + componentName + '`. '\n                        + '(`' + key + '` is not defined in `DataTypes.exact`)'\n                    );\n                }\n\n                if (!(key in dataValue)) {\n                    throw new Error('[SAN ERROR] '\n                        + 'Invalid data `' + fullDataName + '` key `' + key + '` '\n                        + 'supplied to `' + componentName + '`. '\n                        + '(`' + key + '` is marked `required` in `DataTypes.exact`)'\n                    );\n                }\n\n                checker(\n                    dataValue,\n                    key,\n                    componentName,\n                    fullDataName + '.' + key,\n                    secret\n                );\n\n            }\n        }\n\n    });\n\n}\n// #[end]\n\n\n\n/* eslint-disable fecs-valid-var-jsdoc */\nvar DataTypes = {\n    array: createChainableChecker(empty),\n    object: createChainableChecker(empty),\n    func: createChainableChecker(empty),\n    string: createChainableChecker(empty),\n    number: createChainableChecker(empty),\n    bool: createChainableChecker(empty),\n    symbol: createChainableChecker(empty),\n    any: createChainableChecker,\n    arrayOf: createChainableChecker,\n    instanceOf: createChainableChecker,\n    shape: createChainableChecker,\n    oneOf: createChainableChecker,\n    oneOfType: createChainableChecker,\n    objectOf: createChainableChecker,\n    exact: createChainableChecker\n};\n\n// #[begin] error\nDataTypes = {\n\n    any: createChainableChecker(empty),\n\n    // 类型检测\n    array: createPrimaryTypeChecker('array'),\n    object: createPrimaryTypeChecker('object'),\n    func: createPrimaryTypeChecker('function'),\n    string: createPrimaryTypeChecker('string'),\n    number: createPrimaryTypeChecker('number'),\n    bool: createPrimaryTypeChecker('boolean'),\n    symbol: createPrimaryTypeChecker('symbol'),\n\n    // 复合类型检测\n    arrayOf: createArrayOfChecker,\n    instanceOf: createInstanceOfChecker,\n    shape: createShapeChecker,\n    oneOf: createOneOfChecker,\n    oneOfType: createOneOfTypeChecker,\n    objectOf: createObjectOfChecker,\n    exact: createExactChecker\n\n};\n/* eslint-enable fecs-valid-var-jsdoc */\n// #[end]\n\n\n// module.exports = DataTypes;\n\n\n/**\n * @file 创建数据检测函数\n * @author leon<ludafa@outlook.com>\n */\n\n\n// #[begin] error\n\n/**\n * 创建数据检测函数\n *\n * @param  {Object} dataTypes     数据格式\n * @param  {string} componentName 组件名\n * @return {Function}\n */\nfunction createDataTypesChecker(dataTypes, componentName) {\n\n    /**\n     * 校验 data 是否满足 data types 的格式\n     *\n     * @param  {*} data 数据\n     */\n    return function (data) {\n\n        for (var dataTypeName in dataTypes) {\n\n            if (dataTypes.hasOwnProperty(dataTypeName)) {\n\n                var dataTypeChecker = dataTypes[dataTypeName];\n\n                if (typeof dataTypeChecker !== 'function') {\n                    throw new Error('[SAN ERROR] '\n                        + componentName + ':' + dataTypeName + ' is invalid; '\n                        + 'it must be a function, usually from san.DataTypes'\n                    );\n                }\n\n                dataTypeChecker(\n                    data,\n                    dataTypeName,\n                    componentName,\n                    dataTypeName\n                );\n\n\n            }\n        }\n\n    };\n\n}\n\n// #[end]\n\n// module.exports = createDataTypesChecker;\n\n\n/**\n * @file 字符串源码读取类\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n/**\n * 字符串源码读取类，用于模板字符串解析过程\n *\n * @class\n * @param {string} source 要读取的字符串\n */\nfunction Walker(source) {\n    this.source = source;\n    this.len = this.source.length;\n    this.index = 0;\n}\n\n/**\n * 获取当前字符码\n *\n * @return {number}\n */\nWalker.prototype.currentCode = function () {\n    return this.charCode(this.index);\n};\n\n/**\n * 截取字符串片段\n *\n * @param {number} start 起始位置\n * @param {number} end 结束位置\n * @return {string}\n */\nWalker.prototype.cut = function (start, end) {\n    return this.source.slice(start, end);\n};\n\n/**\n * 向前读取字符\n *\n * @param {number} distance 读取字符数\n */\nWalker.prototype.go = function (distance) {\n    this.index += distance;\n};\n\n/**\n * 读取下一个字符，返回下一个字符的 code\n *\n * @return {number}\n */\nWalker.prototype.nextCode = function () {\n    this.go(1);\n    return this.currentCode();\n};\n\n/**\n * 获取相应位置字符的 code\n *\n * @param {number} index 字符位置\n * @return {number}\n */\nWalker.prototype.charCode = function (index) {\n    return this.source.charCodeAt(index);\n};\n\n/**\n * 向前读取字符，直到遇到指定字符再停止\n *\n * @param {number=} charCode 指定字符的code\n * @return {boolean} 当指定字符时，返回是否碰到指定的字符\n */\nWalker.prototype.goUntil = function (charCode) {\n    var code;\n    while (this.index < this.len && (code = this.currentCode())) {\n        switch (code) {\n            case 32:\n            case 9:\n                this.index++;\n                break;\n            default:\n                if (code === charCode) {\n                    this.index++;\n                    return 1;\n                }\n                return;\n        }\n    }\n};\n\n/**\n * 向前读取符合规则的字符片段，并返回规则匹配结果\n *\n * @param {RegExp} reg 字符片段的正则表达式\n * @return {Array}\n */\nWalker.prototype.match = function (reg) {\n    reg.lastIndex = this.index;\n\n    var match = reg.exec(this.source);\n    if (match) {\n        this.index = reg.lastIndex;\n    }\n\n    return match;\n};\n\n// exports = module.exports = Walker;\n\n\n\n/**\n * @file 模板解析生成的抽象节点\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 创建模板解析生成的抽象节点\n *\n * @param {Object=} options 节点参数\n * @param {string=} options.tagName 标签名\n * @param {ANode=} options.parent 父节点\n * @param {boolean=} options.textExpr 文本节点表达式对象\n * @return {Object}\n */\nfunction createANode(options) {\n    options = options || {};\n\n    if (!options.textExpr) {\n        options.directives = options.directives || {};\n        options.props = options.props || [];\n        options.events = options.events || [];\n        options.children = options.children || [];\n    }\n\n    return options;\n}\n\n// exports = module.exports = createANode;\n\n\n/**\n * @file 把 kebab case 字符串转换成 camel case\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 把 kebab case 字符串转换成 camel case\n *\n * @param {string} source 源字符串\n * @return {string}\n */\nfunction kebab2camel(source) {\n    return source.replace(/-([a-z])/g, function (match, alpha) {\n        return alpha.toUpperCase();\n    });\n}\n\n// exports = module.exports = kebab2camel;\n\n\n/**\n * @file 表达式类型\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 表达式类型\n *\n * @const\n * @type {Object}\n */\nvar ExprType = {\n    STRING: 1,\n    NUMBER: 2,\n    BOOL: 3,\n    ACCESSOR: 4,\n    INTERP: 5,\n    CALL: 6,\n    TEXT: 7,\n    BINARY: 8,\n    UNARY: 9,\n    TERTIARY: 10\n};\n\n// exports = module.exports = ExprType;\n\n\n/**\n * @file 创建访问表达式对象\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n\n/**\n * 创建访问表达式对象\n *\n * @param {Array} paths 访问路径\n * @return {Object}\n */\nfunction createAccessor(paths) {\n    return {\n        type: ExprType.ACCESSOR,\n        paths: paths\n    };\n}\n\n// exports = module.exports = createAccessor;\n\n\n/**\n * @file 读取字符串\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var ExprType = require('./expr-type');\n\n/**\n * 读取字符串\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readString(walker) {\n    var startCode = walker.currentCode();\n    var startIndex = walker.index;\n    var charCode;\n\n    walkLoop: while ((charCode = walker.nextCode())) {\n        switch (charCode) {\n            case 92: // \\\n                walker.go(1);\n                break;\n            case startCode:\n                walker.go(1);\n                break walkLoop;\n        }\n    }\n\n    var literal = walker.cut(startIndex, walker.index);\n    return {\n        type: ExprType.STRING,\n        value: (new Function('return ' + literal))()\n    };\n}\n\n// exports = module.exports = readString;\n\n\n/**\n * @file 读取数字\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var ExprType = require('./expr-type');\n\n/**\n * 读取数字\n *\n * @inner\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readNumber(walker) {\n    var match = walker.match(/\\s*(-?[0-9]+(\\.[0-9]+)?)/g);\n\n    return {\n        type: ExprType.NUMBER,\n        value: match[1] - 0\n    };\n}\n\n// exports = module.exports = readNumber;\n\n\n/**\n * @file 读取ident\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 读取ident\n *\n * @inner\n * @param {Walker} walker 源码读取对象\n * @return {string}\n */\nfunction readIdent(walker) {\n    var match = walker.match(/\\s*([\\$0-9a-z_]+)/ig);\n    return match[1];\n}\n\n// exports = module.exports = readIdent;\n\n\n/**\n * @file 读取三元表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readLogicalORExpr = require('./read-logical-or-expr');\n\n/**\n * 读取三元表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readTertiaryExpr(walker) {\n    var conditional = readLogicalORExpr(walker);\n    walker.goUntil();\n\n    if (walker.currentCode() === 63) { // ?\n        walker.go(1);\n        var yesExpr = readTertiaryExpr(walker);\n        walker.goUntil();\n\n        if (walker.currentCode() === 58) { // :\n            walker.go(1);\n            return {\n                type: ExprType.TERTIARY,\n                segs: [\n                    conditional,\n                    yesExpr,\n                    readTertiaryExpr(walker)\n                ]\n            };\n        }\n    }\n\n    return conditional;\n}\n\n// exports = module.exports = readTertiaryExpr;\n\n\n/**\n * @file 读取访问表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var createAccessor = require('./create-accessor');\n// var readIdent = require('./read-ident');\n// var readTertiaryExpr = require('./read-tertiary-expr');\n\n/**\n * 读取访问表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readAccessor(walker) {\n    var firstSeg = readIdent(walker);\n    switch (firstSeg) {\n        case 'true':\n        case 'false':\n            return {\n                type: ExprType.BOOL,\n                value: firstSeg === 'true'\n            };\n    }\n\n    var result = createAccessor([\n        {\n            type: ExprType.STRING,\n            value: firstSeg\n        }\n    ]);\n\n    /* eslint-disable no-constant-condition */\n    accessorLoop: while (1) {\n    /* eslint-enable no-constant-condition */\n\n        switch (walker.currentCode()) {\n            case 46: // .\n                walker.go(1);\n\n                // ident as string\n                result.paths.push({\n                    type: ExprType.STRING,\n                    value: readIdent(walker)\n                });\n                break;\n\n            case 91: // [\n                walker.go(1);\n                result.paths.push(readTertiaryExpr(walker));\n                walker.goUntil(93); // ]\n                break;\n\n            default:\n                break accessorLoop;\n        }\n    }\n\n    return result;\n}\n\n// exports = module.exports = readAccessor;\n\n\n/**\n * @file 读取括号表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var readTertiaryExpr = require('./read-tertiary-expr');\n\n/**\n * 读取括号表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readParenthesizedExpr(walker) {\n    walker.go(1);\n    var expr = readTertiaryExpr(walker);\n    walker.goUntil(41); // )\n\n    return expr;\n}\n\n// exports = module.exports = readParenthesizedExpr;\n\n\n/**\n * @file 读取一元表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readString = require('./read-string');\n// var readNumber = require('./read-number');\n// var readAccessor = require('./read-accessor');\n// var readParenthesizedExpr = require('./read-parenthesized-expr');\n\n\n/**\n * 读取一元表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readUnaryExpr(walker) {\n    walker.goUntil();\n\n    switch (walker.currentCode()) {\n        case 33: // !\n            walker.go(1);\n            return {\n                type: ExprType.UNARY,\n                expr: readUnaryExpr(walker)\n            };\n        case 34: // \"\n        case 39: // '\n            return readString(walker);\n        case 45: // number\n        case 48:\n        case 49:\n        case 50:\n        case 51:\n        case 52:\n        case 53:\n        case 54:\n        case 55:\n        case 56:\n        case 57:\n            return readNumber(walker);\n        case 40: // (\n            return readParenthesizedExpr(walker);\n    }\n\n    return readAccessor(walker);\n}\n\n// exports = module.exports = readUnaryExpr;\n\n\n/**\n * @file 读取乘法表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readUnaryExpr = require('./read-unary-expr');\n\n/**\n * 读取乘法表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readMultiplicativeExpr(walker) {\n    var expr = readUnaryExpr(walker);\n\n    while (1) {\n        walker.goUntil();\n\n        var code = walker.currentCode();\n        switch (code) {\n            case 37: // %\n            case 42: // *\n            case 47: // /\n                walker.go(1);\n                expr = {\n                    type: ExprType.BINARY,\n                    operator: code,\n                    segs: [expr, readUnaryExpr(walker)]\n                };\n                continue;\n        }\n\n        break;\n    }\n\n\n    return expr;\n}\n\n// exports = module.exports = readMultiplicativeExpr;\n\n\n/**\n * @file 读取加法表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readMultiplicativeExpr = require('./read-multiplicative-expr');\n\n\n/**\n * 读取加法表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readAdditiveExpr(walker) {\n    var expr = readMultiplicativeExpr(walker);\n\n    while (1) {\n        walker.goUntil();\n        var code = walker.currentCode();\n\n        switch (code) {\n            case 43: // +\n            case 45: // -\n                walker.go(1);\n                expr = {\n                    type: ExprType.BINARY,\n                    operator: code,\n                    segs: [expr, readMultiplicativeExpr(walker)]\n                };\n                continue;\n        }\n\n        break;\n    }\n\n    return expr;\n}\n\n// exports = module.exports = readAdditiveExpr;\n\n\n/**\n * @file 读取关系判断表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readAdditiveExpr = require('./read-additive-expr');\n\n/**\n * 读取关系判断表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readRelationalExpr(walker) {\n    var expr = readAdditiveExpr(walker);\n    walker.goUntil();\n\n    var code = walker.currentCode();\n    switch (code) {\n        case 60: // <\n        case 62: // >\n            if (walker.nextCode() === 61) {\n                code += 61;\n                walker.go(1);\n            }\n\n            return {\n                type: ExprType.BINARY,\n                operator: code,\n                segs: [expr, readAdditiveExpr(walker)]\n            };\n    }\n\n    return expr;\n}\n\n// exports = module.exports = readRelationalExpr;\n\n\n/**\n * @file 读取相等比对表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readRelationalExpr = require('./read-relational-expr');\n\n/**\n * 读取相等比对表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readEqualityExpr(walker) {\n    var expr = readRelationalExpr(walker);\n    walker.goUntil();\n\n    var code = walker.currentCode();\n    switch (code) {\n        case 61: // =\n        case 33: // !\n            if (walker.nextCode() === 61) {\n                code += 61;\n                if (walker.nextCode() === 61) {\n                    code += 61;\n                    walker.go(1);\n                }\n\n                return {\n                    type: ExprType.BINARY,\n                    operator: code,\n                    segs: [expr, readRelationalExpr(walker)]\n                };\n            }\n\n            walker.go(-1);\n    }\n\n    return expr;\n}\n\n// exports = module.exports = readEqualityExpr;\n\n\n/**\n * @file 读取逻辑与表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readEqualityExpr = require('./read-equality-expr');\n\n/**\n * 读取逻辑与表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readLogicalANDExpr(walker) {\n    var expr = readEqualityExpr(walker);\n    walker.goUntil();\n\n    if (walker.currentCode() === 38) { // &\n        if (walker.nextCode() === 38) {\n            walker.go(1);\n            return {\n                type: ExprType.BINARY,\n                operator: 76,\n                segs: [expr, readLogicalANDExpr(walker)]\n            };\n        }\n\n        walker.go(-1);\n    }\n\n    return expr;\n}\n\n// exports = module.exports = readLogicalANDExpr;\n\n\n/**\n * @file 读取逻辑或表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readLogicalANDExpr = require('./read-logical-and-expr');\n\n/**\n * 读取逻辑或表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readLogicalORExpr(walker) {\n    var expr = readLogicalANDExpr(walker);\n    walker.goUntil();\n\n    if (walker.currentCode() === 124) { // |\n        if (walker.nextCode() === 124) {\n            walker.go(1);\n            return {\n                type: ExprType.BINARY,\n                operator: 248,\n                segs: [expr, readLogicalORExpr(walker)]\n            };\n        }\n\n        walker.go(-1);\n    }\n\n    return expr;\n}\n\n// exports = module.exports = readLogicalORExpr;\n\n\n/**\n * @file 解析表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var Walker = require('./walker');\n// var readTertiaryExpr = require('./read-tertiary-expr');\n\n/**\n * 解析表达式\n *\n * @param {string} source 源码\n * @return {Object}\n */\nfunction parseExpr(source) {\n    if (typeof source === 'object' && source.type) {\n        return source;\n    }\n\n    var expr = readTertiaryExpr(new Walker(source));\n    expr.raw = source;\n    return expr;\n}\n\n// exports = module.exports = parseExpr;\n\n\n/**\n * @file 读取调用\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readAccessor = require('./read-accessor');\n// var readTertiaryExpr = require('./read-tertiary-expr');\n\n/**\n * 读取调用\n *\n * @param {Walker} walker 源码读取对象\n * @param {Array=} defaultArgs 默认参数\n * @return {Object}\n */\nfunction readCall(walker, defaultArgs) {\n    walker.goUntil();\n    var ident = readAccessor(walker);\n    var args = [];\n\n    if (walker.goUntil(40)) { // (\n        while (!walker.goUntil(41)) { // )\n            args.push(readTertiaryExpr(walker));\n            walker.goUntil(44); // ,\n        }\n    }\n    else if (defaultArgs) {\n        args = defaultArgs;\n    }\n\n    return {\n        type: ExprType.CALL,\n        name: ident,\n        args: args\n    };\n}\n\n// exports = module.exports = readCall;\n\n\n/**\n * @file 解析调用\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var Walker = require('./walker');\n// var readCall = require('./read-call');\n\n/**\n * 解析调用\n *\n * @param {string} source 源码\n * @param {Array=} defaultArgs 默认参数\n * @return {Object}\n */\nfunction parseCall(source, defaultArgs) {\n    var expr = readCall(new Walker(source), defaultArgs);\n    expr.raw = source;\n    return expr;\n}\n\n// exports = module.exports = parseCall;\n\n\n/**\n * @file 解析插值替换\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var Walker = require('./walker');\n// var readTertiaryExpr = require('./read-tertiary-expr');\n// var ExprType = require('./expr-type');\n// var readCall = require('./read-call');\n\n/**\n * 解析插值替换\n *\n * @param {string} source 源码\n * @return {Object}\n */\nfunction parseInterp(source) {\n    var walker = new Walker(source);\n\n    var interp = {\n        type: ExprType.INTERP,\n        expr: readTertiaryExpr(walker),\n        filters: [],\n        raw: source\n    };\n\n    while (walker.goUntil(124)) { // |\n        var callExpr = readCall(walker);\n        switch (callExpr.name.paths[0].value) {\n            case 'html':\n                break;\n            case 'raw':\n                interp.original = 1;\n                break;\n            default:\n                interp.filters.push(callExpr);\n        }\n    }\n\n    return interp;\n}\n\n// exports = module.exports = parseInterp;\n\n\n/**\n * @file 解码 HTML 字符实体\n * @author errorrik(errorrik@gmail.com)\n */\n\nvar ENTITY_DECODE_MAP = {\n    lt: '<',\n    gt: '>',\n    nbsp: ' ',\n    quot: '\\\"',\n    emsp: '\\u2003',\n    ensp: '\\u2002',\n    thinsp: '\\u2009',\n    copy: '\\xa9',\n    reg: '\\xae',\n    zwnj: '\\u200c',\n    zwj: '\\u200d',\n    amp: '&'\n};\n\n/**\n * 解码 HTML 字符实体\n *\n * @param {string} source 要解码的字符串\n * @return {string}\n */\nfunction decodeHTMLEntity(source) {\n    return source\n        .replace(/&#([0-9]+);/g, function (match, code) {\n            return String.fromCharCode(+code);\n        })\n        .replace(/&#x([0-9a-f]+);/ig, function (match, code) {\n            return String.fromCharCode(parseInt(code, 16));\n        })\n        .replace(/&([a-z]+);/ig, function (match, code) {\n            return ENTITY_DECODE_MAP[code] || match;\n        });\n}\n\n// exports = module.exports = decodeHTMLEntity;\n\n\n/**\n * @file 解析文本\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var Walker = require('./walker');\n// var ExprType = require('./expr-type');\n// var parseInterp = require('./parse-interp');\n// var decodeHTMLEntity = require('../util/decode-html-entity');\n\n/**\n * 对字符串进行可用于new RegExp的字面化\n *\n * @inner\n * @param {string} source 需要字面化的字符串\n * @return {string} 字符串字面化结果\n */\nfunction regexpLiteral(source) {\n    return source.replace(/[\\^\\[\\]\\$\\(\\)\\{\\}\\?\\*\\.\\+\\\\]/g, function (c) {\n        return '\\\\' + c;\n    });\n}\n\n/**\n * 解析文本\n *\n * @param {string} source 源码\n * @param {Array?} delimiters 分隔符。默认为 ['{{', '}}']\n * @return {Object}\n */\nfunction parseText(source, delimiters) {\n    delimiters = delimiters || ['{{', '}}'];\n    var exprStartReg = new RegExp(\n        regexpLiteral(delimiters[0]) + '\\\\s*([\\\\s\\\\S]+?)\\\\s*' + regexpLiteral(delimiters[1]),\n        'ig'\n    );\n\n    var exprMatch;\n\n    var walker = new Walker(source);\n    var beforeIndex = 0;\n\n    var expr = {\n        type: ExprType.TEXT,\n        segs: []\n    };\n\n    function pushStringToSeg(text) {\n        text && expr.segs.push({\n            type: ExprType.STRING,\n            literal: text,\n            value: decodeHTMLEntity(text)\n        });\n    }\n\n    while ((exprMatch = walker.match(exprStartReg)) != null) {\n        pushStringToSeg(walker.cut(\n            beforeIndex,\n            walker.index - exprMatch[0].length\n        ));\n\n        var interp = parseInterp(exprMatch[1]);\n        expr.original = expr.original || interp.original;\n\n        expr.segs.push(interp);\n        beforeIndex = walker.index;\n    }\n\n    pushStringToSeg(walker.cut(beforeIndex));\n\n\n\n    if (expr.segs.length === 1 && expr.segs[0].type === ExprType.STRING) {\n        expr.value = expr.segs[0].value;\n    }\n\n    return expr;\n}\n\n// exports = module.exports = parseText;\n\n\n/**\n * @file 解析指令\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var Walker = require('./walker');\n// var parseExpr = require('./parse-expr');\n// var parseCall = require('./parse-call');\n// var parseText = require('./parse-text');\n// var readAccessor = require('./read-accessor');\n\n/**\n * 指令解析器\n *\n * @inner\n * @type {Object}\n */\nvar directiveParsers = {\n    'for': function (value) {\n        var walker = new Walker(value);\n        var match = walker.match(/^\\s*([\\$0-9a-z_]+)(\\s*,\\s*([\\$0-9a-z_]+))?\\s+in\\s+/ig);\n\n        if (match) {\n            return {\n                item: parseExpr(match[1]),\n                index: parseExpr(match[3] || '$index'),\n                value: readAccessor(walker)\n            };\n        }\n\n        // #[begin] error\n        throw new Error('[SAN FATAL] for syntax error: ' + value);\n        // #[end]\n    },\n\n    'ref': function (value, options) {\n        return {\n            value: parseText(value, options.delimiters)\n        };\n    },\n\n    'if': function (value) {\n        return {\n            value: parseExpr(value.replace(/(^\\{\\{|\\}\\}$)/g, ''))\n        };\n    },\n\n    'elif': function (value) {\n        return {\n            value: parseExpr(value.replace(/(^\\{\\{|\\}\\}$)/g, ''))\n        };\n    },\n\n    'else': function (value) {\n        return {\n            value: {}\n        };\n    },\n\n    'html': function (value) {\n        return {\n            value: parseExpr(value.replace(/(^\\{\\{|\\}\\}$)/g, ''))\n        };\n    },\n\n    'transition': function (value) {\n        return {\n            value: parseCall(value)\n        };\n    }\n};\n\n/**\n * 解析指令\n *\n * @param {ANode} aNode 抽象节点\n * @param {string} name 指令名称\n * @param {string} value 指令值\n * @param {Object} options 解析参数\n * @param {Array?} options.delimiters 插值分隔符列表\n */\nfunction parseDirective(aNode, name, value, options) {\n    if (name === 'else-if') {\n        name = 'elif';\n    }\n\n    var parser = directiveParsers[name];\n    if (parser) {\n        (aNode.directives[name] = parser(value, options)).raw = value;\n    }\n}\n\n// exports = module.exports = parseDirective;\n\n\n/**\n * @file 对属性信息进行处理\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('../parser/expr-type');\n\n/**\n * 对属性信息进行处理\n * 对组件的 binds 或者特殊的属性（比如 input 的 checked）需要处理\n *\n * 扁平化：\n * 当 text 解析只有一项时，要么就是 string，要么就是 interp\n * interp 有可能是绑定到组件属性的表达式，不希望被 eval text 成 string\n * 所以这里做个处理，只有一项时直接抽出来\n *\n * bool属性：\n * 当绑定项没有值时，默认为true\n *\n * @param {Object} prop 属性对象\n */\nfunction postProp(prop) {\n    var expr = prop.expr;\n\n    if (expr.type === ExprType.TEXT) {\n        switch (expr.segs.length) {\n            case 0:\n                prop.expr = {\n                    type: ExprType.BOOL,\n                    value: true\n                };\n                break;\n\n            case 1:\n                expr = prop.expr = expr.segs[0];\n                if (expr.type === ExprType.INTERP && expr.filters.length === 0) {\n                    prop.expr = expr.expr;\n                }\n        }\n    }\n}\n\n// exports = module.exports = postProp;\n\n\n/**\n * @file 解析抽象节点属性\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var each = require('../util/each');\n// var kebab2camel = require('../util/kebab2camel');\n// var ExprType = require('./expr-type');\n// var createAccessor = require('./create-accessor');\n// var parseExpr = require('./parse-expr');\n// var parseCall = require('./parse-call');\n// var parseText = require('./parse-text');\n// var parseDirective = require('./parse-directive');\n// var postProp = require('./post-prop');\n\n\n/**\n * 解析抽象节点属性\n *\n * @param {ANode} aNode 抽象节点\n * @param {string} name 属性名称\n * @param {string} value 属性值\n * @param {Object} options 解析参数\n * @param {Array?} options.delimiters 插值分隔符列表\n */\nfunction integrateAttr(aNode, name, value, options) {\n    var prefixIndex = name.indexOf('-');\n    var realName;\n    var prefix;\n\n    if (prefixIndex > 0) {\n        prefix = name.slice(0, prefixIndex);\n        realName = name.slice(prefixIndex + 1);\n    }\n\n    switch (prefix) {\n        case 'on':\n            var event = {\n                name: realName,\n                modifier: {}\n            };\n            aNode.events.push(event);\n\n            var colonIndex;\n            while ((colonIndex = value.indexOf(':')) > 0) {\n                var modifier = value.slice(0, colonIndex);\n\n                // eventHandler(\"dd:aa\") 这种情况不能算modifier，需要辨识\n                if (!/^[a-z]+$/i.test(modifier)) {\n                    break;\n                }\n\n                event.modifier[modifier] = true;\n                value = value.slice(colonIndex + 1);\n            }\n\n            event.expr = parseCall(value, [\n                createAccessor([\n                    { type: ExprType.STRING, value: '$event' }\n                ])\n            ]);\n            break;\n\n        case 'san':\n        case 's':\n            parseDirective(aNode, realName, value, options);\n            break;\n\n        case 'prop':\n            integrateProp(aNode, realName, value, options);\n            break;\n\n        case 'var':\n            if (!aNode.vars) {\n                aNode.vars = [];\n            }\n\n            realName = kebab2camel(realName);\n            aNode.vars.push({\n                name: realName,\n                expr: parseExpr(value.replace(/(^\\{\\{|\\}\\}$)/g, ''))\n            });\n            break;\n\n        default:\n            integrateProp(aNode, name, value, options);\n    }\n}\n\n/**\n * 解析抽象节点绑定属性\n *\n * @inner\n * @param {ANode} aNode 抽象节点\n * @param {string} name 属性名称\n * @param {string} value 属性值\n * @param {Object} options 解析参数\n * @param {Array?} options.delimiters 插值分隔符列表\n */\nfunction integrateProp(aNode, name, value, options) {\n    // parse two way binding, e.g. value=\"{=ident=}\"\n    var xMatch = value.match(/^\\{=\\s*(.*?)\\s*=\\}$/);\n\n    if (xMatch) {\n        aNode.props.push({\n            name: name,\n            expr: parseExpr(xMatch[1]),\n            x: 1,\n            raw: value\n        });\n\n        return;\n    }\n\n    // parse normal prop\n    var prop = {\n        name: name,\n        expr: parseText(value, options.delimiters),\n        raw: value\n    };\n\n    // 这里不能把只有一个插值的属性抽取\n    // 因为插值里的值可能是html片段，容易被注入\n    // 组件的数据绑定在组件init时做抽取\n    switch (name) {\n        case 'class':\n        case 'style':\n            each(prop.expr.segs, function (seg) {\n                if (seg.type === ExprType.INTERP) {\n                    seg.filters.push({\n                        type: ExprType.CALL,\n                        name: createAccessor([\n                            {\n                                type: ExprType.STRING,\n                                value: '_' + prop.name\n                            }\n                        ]),\n                        args: []\n                    });\n                }\n            });\n            break;\n\n        case 'checked':\n            if (aNode.tagName === 'input') {\n                postProp(prop);\n            }\n            break;\n    }\n\n    aNode.props.push(prop);\n}\n\n\n// exports = module.exports = integrateAttr;\n\n\n/**\n * @file 解析模板\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var createANode = require('./create-a-node');\n// var Walker = require('./walker');\n// var integrateAttr = require('./integrate-attr');\n// var parseText = require('./parse-text');\n// var autoCloseTags = require('../browser/auto-close-tags');\n\n// #[begin] error\nfunction getXPath(stack, currentTagName) {\n    var path = ['ROOT'];\n    for (var i = 1, len = stack.length; i < len; i++) {\n        path.push(stack[i].tagName);\n    }\n    if (currentTagName) {\n        path.push(currentTagName);\n    }\n    return path.join('>');\n}\n// #[end]\n\n/* eslint-disable fecs-max-statements */\n\n/**\n * 解析 template\n *\n * @param {string} source template源码\n * @param {Object?} options 解析参数\n * @param {string?} options.trimWhitespace 空白文本的处理策略。none|blank|all\n * @param {Array?} options.delimiters 插值分隔符列表\n * @return {ANode}\n */\nfunction parseTemplate(source, options) {\n    options = options || {};\n    options.trimWhitespace = options.trimWhitespace || 'none';\n\n    var rootNode = createANode();\n\n    if (typeof source !== 'string') {\n        return rootNode;\n    }\n\n    source = source.replace(/<!--([\\s\\S]*?)-->/mg, '').replace(/(^\\s+|\\s+$)/g, '');\n    var walker = new Walker(source);\n\n    var tagReg = /<(\\/)?([a-z0-9-]+)\\s*/ig;\n    var attrReg = /([-:0-9a-z\\(\\)\\[\\]]+)(\\s*=\\s*(['\"])([^\\3]*?)\\3)?\\s*/ig;\n\n    var tagMatch;\n    var currentNode = rootNode;\n    var stack = [rootNode];\n    var stackIndex = 0;\n    var beforeLastIndex = 0;\n\n    while ((tagMatch = walker.match(tagReg)) != null) {\n        var tagEnd = tagMatch[1];\n        var tagName = tagMatch[2].toLowerCase();\n\n        pushTextNode(source.slice(\n            beforeLastIndex,\n            walker.index - tagMatch[0].length\n        ));\n\n        // 62: >\n        // 47: /\n        // 处理 </xxxx >\n        if (tagEnd && walker.currentCode() === 62) {\n            // 满足关闭标签的条件时，关闭标签\n            // 向上查找到对应标签，找不到时忽略关闭\n            var closeIndex = stackIndex;\n\n            // #[begin] error\n            // 如果正在闭合一个自闭合的标签，例如 </input>，报错\n            if (autoCloseTags[tagName]) {\n                throw new Error(''\n                    + '[SAN ERROR] ' + getXPath(stack, tagName) + ' is a `auto closed` tag, '\n                    + 'so it cannot be closed with </' + tagName + '>'\n                );\n            }\n\n            // 如果关闭的 tag 和当前打开的不一致，报错\n            if (\n                stack[closeIndex].tagName !== tagName\n                // 这里要把 table 自动添加 tbody 的情况给去掉\n                && !(tagName === 'table' && stack[closeIndex].tagName === 'tbody')\n            ) {\n                throw new Error('[SAN ERROR] ' + getXPath(stack) + ' is closed with ' + tagName);\n            }\n            // #[end]\n\n            while (closeIndex > 0 && stack[closeIndex].tagName !== tagName) {\n                closeIndex--;\n            }\n\n            if (closeIndex > 0) {\n                stackIndex = closeIndex - 1;\n                currentNode = stack[stackIndex];\n            }\n            walker.go(1);\n        }\n\n        // #[begin] error\n        // 处理 </xxx 非正常闭合标签\n        else if (tagEnd) {\n\n            // 如果闭合标签时，匹配后的下一个字符是 <，即下一个标签的开始，那么当前闭合标签未闭合\n            if (walker.currentCode() === 60) {\n                throw new Error(''\n                    + '[SAN ERROR] ' + getXPath(stack)\n                    + '\\'s close tag not closed'\n                );\n            }\n\n            // 闭合标签有属性\n            throw new Error(''\n                + '[SAN ERROR] ' + getXPath(stack)\n                + '\\'s close tag has attributes'\n            );\n\n        }\n        // #[end]\n\n        else if (!tagEnd) {\n            var aElement = createANode({\n                tagName: tagName\n            });\n            var tagClose = autoCloseTags[tagName];\n\n            // 解析 attributes\n\n            /* eslint-disable no-constant-condition */\n            while (1) {\n            /* eslint-enable no-constant-condition */\n\n                var nextCharCode = walker.currentCode();\n\n                // 标签结束时跳出 attributes 读取\n                // 标签可能直接结束或闭合结束\n                if (nextCharCode === 62) {\n                    walker.go(1);\n                    break;\n                }\n                // 遇到 /> 按闭合处理\n                else if (nextCharCode === 47\n                    && walker.charCode(walker.index + 1) === 62\n                ) {\n                    walker.go(2);\n                    tagClose = 1;\n                    break;\n                }\n\n                // #[begin] error\n                // 在处理一个 open 标签时，如果遇到了 <， 即下一个标签的开始，则当前标签未能正常闭合，报错\n                if (nextCharCode === 60) {\n                    throw new Error('[SAN ERROR] ' + getXPath(stack, tagName) + ' is not closed');\n                }\n                // #[end]\n\n                // 读取 attribute\n                var attrMatch = walker.match(attrReg);\n                if (attrMatch) {\n\n                    // #[begin] error\n                    // 如果属性有 =，但没取到 value，报错\n                    if (\n                        walker.charCode(attrMatch.index + attrMatch[1].length) === 61\n                        && !attrMatch[2]\n                    ) {\n                        throw new Error(''\n                            + '[SAN ERROR] ' + getXPath(stack, tagName) + ' attribute `'\n                            + attrMatch[1] + '` is not wrapped with \"\"'\n                        );\n                    }\n                    // #[end]\n\n                    integrateAttr(\n                        aElement,\n                        attrMatch[1],\n                        attrMatch[2] ? attrMatch[4] : '',\n                        options\n                    );\n                }\n\n            }\n\n            // match if directive for else/elif directive\n            var elseDirective = aElement.directives['else'] || aElement.directives.elif; // eslint-disable-line dot-notation\n            if (elseDirective) {\n                var parentChildrenLen = currentNode.children.length;\n\n                while (parentChildrenLen--) {\n                    var parentChild = currentNode.children[parentChildrenLen];\n                    if (parentChild.textExpr) {\n                        currentNode.children.splice(parentChildrenLen, 1);\n                        continue;\n                    }\n\n                    // #[begin] error\n                    if (!parentChild.directives['if']) { // eslint-disable-line dot-notation\n                        throw new Error('[SAN FATEL] else not match if.');\n                    }\n                    // #[end]\n\n                    parentChild.elses = parentChild.elses || [];\n                    parentChild.elses.push(aElement);\n\n                    break;\n                }\n            }\n            else {\n                if (aElement.tagName === 'tr' && currentNode.tagName === 'table') {\n                    var tbodyNode = createANode({\n                        tagName: 'tbody'\n                    });\n                    currentNode.children.push(tbodyNode);\n                    currentNode = tbodyNode;\n                    stack[++stackIndex] = tbodyNode;\n                }\n\n                currentNode.children.push(aElement);\n            }\n\n            if (!tagClose) {\n                currentNode = aElement;\n                stack[++stackIndex] = aElement;\n            }\n        }\n\n        beforeLastIndex = walker.index;\n    }\n\n    pushTextNode(walker.cut(beforeLastIndex));\n\n    return rootNode;\n\n    /**\n     * 在读取栈中添加文本节点\n     *\n     * @inner\n     * @param {string} text 文本内容\n     */\n    function pushTextNode(text) {\n        switch (options.trimWhitespace) {\n            case 'blank':\n                if (/^\\s+$/.test(text)) {\n                    text = null;\n                }\n                break;\n\n            case 'all':\n                text = text.replace(/(^\\s+|\\s+$)/g, '');\n                break;\n        }\n\n        if (text) {\n            currentNode.children.push(createANode({\n                textExpr: parseText(text, options.delimiters)\n            }));\n        }\n    }\n}\n\n/* eslint-enable fecs-max-statements */\n\n// exports = module.exports = parseTemplate;\n\n\n/**\n * @file 默认filter\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n/* eslint-disable fecs-camelcase */\n/* eslint-disable guard-for-in */\n\n/**\n * 默认filter\n *\n * @const\n * @type {Object}\n */\nvar DEFAULT_FILTERS = {\n\n    /**\n     * URL编码filter\n     *\n     * @param {string} source 源串\n     * @return {string} 替换结果串\n     */\n    url: encodeURIComponent,\n\n    _class: function (source) {\n        if (source instanceof Array) {\n            return source.join(' ');\n        }\n\n        return source;\n    },\n\n    _style: function (source) {\n        if (typeof source === 'object') {\n            var result = '';\n            for (var key in source) {\n                result += key + ':' + source[key] + ';';\n            }\n\n            return result;\n        }\n\n        return source;\n    },\n\n    _sep: function (source, sep) {\n        return source ? sep + source : source;\n    }\n};\n/* eslint-enable fecs-camelcase */\n\n// exports = module.exports = DEFAULT_FILTERS;\n\n\n/**\n * @file 表达式计算\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('../parser/expr-type');\n// var DEFAULT_FILTERS = require('./default-filters');\n// var evalArgs = require('./eval-args');\n// var dataCache = require('./data-cache');\n\n/**\n * 计算表达式的值\n *\n * @param {Object} expr 表达式对象\n * @param {Data} data 数据容器对象\n * @param {Component=} owner 所属组件环境\n * @return {*}\n */\nfunction evalExpr(expr, data, owner) {\n    if (expr.value != null) {\n        return expr.value;\n    }\n\n    var value = dataCache.get(data, expr);\n\n    if (value == null) {\n        switch (expr.type) {\n            case ExprType.UNARY:\n                value = !evalExpr(expr.expr, data, owner);\n                break;\n\n            case ExprType.BINARY:\n                var leftValue = evalExpr(expr.segs[0], data, owner);\n                var rightValue = evalExpr(expr.segs[1], data, owner);\n\n                /* eslint-disable eqeqeq */\n                switch (expr.operator) {\n                    case 37:\n                        value = leftValue % rightValue;\n                        break;\n                    case 43:\n                        value = leftValue + rightValue;\n                        break;\n                    case 45:\n                        value = leftValue - rightValue;\n                        break;\n                    case 42:\n                        value = leftValue * rightValue;\n                        break;\n                    case 47:\n                        value = leftValue / rightValue;\n                        break;\n                    case 60:\n                        value = leftValue < rightValue;\n                        break;\n                    case 62:\n                        value = leftValue > rightValue;\n                        break;\n                    case 76:\n                        value = leftValue && rightValue;\n                        break;\n                    case 94:\n                        value = leftValue != rightValue;\n                        break;\n                    case 121:\n                        value = leftValue <= rightValue;\n                        break;\n                    case 122:\n                        value = leftValue == rightValue;\n                        break;\n                    case 123:\n                        value = leftValue >= rightValue;\n                        break;\n                    case 155:\n                        value = leftValue !== rightValue;\n                        break;\n                    case 183:\n                        value = leftValue === rightValue;\n                        break;\n                    case 248:\n                        value = leftValue || rightValue;\n                        break;\n                }\n                /* eslint-enable eqeqeq */\n                break;\n\n            case ExprType.TERTIARY:\n                value = evalExpr(\n                    expr.segs[evalExpr(expr.segs[0], data, owner) ? 1 : 2],\n                    data,\n                    owner\n                );\n                break;\n\n            case ExprType.ACCESSOR:\n                value = data.get(expr);\n                break;\n\n            case ExprType.INTERP:\n                value = evalExpr(expr.expr, data, owner);\n\n                if (owner) {\n                    for (var i = 0, l = expr.filters.length; i < l; i++) {\n                        var filter = expr.filters[i];\n                        var filterName = filter.name.paths[0].value;\n\n                        if (owner.filters[filterName]) {\n                            value = owner.filters[filterName].apply(\n                                owner,\n                                [value].concat(evalArgs(filter.args, data, owner))\n                            );\n                        }\n                        else if (DEFAULT_FILTERS[filterName]) {\n                            value = DEFAULT_FILTERS[filterName](\n                                value,\n                                filter.args[0] ? filter.args[0].value : ''\n                            );\n                        }\n                    }\n                }\n\n                if (value == null) {\n                    value = '';\n                }\n\n                break;\n\n            /* eslint-disable no-redeclare */\n            case ExprType.TEXT:\n                var buf = '';\n                for (var i = 0, l = expr.segs.length; i < l; i++) {\n                    var seg = expr.segs[i];\n                    buf += seg.value || evalExpr(seg, data, owner);\n                }\n                return buf;\n        }\n\n        dataCache.set(data, expr, value);\n    }\n\n    return value;\n}\n\n// exports = module.exports = evalExpr;\n\n\n/**\n * @file 为函数调用计算参数数组的值\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var evalExpr = require('../runtime/eval-expr');\n\n/**\n * 为函数调用计算参数数组的值\n *\n * @param {Array} args 参数表达式列表\n * @param {Data} data 数据环境\n * @param {Component} owner 组件环境\n * @return {Array}\n */\nfunction evalArgs(args, data, owner) {\n    var result = [];\n    for (var i = 0; i < args.length; i++) {\n        result.push(evalExpr(args[i], data, owner));\n    }\n\n    return result;\n}\n\n// exports = module.exports = evalArgs;\n\n\n/**\n * @file 数据缓存管理器\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n\nvar dataCacheSource = {};\nvar dataCacheClearly = 1;\n\n/**\n * 数据缓存管理器\n *\n * @const\n * @type {Object}\n */\nvar dataCache = {\n    clear: function () {\n        if (!dataCacheClearly) {\n            dataCacheClearly = 1;\n            dataCacheSource = {};\n        }\n    },\n\n    set: function (data, expr, value) {\n        if (expr.raw) {\n            dataCacheClearly = 0;\n            (dataCacheSource[data.id] = dataCacheSource[data.id] || {})[expr.raw] = value;\n        }\n    },\n\n    get: function (data, expr) {\n        if (expr.raw && dataCacheSource[data.id]) {\n            return dataCacheSource[data.id][expr.raw];\n        }\n    }\n};\n\n\n// exports = module.exports = dataCache;\n\n\n/**\n * @file 比较变更表达式与目标表达式之间的关系\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('../parser/expr-type');\n// var evalExpr = require('./eval-expr');\n// var each = require('../util/each');\n\n/**\n * 判断变更表达式与多个表达式之间的关系，0为完全没关系，1为有关系\n *\n * @inner\n * @param {Object} changeExpr 目标表达式\n * @param {Array} exprs 多个源表达式\n * @param {Data} data 表达式所属数据环境\n * @return {number}\n */\nfunction changeExprCompareExprs(changeExpr, exprs, data) {\n    for (var i = 0, l = exprs.length; i < l; i++) {\n        if (changeExprCompare(changeExpr, exprs[i], data)) {\n            return 1;\n        }\n    }\n\n    return 0;\n}\n\n/**\n * 比较变更表达式与目标表达式之间的关系，用于视图更新判断\n * 视图更新需要根据其关系，做出相应的更新行为\n *\n * 0: 完全没关系\n * 1: 变更表达式是目标表达式的母项(如a与a.b) 或 表示需要完全变化\n * 2: 变更表达式是目标表达式相等\n * >2: 变更表达式是目标表达式的子项，如a.b.c与a.b\n *\n * @param {Object} changeExpr 变更表达式\n * @param {Object} expr 要比较的目标表达式\n * @param {Data} data 表达式所属数据环境\n * @return {number}\n */\nfunction changeExprCompare(changeExpr, expr, data) {\n    switch (expr.type) {\n        case ExprType.ACCESSOR:\n            var paths = expr.paths;\n            var len = paths.length;\n            var changePaths = changeExpr.paths;\n            var changeLen = changePaths.length;\n\n            var result = 1;\n            for (var i = 0; i < len; i++) {\n                var pathExpr = paths[i];\n\n                if (pathExpr.type === ExprType.ACCESSOR\n                    && changeExprCompare(changeExpr, pathExpr, data)\n                ) {\n                    return 1;\n                }\n\n                if (result && i < changeLen\n                    /* eslint-disable eqeqeq */\n                    && (pathExpr.value || evalExpr(pathExpr, data))\n                        != (changePaths[i].value || evalExpr(changePaths[i], data))\n                    /* eslint-enable eqeqeq */\n                ) {\n                    result = 0;\n                }\n            }\n\n            if (result) {\n                result = Math.max(1, changeLen - len + 2);\n            }\n            return result;\n\n        case ExprType.UNARY:\n            return changeExprCompare(changeExpr, expr.expr, data) ? 1 : 0;\n\n\n        case ExprType.TEXT:\n        case ExprType.BINARY:\n        case ExprType.TERTIARY:\n            return changeExprCompareExprs(changeExpr, expr.segs, data);\n\n        case ExprType.INTERP:\n            if (!changeExprCompare(changeExpr, expr.expr, data)) {\n                var filterResult;\n                each(expr.filters, function (filter) {\n                    filterResult = changeExprCompareExprs(changeExpr, filter.args, data);\n                    return !filterResult;\n                });\n\n                return filterResult ? 1 : 0;\n            }\n\n            return 1;\n    }\n\n    return 0;\n}\n\n// exports = module.exports = changeExprCompare;\n\n\n/**\n * @file 数据变更类型枚举\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 数据变更类型枚举\n *\n * @const\n * @type {Object}\n */\nvar DataChangeType = {\n    SET: 1,\n    SPLICE: 2\n};\n\n// exports = module.exports = DataChangeType;\n\n\n/**\n * @file 生命周期类\n * @author errorrik(errorrik@gmail.com)\n */\n\nfunction lifeCycleOwnIs(name) {\n    return this[name];\n}\n\n/* eslint-disable fecs-valid-var-jsdoc */\n/**\n * 节点生命周期信息\n *\n * @inner\n * @type {Object}\n */\nvar LifeCycle = {\n    start: {},\n\n    compiled: {\n        is: lifeCycleOwnIs,\n        compiled: true\n    },\n\n    inited: {\n        is: lifeCycleOwnIs,\n        compiled: true,\n        inited: true\n    },\n\n    painting: {\n        is: lifeCycleOwnIs,\n        compiled: true,\n        inited: true,\n        painting: true\n    },\n\n    created: {\n        is: lifeCycleOwnIs,\n        compiled: true,\n        inited: true,\n        created: true\n    },\n\n    attached: {\n        is: lifeCycleOwnIs,\n        compiled: true,\n        inited: true,\n        created: true,\n        attached: true\n    },\n\n    leaving: {\n        is: lifeCycleOwnIs,\n        compiled: true,\n        inited: true,\n        created: true,\n        attached: true,\n        leaving: true\n    },\n\n    detached: {\n        is: lifeCycleOwnIs,\n        compiled: true,\n        inited: true,\n        created: true,\n        detached: true\n    },\n\n    disposed: {\n        is: lifeCycleOwnIs,\n        disposed: true\n    }\n};\n/* eslint-enable fecs-valid-var-jsdoc */\n\n\n// exports = module.exports = LifeCycle;\n\n\n/**\n * @file 节点类型\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 节点类型\n *\n * @const\n * @type {Object}\n */\nvar NodeType = {\n    TEXT: 1,\n    IF: 2,\n    FOR: 3,\n    ELEM: 4,\n    CMPT: 5,\n    SLOT: 6,\n    TPL: 7\n};\n\n// exports = module.exports = NodeType;\n\n\n/**\n * @file 获取 ANode props 数组中相应 name 的项\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 获取 ANode props 数组中相应 name 的项\n *\n * @param {Object} aNode ANode对象\n * @param {string} name name属性匹配串\n * @return {Object}\n */\nfunction getANodeProp(aNode, name) {\n    var index = aNode.hotspot.props[name];\n    if (index != null) {\n        return aNode.props[index];\n    }\n}\n\n// exports = module.exports = getANodeProp;\n\n\n/**\n * @file 获取属性处理对象\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var contains = require('../util/contains');\n// var empty = require('../util/empty');\n// var svgTags = require('../browser/svg-tags');\n// var evalExpr = require('../runtime/eval-expr');\n// var getANodeProp = require('./get-a-node-prop');\n// var NodeType = require('./node-type');\n\n\n/**\n * HTML 属性和 DOM 操作属性的对照表\n *\n * @inner\n * @const\n * @type {Object}\n */\nvar HTML_ATTR_PROP_MAP = {\n    'readonly': 'readOnly',\n    'cellpadding': 'cellPadding',\n    'cellspacing': 'cellSpacing',\n    'colspan': 'colSpan',\n    'rowspan': 'rowSpan',\n    'valign': 'vAlign',\n    'usemap': 'useMap',\n    'frameborder': 'frameBorder',\n    'for': 'htmlFor'\n};\n\n/**\n * 默认的元素的属性设置的变换方法\n *\n * @inner\n * @type {Object}\n */\nvar defaultElementPropHandler = {\n    prop: function (el, value, name, element) {\n        var propName = HTML_ATTR_PROP_MAP[name] || name;\n\n        // input 的 type 是个特殊属性，其实也应该用 setAttribute\n        // 但是 type 不应该运行时动态改变，否则会有兼容性问题\n        // 所以这里直接就不管了\n        if (propName in el) {\n            el[propName] = value == null ? '' : value;\n        }\n        else {\n            el.setAttribute(name, value);\n        }\n\n        // attribute 绑定的是 text，所以不会出现 null 的情况，这里无需处理\n        // 换句话来说，san 是做不到 attribute 时有时无的\n        // if (value == null) {\n        //     el.removeAttribute(name);\n        // }\n    },\n\n    output: function (element, bindInfo, data) {\n        data.set(bindInfo.expr, element.el[bindInfo.name], {\n            target: {\n                id: element.id,\n                prop: bindInfo.name\n            }\n        });\n    }\n};\n\nvar svgPropHandler = {\n    prop: function (el, value, name) {\n        el.setAttribute(name, value);\n    }\n};\n\nvar boolPropHandler = {\n    prop: function (el, value, name, element, prop) {\n        var propName = HTML_ATTR_PROP_MAP[name] || name;\n        el[propName] = !!(prop && prop.raw === ''\n            || value && value !== 'false' && value !== '0');\n    }\n};\n\n/* eslint-disable fecs-properties-quote */\n/**\n * 默认的属性设置变换方法\n *\n * @inner\n * @type {Object}\n */\nvar defaultElementPropHandlers = {\n    style: {\n        prop: function (el, value) {\n            el.style.cssText = value;\n        }\n    },\n\n    'class': { // eslint-disable-line\n        prop: function (el, value) {\n            el.className = value;\n        }\n    },\n\n    slot: {\n        prop: empty\n    },\n\n    readonly: boolPropHandler,\n    disabled: boolPropHandler,\n    autofocus: boolPropHandler,\n    required: boolPropHandler,\n    draggable: boolPropHandler\n};\n/* eslint-enable fecs-properties-quote */\n\nvar analInputChecker = {\n    checkbox: contains,\n    radio: function (a, b) {\n        return a === b;\n    }\n};\n\nfunction analInputCheckedState(element, value, oper) {\n    var bindValue = getANodeProp(element.aNode, 'value');\n    var bindType = getANodeProp(element.aNode, 'type');\n\n    if (bindValue && bindType) {\n        var type = evalExpr(bindType.expr, element.scope, element.owner);\n\n        if (analInputChecker[type]) {\n            var bindChecked = getANodeProp(element.aNode, 'checked');\n            if (!bindChecked.hintExpr) {\n                bindChecked.hintExpr = bindValue.expr;\n            }\n\n            return !!analInputChecker[type](\n                value,\n                evalExpr(bindValue.expr, element.scope, element.owner)\n            );\n        }\n    }\n}\n\nvar elementPropHandlers = {\n    input: {\n        multiple: boolPropHandler,\n        checked: {\n            prop: function (el, value, name, element) {\n                var state = analInputCheckedState(element, value);\n\n                boolPropHandler.prop(\n                    el,\n                    state != null ? state : value,\n                    'checked',\n                    element\n                );\n            },\n\n            output: function (element, bindInfo, data) {\n                var el = element.el;\n                var bindValue = getANodeProp(element.aNode, 'value');\n                var bindType = getANodeProp(element.aNode, 'type') || {};\n\n                if (bindValue && bindType) {\n                    switch (bindType.raw) {\n                        case 'checkbox':\n                            data[el.checked ? 'push' : 'remove'](bindInfo.expr, el.value);\n                            return;\n\n                        case 'radio':\n                            el.checked && data.set(bindInfo.expr, el.value, {\n                                target: {\n                                    id: element.id,\n                                    prop: bindInfo.name\n                                }\n                            });\n                            return;\n                    }\n                }\n\n                defaultElementPropHandler.output(element, bindInfo, data);\n            }\n        }\n    },\n\n    option: {\n        value: {\n            prop: function (el, value, name, element) {\n                defaultElementPropHandler.prop(el, value, name, element);\n\n                if (isOptionSelected(element, value)) {\n                    el.selected = true;\n                }\n            }\n        }\n    },\n\n    select: {\n        value: {\n            prop: function (el, value) {\n                el.value = value || '';\n            },\n\n            output: defaultElementPropHandler.output\n        }\n    }\n};\n\nfunction isOptionSelected(element, value) {\n    var parentSelect = element.parent;\n    while (parentSelect) {\n        if (parentSelect.tagName === 'select') {\n            break;\n        }\n\n        parentSelect = parentSelect.parent;\n    }\n\n\n    if (parentSelect) {\n        var selectValue = null;\n        var prop;\n        var expr;\n\n        if ((prop = getANodeProp(parentSelect.aNode, 'value'))\n            && (expr = prop.expr)\n        ) {\n            selectValue = parentSelect.nodeType === NodeType.CMPT\n                ? evalExpr(expr, parentSelect.data, parentSelect)\n                : evalExpr(expr, parentSelect.scope, parentSelect.owner)\n                || '';\n        }\n\n        if (selectValue === value) {\n            return 1;\n        }\n    }\n}\n\n\n/**\n * 获取属性处理对象\n *\n * @param {string} tagName 元素tag\n * @param {string} attrName 属性名\n * @return {Object}\n */\nfunction getPropHandler(tagName, attrName) {\n    if (svgTags[tagName]) {\n        return svgPropHandler;\n    }\n\n    var tagPropHandlers = elementPropHandlers[tagName];\n    if (!tagPropHandlers) {\n        tagPropHandlers = elementPropHandlers[tagName] = {};\n    }\n\n    var propHandler = tagPropHandlers[attrName];\n    if (!propHandler) {\n        propHandler = defaultElementPropHandlers[attrName] || defaultElementPropHandler;\n        tagPropHandlers[attrName] = propHandler;\n    }\n\n    return propHandler;\n}\n\n// exports = module.exports = getPropHandler;\n\n\n/**\n * @file 判断变更是否来源于元素\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 判断变更是否来源于元素，来源于元素时，视图更新需要阻断\n *\n * @param {Object} change 变更对象\n * @param {Element} element 元素\n * @param {string?} propName 属性名，可选。需要精确判断是否来源于此属性时传入\n * @return {boolean}\n */\nfunction isDataChangeByElement(change, element, propName) {\n    var changeTarget = change.option.target;\n    return changeTarget && changeTarget.id === element.id\n        && (!propName || changeTarget.prop === propName);\n}\n\n// exports = module.exports = isDataChangeByElement;\n\n\n/**\n * @file 在对象上使用accessor表达式查找方法\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var evalExpr = require('../runtime/eval-expr');\n\n/**\n * 在对象上使用accessor表达式查找方法\n *\n * @param {Object} source 源对象\n * @param {Object} nameExpr 表达式\n * @param {Data} data 所属数据环境\n * @return {Function}\n */\nfunction findMethod(source, nameExpr, data) {\n    var method = source;\n\n    for (var i = 0; method != null && i < nameExpr.paths.length; i++) {\n        method = method[evalExpr(nameExpr.paths[i], data)];\n    }\n\n    return method;\n}\n\n// exports = module.exports = findMethod;\n\n\n/**\n * @file 数据类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('../parser/expr-type');\n// var evalExpr = require('./eval-expr');\n// var DataChangeType = require('./data-change-type');\n// var createAccessor = require('../parser/create-accessor');\n// var parseExpr = require('../parser/parse-expr');\n// var guid = require('../util/guid');\n// var dataCache = require('./data-cache');\n\n/**\n * 数据类\n *\n * @class\n * @param {Object?} data 初始数据\n * @param {Model?} parent 父级数据容器\n */\nfunction Data(data, parent) {\n    this.id = guid();\n    this.parent = parent;\n    this.raw = data || {};\n    this.listeners = [];\n}\n\n// #[begin] error\n// 以下两个函数只在开发模式下可用，在生产模式下不存在\n/**\n * DataTypes 检测\n */\nData.prototype.checkDataTypes = function () {\n    if (this.typeChecker) {\n        this.typeChecker(this.raw);\n    }\n};\n\n/**\n * 设置 type checker\n *\n * @param  {Function} typeChecker 类型校验器\n */\nData.prototype.setTypeChecker = function (typeChecker) {\n    this.typeChecker = typeChecker;\n};\n\n// #[end]\n\n/**\n * 添加数据变更的事件监听器\n *\n * @param {Function} listener 监听函数\n */\nData.prototype.listen = function (listener) {\n    if (typeof listener === 'function') {\n        this.listeners.push(listener);\n    }\n};\n\n/**\n * 移除数据变更的事件监听器\n *\n * @param {Function} listener 监听函数\n */\nData.prototype.unlisten = function (listener) {\n    var len = this.listeners.length;\n    while (len--) {\n        if (!listener || this.listeners[len] === listener) {\n            this.listeners.splice(len, 1);\n        }\n    }\n};\n\n/**\n * 触发数据变更\n *\n * @param {Object} change 变更信息对象\n */\nData.prototype.fire = function (change) {\n    if (change.option.silent || change.option.silence || change.option.quiet) {\n        return;\n    }\n\n    for (var i = 0; i < this.listeners.length; i++) {\n        this.listeners[i].call(this, change);\n    }\n};\n\n/**\n * 获取数据项\n *\n * @param {string|Object?} expr 数据项路径\n * @param {Data?} callee 当前数据获取的调用环境\n * @return {*}\n */\nData.prototype.get = function (expr, callee) {\n    var value = this.raw;\n    if (!expr) {\n        return value;\n    }\n\n    expr = parseExpr(expr);\n\n    var paths = expr.paths;\n    callee = callee || this;\n\n    value = value[paths[0].value];\n\n    if (value == null && this.parent) {\n        value = this.parent.get(expr, callee);\n    }\n    else {\n        for (var i = 1, l = paths.length; value != null && i < l; i++) {\n            value = value[paths[i].value || evalExpr(paths[i], callee)];\n        }\n    }\n\n    return value;\n};\n\n\n/**\n * 数据对象变更操作\n *\n * @inner\n * @param {Object|Array} source 要变更的源数据\n * @param {Array} exprPaths 属性路径\n * @param {*} value 变更属性值\n * @param {Data} data 对应的Data对象\n * @return {*} 变更后的新数据\n */\nfunction immutableSet(source, exprPaths, value, data) {\n    if (exprPaths.length === 0) {\n        return value;\n    }\n\n    var prop = evalExpr(exprPaths[0], data);\n    var result;\n\n    if (source instanceof Array) {\n        var index = +prop;\n\n        result = source.slice(0);\n        result[isNaN(index) ? prop : index] = immutableSet(source[index], exprPaths.slice(1), value, data);\n\n        return result;\n    }\n    else if (typeof source === 'object') {\n        result = {};\n\n        for (var key in source) {\n            if (key !== prop) {\n                result[key] = source[key];\n            }\n        }\n\n        result[prop] = immutableSet(source[prop] || {}, exprPaths.slice(1), value, data);\n\n        return result;\n    }\n\n    return source;\n}\n\n/**\n * 设置数据项\n *\n * @param {string|Object} expr 数据项路径\n * @param {*} value 数据值\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n */\nData.prototype.set = function (expr, value, option) {\n    option = option || {};\n\n    // #[begin] error\n    var exprRaw = expr;\n    // #[end]\n\n    expr = parseExpr(expr);\n\n    // #[begin] error\n    if (expr.type !== ExprType.ACCESSOR) {\n        throw new Error('[SAN ERROR] Invalid Expression in Data set: ' + exprRaw);\n    }\n    // #[end]\n\n    if (this.get(expr) === value && !option.force) {\n        return;\n    }\n\n    dataCache.clear();\n    this.raw = immutableSet(this.raw, expr.paths, value, this);\n    this.fire({\n        type: DataChangeType.SET,\n        expr: expr,\n        value: value,\n        option: option\n    });\n\n    // #[begin] error\n    this.checkDataTypes();\n    // #[end]\n\n};\n\n/**\n * 合并更新数据项\n *\n * @param {string|Object} expr 数据项路径\n * @param {Object} source 待合并的数据值\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n */\nData.prototype.merge = function (expr, source, option) {\n    option = option || {};\n\n    // #[begin] error\n    var exprRaw = expr;\n    // #[end]\n\n    expr = parseExpr(expr);\n\n    // #[begin] error\n    if (expr.type !== ExprType.ACCESSOR) {\n        throw new Error('[SAN ERROR] Invalid Expression in Data merge: ' + exprRaw);\n    }\n\n    if (typeof this.get(expr) !== 'object') {\n        throw new Error('[SAN ERROR] Merge Expects a Target of Type \\'object\\'; got ' + typeof oldValue);\n    }\n\n    if (typeof source !== 'object') {\n        throw new Error('[SAN ERROR] Merge Expects a Source of Type \\'object\\'; got ' + typeof source);\n    }\n    // #[end]\n\n    for (var key in source) { // eslint-disable-line\n        this.set(\n            createAccessor(\n                expr.paths.concat(\n                    [\n                        {\n                            type: ExprType.STRING,\n                            value: key\n                        }\n                    ]\n                )\n            ),\n            source[key],\n            option\n        );\n    }\n};\n\n/**\n * 基于更新函数更新数据项\n *\n * @param {string|Object} expr 数据项路径\n * @param {Function} fn 数据处理函数\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n */\nData.prototype.apply = function (expr, fn, option) {\n    // #[begin] error\n    var exprRaw = expr;\n    // #[end]\n\n    expr = parseExpr(expr);\n\n    // #[begin] error\n    if (expr.type !== ExprType.ACCESSOR) {\n        throw new Error('[SAN ERROR] Invalid Expression in Data apply: ' + exprRaw);\n    }\n    // #[end]\n\n    var oldValue = this.get(expr);\n\n    // #[begin] error\n    if (typeof fn !== 'function') {\n        throw new Error(\n            '[SAN ERROR] Invalid Argument\\'s Type in Data apply: '\n            + 'Expected Function but got ' + typeof fn\n        );\n    }\n    // #[end]\n\n    this.set(expr, fn(oldValue), option);\n};\n\n/**\n * 数组数据项splice操作\n *\n * @param {string|Object} expr 数据项路径\n * @param {Array} args splice 接受的参数列表，数组项与Array.prototype.splice的参数一致\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n * @return {Array} 新数组\n */\nData.prototype.splice = function (expr, args, option) {\n    option = option || {};\n    // #[begin] error\n    var exprRaw = expr;\n    // #[end]\n\n    expr = parseExpr(expr);\n\n    // #[begin] error\n    if (expr.type !== ExprType.ACCESSOR) {\n        throw new Error('[SAN ERROR] Invalid Expression in Data splice: ' + exprRaw);\n    }\n    // #[end]\n\n    var target = this.get(expr);\n    var returnValue = [];\n\n    if (target instanceof Array) {\n        var index = args[0];\n        if (index < 0 || index > target.length) {\n            return;\n        }\n\n        var newArray = target.slice(0);\n        returnValue = newArray.splice.apply(newArray, args);\n        dataCache.clear();\n        this.raw = immutableSet(this.raw, expr.paths, newArray, this);\n\n        this.fire({\n            expr: expr,\n            type: DataChangeType.SPLICE,\n            index: index,\n            deleteCount: returnValue.length,\n            value: returnValue,\n            insertions: args.slice(2),\n            option: option\n        });\n    }\n\n    // #[begin] error\n    this.checkDataTypes();\n    // #[end]\n\n    return returnValue;\n};\n\n/**\n * 数组数据项push操作\n *\n * @param {string|Object} expr 数据项路径\n * @param {*} item 要push的值\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n * @return {number} 新数组的length属性\n */\nData.prototype.push = function (expr, item, option) {\n    var target = this.get(expr);\n\n    if (target instanceof Array) {\n        this.splice(expr, [target.length, 0, item], option);\n        return target.length + 1;\n    }\n};\n\n/**\n * 数组数据项pop操作\n *\n * @param {string|Object} expr 数据项路径\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n * @return {*}\n */\nData.prototype.pop = function (expr, option) {\n    var target = this.get(expr);\n\n    if (target instanceof Array) {\n        var len = target.length;\n        if (len) {\n            return this.splice(expr, [len - 1, 1], option)[0];\n        }\n    }\n};\n\n/**\n * 数组数据项shift操作\n *\n * @param {string|Object} expr 数据项路径\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n * @return {*}\n */\nData.prototype.shift = function (expr, option) {\n    return this.splice(expr, [0, 1], option)[0];\n};\n\n/**\n * 数组数据项unshift操作\n *\n * @param {string|Object} expr 数据项路径\n * @param {*} item 要unshift的值\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n * @return {number} 新数组的length属性\n */\nData.prototype.unshift = function (expr, item, option) {\n    var target = this.get(expr);\n\n    if (target instanceof Array) {\n        this.splice(expr, [0, 0, item], option);\n        return target.length + 1;\n    }\n};\n\n/**\n * 数组数据项移除操作\n *\n * @param {string|Object} expr 数据项路径\n * @param {number} index 要移除项的索引\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n */\nData.prototype.removeAt = function (expr, index, option) {\n    this.splice(expr, [index, 1], option);\n};\n\n/**\n * 数组数据项移除操作\n *\n * @param {string|Object} expr 数据项路径\n * @param {*} value 要移除的项\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n */\nData.prototype.remove = function (expr, value, option) {\n    var target = this.get(expr);\n\n    if (target instanceof Array) {\n        var len = target.length;\n        while (len--) {\n            if (target[len] === value) {\n                this.splice(expr, [len, 1], option);\n                break;\n            }\n        }\n    }\n};\n\n// exports = module.exports = Data;\n\n\n/**\n * @file 声明式事件的监听函数\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var evalArgs = require('../runtime/eval-args');\n// var findMethod = require('../runtime/find-method');\n// var Data = require('../runtime/data');\n\n/**\n * 声明式事件的监听函数\n *\n * @param {Object} eventBind 绑定信息对象\n * @param {boolean} isComponentEvent 是否组件自定义事件\n * @param {Data} data 数据环境\n * @param {Event} e 事件对象\n */\nfunction eventDeclarationListener(eventBind, isComponentEvent, data, e) {\n    var method = findMethod(this, eventBind.expr.name, data);\n\n    if (typeof method === 'function') {\n        var scope = new Data(\n            {$event: isComponentEvent ? e : e || window.event},\n            data\n        );\n        method.apply(this, evalArgs(eventBind.expr.args, scope, this));\n    }\n}\n\n// exports = module.exports = eventDeclarationListener;\n\n\n/**\n * @file 自闭合标签表\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var splitStr2Obj = require('../util/split-str-2-obj');\n\n/**\n * 自闭合标签列表\n *\n * @type {Object}\n */\nvar hotTags = splitStr2Obj('div,span,input,button,textarea,form,label,dl,dt,dd,ul,ol,li,a,b,u,h1,h2,h3,h4,h5,h6');\n\n// exports = module.exports = hotTags;\n\n\n/**\n * @file 是否浏览器环境\n * @author errorrik(errorrik@gmail.com)\n */\n\nvar isBrowser = typeof window !== 'undefined';\n\n// exports = module.exports = isBrowser;\n\n\n/**\n * @file insertBefore 方法的兼容性封装\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * insertBefore 方法的兼容性封装\n *\n * @param {HTMLNode} targetEl 要插入的节点\n * @param {HTMLElement} parentEl 父元素\n * @param {HTMLElement?} beforeEl 在此元素之前插入\n */\nfunction insertBefore(targetEl, parentEl, beforeEl) {\n    if (parentEl) {\n        if (beforeEl) {\n            parentEl.insertBefore(targetEl, beforeEl);\n        }\n        else {\n            parentEl.appendChild(targetEl);\n        }\n    }\n}\n\n// exports = module.exports = insertBefore;\n\n\n/**\n * @file 判断元素是否不允许设置HTML\n * @author errorrik(errorrik@gmail.com)\n */\n\n// some html elements cannot set innerHTML in old ie\n// see: https://msdn.microsoft.com/en-us/library/ms533897(VS.85).aspx\n\n/**\n * 判断元素是否不允许设置HTML\n *\n * @param {HTMLElement} el 要判断的元素\n * @return {boolean}\n */\nfunction noSetHTML(el) {\n    return /^(col|colgroup|frameset|style|table|tbody|tfoot|thead|tr|select)$/i.test(el.tagName);\n}\n\n// exports = module.exports = noSetHTML;\n\n\n/**\n * @file  获取节点 stump 的 comment\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var noSetHTML = require('../browser/no-set-html');\n\n// #[begin] error\n/**\n * 获取节点 stump 的 comment\n *\n * @param {HTMLElement} el HTML元素\n */\nfunction warnSetHTML(el) {\n    // dont warn if not in browser runtime\n    if (!(typeof window !== 'undefined' && typeof navigator !== 'undefined' && window.document)) {\n        return;\n    }\n\n    // some html elements cannot set innerHTML in old ie\n    // see: https://msdn.microsoft.com/en-us/library/ms533897(VS.85).aspx\n    if (noSetHTML(el)) {\n        var message = '[SAN WARNING] set html for element \"' + el.tagName\n            + '\" may cause an error in old IE';\n        /* eslint-disable no-console */\n        if (typeof console === 'object' && console.warn) {\n            console.warn(message);\n        }\n        else {\n            throw new Error(message);\n        }\n        /* eslint-enable no-console */\n    }\n}\n// #[end]\n\n// exports = module.exports = warnSetHTML;\n\n\n/**\n * @file 判断是否结束桩\n * @author errorrik(errorrik@gmail.com)\n */\n\n// #[begin] reverse\n/**\n * 判断是否结束桩\n *\n * @param {HTMLElement|HTMLComment} target 要判断的元素\n * @param {string} type 桩类型\n * @return {boolean}\n */\nfunction isEndStump(target, type) {\n    return target.nodeType === 8 && target.data === '/s-' + type;\n}\n// #[end]\n\n// exports = module.exports = isEndStump;\n\n\n/**\n * @file 获取节点在组件树中的路径\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var NodeType = require('./node-type');\n\n// #[begin] reverse\n/**\n * 获取节点在组件树中的路径\n *\n * @param {Node} node 节点对象\n * @return {Array}\n */\nfunction getNodePath(node) {\n    var nodePaths = [];\n    var nodeParent = node;\n    while (nodeParent) {\n        switch (nodeParent.nodeType) {\n            case NodeType.ELEM:\n                nodePaths.unshift(nodeParent.tagName);\n                break;\n\n            case NodeType.IF:\n                nodePaths.unshift('if');\n                break;\n\n            case NodeType.FOR:\n                nodePaths.unshift('for[' + nodeParent.anode.directives['for'].raw + ']'); // eslint-disable-line dot-notation\n                break;\n\n            case NodeType.SLOT:\n                nodePaths.unshift('slot[' + (nodeParent.name || 'default') + ']');\n                break;\n\n            case NodeType.TPL:\n                nodePaths.unshift('template');\n                break;\n\n            case NodeType.CMPT:\n                nodePaths.unshift('component[' + (nodeParent.subTag || 'root') + ']');\n                break;\n\n            case NodeType.TEXT:\n                nodePaths.unshift('text');\n                break;\n        }\n\n        nodeParent = nodeParent.parent;\n    }\n\n    return nodePaths;\n}\n// #[end]\n\n// exports = module.exports = getNodePath;\n\n\n/**\n * @file text 节点类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var isBrowser = require('../browser/is-browser');\n// var removeEl = require('../browser/remove-el');\n// var insertBefore = require('../browser/insert-before');\n// var changeExprCompare = require('../runtime/change-expr-compare');\n// var evalExpr = require('../runtime/eval-expr');\n// var NodeType = require('./node-type');\n// var warnSetHTML = require('./warn-set-html');\n// var isEndStump = require('./is-end-stump');\n// var getNodePath = require('./get-node-path');\n\n\n/**\n * text 节点类\n *\n * @param {Object} aNode 抽象节点\n * @param {Component} owner 所属组件环境\n * @param {Model=} scope 所属数据环境\n * @param {Node} parent 父亲节点\n * @param {DOMChildrenWalker?} reverseWalker 子元素遍历对象\n */\nfunction TextNode(aNode, owner, scope, parent, reverseWalker) {\n    this.aNode = aNode;\n    this.owner = owner;\n    this.scope = scope;\n    this.parent = parent;\n\n    // #[begin] reverse\n    if (reverseWalker) {\n        var currentNode = reverseWalker.current;\n        if (currentNode) {\n            switch (currentNode.nodeType) {\n                case 8:\n                    if (currentNode.data === 's-text') {\n                        this.sel = currentNode;\n                        currentNode.data = this.id;\n                        reverseWalker.goNext();\n\n                        while (1) { // eslint-disable-line\n                            currentNode = reverseWalker.current;\n                            if (!currentNode) {\n                                throw new Error('[SAN REVERSE ERROR] Text end flag not found. \\nPaths: '\n                                    + getNodePath(this).join(' > '));\n                            }\n\n                            if (isEndStump(currentNode, 'text')) {\n                                this.el = currentNode;\n                                reverseWalker.goNext();\n                                currentNode.data = this.id;\n                                break;\n                            }\n\n                            reverseWalker.goNext();\n                        }\n                    }\n                    break;\n\n                case 3:\n                    reverseWalker.goNext();\n                    if (!this.aNode.textExpr.original) {\n                        this.el = currentNode;\n                    }\n                    break;\n            }\n        }\n        else {\n            this.el = document.createTextNode('');\n            insertBefore(this.el, reverseWalker.target, reverseWalker.current);\n        }\n    }\n    // #[end]\n}\n\nTextNode.prototype.nodeType = NodeType.TEXT;\n\n/**\n * 将text attach到页面\n *\n * @param {HTMLElement} parentEl 要添加到的父元素\n * @param {HTMLElement＝} beforeEl 要添加到哪个元素之前\n */\nTextNode.prototype.attach = function (parentEl, beforeEl) {\n    this.content = evalExpr(this.aNode.textExpr, this.scope, this.owner);\n\n    if (this.aNode.textExpr.original) {\n        this.sel = document.createComment(this.id);\n        insertBefore(this.sel, parentEl, beforeEl);\n\n        this.el = document.createComment(this.id);\n        insertBefore(this.el, parentEl, beforeEl);\n\n        var tempFlag = document.createElement('script');\n        parentEl.insertBefore(tempFlag, this.el);\n        tempFlag.insertAdjacentHTML('beforebegin', this.content);\n        parentEl.removeChild(tempFlag);\n    }\n    else {\n        this.el = document.createTextNode(this.content);\n        insertBefore(this.el, parentEl, beforeEl);\n    }\n};\n\n/**\n * 销毁 text 节点\n */\nTextNode.prototype.dispose = function () {\n    this._prev = null;\n    this.el = null;\n    this.sel = null;\n};\n\nvar textUpdateProp = isBrowser\n    && (typeof document.createTextNode('').textContent === 'string'\n        ? 'textContent'\n        : 'data');\n\n/**\n * 更新 text 节点的视图\n *\n * @param {Array} changes 数据变化信息\n */\nTextNode.prototype._update = function (changes) {\n    if (this.aNode.textExpr.value) {\n        return;\n    }\n\n    var len = changes ? changes.length : 0;\n    while (len--) {\n        if (changeExprCompare(changes[len].expr, this.aNode.textExpr, this.scope)) {\n            var text = evalExpr(this.aNode.textExpr, this.scope, this.owner);\n\n            if (text !== this.content) {\n                this.content = text;\n\n                if (this.aNode.textExpr.original) {\n                    var startRemoveEl = this.sel.nextSibling;\n                    var parentEl = this.el.parentNode;\n\n                    while (startRemoveEl !== this.el) {\n                        var removeTarget = startRemoveEl;\n                        startRemoveEl = startRemoveEl.nextSibling;\n                        removeEl(removeTarget);\n                    }\n\n                    // #[begin] error\n                    warnSetHTML(parentEl);\n                    // #[end]\n\n                    var tempFlag = document.createElement('script');\n                    parentEl.insertBefore(tempFlag, this.el);\n                    tempFlag.insertAdjacentHTML('beforebegin', text);\n                    parentEl.removeChild(tempFlag);\n                }\n                else {\n                    this.el[textUpdateProp] = text;\n                }\n            }\n\n            return;\n        }\n    }\n};\n\n// exports = module.exports = TextNode;\n\n\n/**\n * @file 判断变更数组是否影响到数据引用摘要\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n/**\n * 判断变更数组是否影响到数据引用摘要\n *\n * @param {Array} changes 变更数组\n * @param {Object} dataRef 数据引用摘要\n * @return {boolean}\n */\nfunction changesIsInDataRef(changes, dataRef) {\n    for (var i = 0; i < changes.length; i++) {\n        var change = changes[i];\n\n        if (!change.overview) {\n            var paths = change.expr.paths;\n            change.overview = paths[0].value;\n\n            if (paths.length > 1) {\n                change.extOverview = paths[0].value + '.' + paths[1].value;\n                change.wildOverview = paths[0].value + '.*';\n            }\n        }\n\n        if (dataRef[change.overview]\n            || change.wildOverview && dataRef[change.wildOverview]\n            || change.extOverview && dataRef[change.extOverview]\n        ) {\n            return true;\n        }\n    }\n}\n\n// exports = module.exports = changesIsInDataRef;\n\n\n/**\n * @file 元素子节点遍历操作类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var removeEl = require('../browser/remove-el');\n\n// #[begin] reverse\n/**\n * 元素子节点遍历操作类\n *\n * @inner\n * @class\n * @param {HTMLElement} el 要遍历的元素\n */\nfunction DOMChildrenWalker(el) {\n    this.raw = [];\n    this.index = 0;\n    this.target = el;\n\n    var child = el.firstChild;\n    var next;\n    while (child) {\n        next = child.nextSibling;\n\n        switch (child.nodeType) {\n            case 3:\n                if (/^\\s*$/.test(child.data || child.textContent)) {\n                    removeEl(child);\n                }\n                else {\n                    this.raw.push(child);\n                }\n                break;\n\n            case 1:\n            case 8:\n                this.raw.push(child);\n        }\n\n        child = next;\n    }\n\n    this.current = this.raw[this.index];\n    this.next = this.raw[this.index + 1];\n}\n\n/**\n * 往下走一个元素\n */\nDOMChildrenWalker.prototype.goNext = function () {\n    this.current = this.raw[++this.index];\n    this.next = this.raw[this.index + 1];\n};\n// #[end]\n\n// exports = module.exports = DOMChildrenWalker;\n\n\n/**\n * @file 元素节点类\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var each = require('../util/each');\n// var guid = require('../util/guid');\n// var removeEl = require('../browser/remove-el');\n// var changeExprCompare = require('../runtime/change-expr-compare');\n// var changesIsInDataRef = require('../runtime/changes-is-in-data-ref');\n// var evalExpr = require('../runtime/eval-expr');\n// var LifeCycle = require('./life-cycle');\n// var NodeType = require('./node-type');\n// var reverseElementChildren = require('./reverse-element-children');\n// var isDataChangeByElement = require('./is-data-change-by-element');\n// var elementUpdateChildren = require('./element-update-children');\n// var elementOwnCreate = require('./element-own-create');\n// var elementOwnAttach = require('./element-own-attach');\n// var elementOwnDetach = require('./element-own-detach');\n// var elementOwnDispose = require('./element-own-dispose');\n// var elementOwnOnEl = require('./element-own-on-el');\n// var elementOwnToPhase = require('./element-own-to-phase');\n// var elementOwnAttached = require('./element-own-attached');\n// var elementDispose = require('./element-dispose');\n// var elementInitTagName = require('./element-init-tag-name');\n// var handleProp = require('./handle-prop');\n// var warnSetHTML = require('./warn-set-html');\n// var getNodePath = require('./get-node-path');\n\n/**\n * 元素节点类\n *\n * @param {Object} aNode 抽象节点\n * @param {Component} owner 所属组件环境\n * @param {Model=} scope 所属数据环境\n * @param {Node} parent 父亲节点\n * @param {DOMChildrenWalker?} reverseWalker 子元素遍历对象\n */\nfunction Element(aNode, owner, scope, parent, reverseWalker) {\n    this.aNode = aNode;\n    this.owner = owner;\n    this.scope = scope;\n    this.parent = parent;\n\n    this.lifeCycle = LifeCycle.start;\n    this.children = [];\n    this._elFns = [];\n    this.parentComponent = parent.nodeType === NodeType.CMPT\n        ? parent\n        : parent.parentComponent;\n\n    this.id = guid();\n\n    elementInitTagName(this);\n\n    this._toPhase('inited');\n\n    // #[begin] reverse\n    if (reverseWalker) {\n        var currentNode = reverseWalker.current;\n\n        if (!currentNode) {\n            throw new Error('[SAN REVERSE ERROR] Element not found. \\nPaths: '\n                + getNodePath(this).join(' > '));\n        }\n\n        if (currentNode.nodeType !== 1) {\n            throw new Error('[SAN REVERSE ERROR] Element type not match, expect 1 but '\n                + currentNode.nodeType + '.\\nPaths: '\n                + getNodePath(this).join(' > '));\n        }\n\n        if (currentNode.tagName.toLowerCase() !== this.tagName) {\n            throw new Error('[SAN REVERSE ERROR] Element tagName not match, expect '\n                + this.tagName + ' but meat ' + currentNode.tagName.toLowerCase() + '.\\nPaths: '\n                + getNodePath(this).join(' > '));\n        }\n\n        this.el = currentNode;\n        reverseWalker.goNext();\n\n        reverseElementChildren(this);\n\n        this._attached();\n    }\n    // #[end]\n}\n\n\n\nElement.prototype.nodeType = NodeType.ELEM;\n\n\nElement.prototype.attach = elementOwnAttach;\nElement.prototype.detach = elementOwnDetach;\nElement.prototype.dispose = elementOwnDispose;\nElement.prototype._create = elementOwnCreate;\nElement.prototype._toPhase = elementOwnToPhase;\nElement.prototype._onEl = elementOwnOnEl;\n\nElement.prototype._doneLeave = function () {\n    if (this.leaveDispose) {\n        if (!this.lifeCycle.disposed) {\n            elementDispose(\n                this,\n                this.disposeNoDetach,\n                this.disposeNoTransition\n            );\n        }\n    }\n    else if (this.lifeCycle.attached) {\n        removeEl(this.el);\n        this._toPhase('detached');\n    }\n};\n\n/**\n * 视图更新\n *\n * @param {Array} changes 数据变化信息\n */\nElement.prototype._update = function (changes) {\n    if (!changesIsInDataRef(changes, this.aNode.hotspot.data)) {\n        return;\n    }\n\n    var me = this;\n\n    var dynamicProps = this.aNode.hotspot.dynamicProps;\n    for (var i = 0, l = dynamicProps.length; i < l; i++) {\n        var prop = dynamicProps[i];\n\n        for (var j = 0, changeLen = changes.length; j < changeLen; j++) {\n            var change = changes[j];\n\n            if (!isDataChangeByElement(change, this, prop.name)\n                && (\n                    changeExprCompare(change.expr, prop.expr, this.scope)\n                    || prop.hintExpr && changeExprCompare(change.expr, prop.hintExpr, this.scope)\n                )\n            ) {\n                handleProp(this, evalExpr(prop.expr, this.scope, this.owner), prop);\n                break;\n            }\n        }\n    }\n\n    var htmlDirective = this.aNode.directives.html;\n    if (htmlDirective) {\n        each(changes, function (change) {\n            if (changeExprCompare(change.expr, htmlDirective.value, me.scope)) {\n                // #[begin] error\n                warnSetHTML(me.el);\n                // #[end]\n                me.el.innerHTML = evalExpr(htmlDirective.value, me.scope, me.owner);\n                return false;\n            }\n        });\n    }\n    else {\n        elementUpdateChildren(this, changes);\n    }\n};\n\n/**\n * 执行完成attached状态的行为\n */\nElement.prototype._attached = elementOwnAttached;\n\n// exports = module.exports = Element;\n\n\n/**\n * @file 销毁节点，清空节点上的无用成员\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n/**\n * 销毁节点\n *\n * @param {Object} node 节点对象\n */\nfunction nodeDispose(node) {\n    node.el = null;\n    node.sel = null;\n    node.owner = null;\n    node.scope = null;\n    node.aNode = null;\n    node.parent = null;\n    node.parentComponent = null;\n    node.children = null;\n\n    if (node._toPhase) {\n        node._toPhase('disposed');\n    }\n\n    if (node._ondisposed) {\n        node._ondisposed();\n    }\n}\n\n// exports = module.exports = nodeDispose;\n\n\n/**\n * @file 通过组件反解创建节点的工厂方法\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var hotTags = require('../browser/hot-tags');\n// var NodeType = require('./node-type');\n// var TextNode = require('./text-node');\n// var Element = require('./element');\n// var SlotNode = require('./slot-node');\n// var ForNode = require('./for-node');\n// var IfNode = require('./if-node');\n// var TemplateNode = require('./template-node');\n\n// #[begin] reverse\n/**\n * 通过组件反解创建节点\n *\n * @param {ANode} aNode 抽象节点\n * @param {DOMChildrenWalker} reverseWalker 子元素遍历对象\n * @param {Node} parent 父亲节点\n * @param {Model=} scope 所属数据环境\n * @return {Node}\n */\nfunction createReverseNode(aNode, reverseWalker, parent, scope) {\n    var parentIsComponent = parent.nodeType === NodeType.CMPT;\n    var owner = parentIsComponent ? parent : (parent.childOwner || parent.owner);\n    scope = scope || (parentIsComponent ? parent.data : (parent.childScope || parent.scope));\n\n    if (aNode.textExpr) {\n        return new TextNode(aNode, owner, scope, parent, reverseWalker);\n    }\n\n    if (aNode.directives['if']) { // eslint-disable-line dot-notation\n        return new IfNode(aNode, owner, scope, parent, reverseWalker);\n    }\n\n    if (aNode.directives['for']) { // eslint-disable-line dot-notation\n        return new ForNode(aNode, owner, scope, parent, reverseWalker);\n    }\n\n    if (hotTags[aNode.tagName]) {\n        return new Element(aNode, owner, scope, parent, reverseWalker);\n    }\n\n    switch (aNode.tagName) {\n        case 'slot':\n            return new SlotNode(aNode, owner, scope, parent, reverseWalker);\n\n        case 'template':\n            return new TemplateNode(aNode, owner, scope, parent, reverseWalker);\n\n        default:\n            var ComponentType = owner.getComponentType(aNode);\n            if (ComponentType) {\n                return new ComponentType({\n                    aNode: aNode,\n                    owner: owner,\n                    scope: scope,\n                    parent: parent,\n                    subTag: aNode.tagName,\n                    reverseWalker: reverseWalker\n                });\n            }\n    }\n\n    return new Element(aNode, owner, scope, parent, reverseWalker);\n}\n// #[end]\n\n// exports = module.exports = createReverseNode;\n\n\n/**\n * @file 销毁释放元素的子元素\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 销毁释放元素的子元素\n *\n * @param {Object} element 元素节点\n * @param {boolean=} noDetach 是否不要把节点从dom移除\n * @param {boolean=} noTransition 是否不显示过渡动画效果\n */\nfunction elementDisposeChildren(element, noDetach, noTransition) {\n    var children = element.children;\n    var len = children && children.length;\n    while (len--) {\n        children[len].dispose(noDetach, noTransition);\n    }\n}\n\n// exports = module.exports = elementDisposeChildren;\n\n\n/**\n * @file 更新元素的子元素视图\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n/**\n * 更新元素的子元素视图\n *\n * @param {Object} element 要更新的元素\n * @param {Array} changes 数据变化信息\n */\nfunction elementUpdateChildren(element, changes) {\n    for (var i = 0, l = element.children.length; i < l; i++) {\n        element.children[i]._update(changes);\n    }\n}\n\n// exports = module.exports = elementUpdateChildren;\n\n\n/**\n * @file 使元素节点到达相应的生命周期\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var LifeCycle = require('./life-cycle');\n\n/**\n * 使元素节点到达相应的生命周期\n *\n * @param {string} name 生命周期名称\n */\nfunction elementOwnToPhase(name) {\n    this.lifeCycle = LifeCycle[name] || this.lifeCycle;\n}\n\n// exports = module.exports = elementOwnToPhase;\n\n\n/**\n * @file 创建节点的工厂方法\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var hotTags = require('../browser/hot-tags');\n// var NodeType = require('./node-type');\n// var TextNode = require('./text-node');\n// var Element = require('./element');\n// var SlotNode = require('./slot-node');\n// var ForNode = require('./for-node');\n// var IfNode = require('./if-node');\n// var TemplateNode = require('./template-node');\n\n\n/**\n * 创建节点\n *\n * @param {ANode} aNode 抽象节点\n * @param {Node} parent 父亲节点\n * @param {Model=} scope 所属数据环境\n * @return {Node}\n */\nfunction createNode(aNode, parent, scope) {\n    var parentIsComponent = parent.nodeType === NodeType.CMPT;\n    var owner = parentIsComponent ? parent : (parent.childOwner || parent.owner);\n    scope = scope || (parentIsComponent ? parent.data : (parent.childScope || parent.scope));\n\n\n    if (aNode.textExpr) {\n        return new TextNode(aNode, owner, scope, parent);\n    }\n\n    if (aNode.directives['if']) { // eslint-disable-line dot-notation\n        return new IfNode(aNode, owner, scope, parent);\n    }\n\n    if (aNode.directives['for']) { // eslint-disable-line dot-notation\n        return new ForNode(aNode, owner, scope, parent);\n    }\n\n    if (hotTags[aNode.tagName]) {\n        return new Element(aNode, owner, scope, parent);\n    }\n\n\n\n    switch (aNode.tagName) {\n        case 'slot':\n            return new SlotNode(aNode, owner, scope, parent);\n\n        case 'template':\n            return new TemplateNode(aNode, owner, scope, parent);\n\n        default:\n            var ComponentType = owner.getComponentType(aNode);\n            if (ComponentType) {\n                return new ComponentType({\n                    aNode: aNode,\n                    owner: owner,\n                    scope: scope,\n                    parent: parent,\n                    subTag: aNode.tagName\n                });\n            }\n    }\n\n    return new Element(aNode, owner, scope, parent);\n}\n\n// exports = module.exports = createNode;\n\n\n/**\n * @file 生成子元素\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var createNode = require('./create-node');\n\n/**\n * 生成子元素\n *\n * @param {Element} element 元素\n * @param {HTMLElement} parentEl 要添加到的父元素\n * @param {HTMLElement＝} beforeEl 要添加到哪个元素之前\n */\nfunction genElementChildren(element, parentEl, beforeEl) {\n    parentEl = parentEl || element.el;\n\n    var aNodeChildren = element.aNode.children;\n    for (var i = 0; i < aNodeChildren.length; i++) {\n        var child = createNode(aNodeChildren[i], element);\n        element.children.push(child);\n        child.attach(parentEl, beforeEl);\n    }\n}\n\n// exports = module.exports = genElementChildren;\n\n\n/**\n * @file 将没有 root 只有 children 的元素 attach 到页面\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var insertBefore = require('../browser/insert-before');\n// var genElementChildren = require('./gen-element-children');\n\n\n/**\n * 将没有 root 只有 children 的元素 attach 到页面\n * 主要用于 slot 和 template\n *\n * @param {HTMLElement} parentEl 要添加到的父元素\n * @param {HTMLElement＝} beforeEl 要添加到哪个元素之前\n */\nfunction nodeOwnOnlyChildrenAttach(parentEl, beforeEl) {\n    this.sel = document.createComment(this.id);\n    insertBefore(this.sel, parentEl, beforeEl);\n\n    genElementChildren(this, parentEl, beforeEl);\n\n    this.el = document.createComment(this.id);\n    insertBefore(this.el, parentEl, beforeEl);\n\n    this._toPhase('attached');\n}\n\n// exports = module.exports = nodeOwnOnlyChildrenAttach;\n\n\n/**\n * @file slot 节点类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var each = require('../util/each');\n// var guid = require('../util/guid');\n// var createANode = require('../parser/create-a-node');\n// var ExprType = require('../parser/expr-type');\n// var createAccessor = require('../parser/create-accessor');\n// var evalExpr = require('../runtime/eval-expr');\n// var Data = require('../runtime/data');\n// var DataChangeType = require('../runtime/data-change-type');\n// var changeExprCompare = require('../runtime/change-expr-compare');\n// var insertBefore = require('../browser/insert-before');\n// var NodeType = require('./node-type');\n// var LifeCycle = require('./life-cycle');\n// var getANodeProp = require('./get-a-node-prop');\n// var nodeDispose = require('./node-dispose');\n// var createReverseNode = require('./create-reverse-node');\n// var elementDisposeChildren = require('./element-dispose-children');\n// var elementUpdateChildren = require('./element-update-children');\n// var elementOwnToPhase = require('./element-own-to-phase');\n// var nodeOwnOnlyChildrenAttach = require('./node-own-only-children-attach');\n\n\n/**\n * slot 节点类\n *\n * @param {Object} aNode 抽象节点\n * @param {Component} owner 所属组件环境\n * @param {Model=} scope 所属数据环境\n * @param {Node} parent 父亲节点\n * @param {DOMChildrenWalker?} reverseWalker 子元素遍历对象\n */\nfunction SlotNode(aNode, owner, scope, parent, reverseWalker) {\n    var realANode = createANode();\n    this.aNode = realANode;\n    this.owner = owner;\n    this.scope = scope;\n    this.parent = parent;\n    this.parentComponent = parent.nodeType === NodeType.CMPT\n        ? parent\n        : parent.parentComponent;\n\n    this.id = guid();\n\n    this.lifeCycle = LifeCycle.start;\n    this.children = [];\n\n    // calc slot name\n    this.nameBind = getANodeProp(aNode, 'name');\n    if (this.nameBind) {\n        this.isNamed = true;\n        this.name = evalExpr(this.nameBind.expr, this.scope, this.owner);\n    }\n\n    // calc aNode children\n    var givenSlots = owner.givenSlots;\n    var givenChildren;\n    if (givenSlots) {\n        givenChildren = this.isNamed ? givenSlots.named[this.name] : givenSlots.noname;\n    }\n\n    if (givenChildren) {\n        this.isInserted = true;\n    }\n\n    realANode.children = givenChildren || aNode.children.slice(0);\n\n    var me = this;\n\n    // calc scoped slot vars\n    realANode.vars = aNode.vars;\n    var initData = {};\n    each(realANode.vars, function (varItem) {\n        me.isScoped = true;\n        initData[varItem.name] = evalExpr(varItem.expr, scope, owner);\n    });\n\n    // child owner & child scope\n    if (this.isInserted) {\n        this.childOwner = owner.owner;\n        this.childScope = owner.scope;\n    }\n\n    if (this.isScoped) {\n        this.childScope = new Data(initData, this.childScope || this.scope);\n    }\n\n\n    owner.slotChildren.push(this);\n\n    // #[begin] reverse\n    if (reverseWalker) {\n\n        this.sel = document.createComment(this.id);\n        insertBefore(this.sel, reverseWalker.target, reverseWalker.current);\n\n        each(this.aNode.children, function (aNodeChild) {\n            me.children.push(createReverseNode(aNodeChild, reverseWalker, me));\n        });\n\n        this.el = document.createComment(this.id);\n        insertBefore(this.el, reverseWalker.target, reverseWalker.current);\n\n        this._toPhase('attached');\n    }\n    // #[end]\n}\n\nSlotNode.prototype.nodeType = NodeType.SLOT;\n\n/**\n * 销毁释放 slot\n *\n * @param {boolean=} noDetach 是否不要把节点从dom移除\n * @param {boolean=} noTransition 是否不显示过渡动画效果\n */\nSlotNode.prototype.dispose = function (noDetach, noTransition) {\n    this.childOwner = null;\n    this.childScope = null;\n\n    elementDisposeChildren(this, noDetach, noTransition);\n    nodeDispose(this);\n};\n\nSlotNode.prototype.attach = nodeOwnOnlyChildrenAttach;\nSlotNode.prototype._toPhase = elementOwnToPhase;\n\n/**\n * 视图更新函数\n *\n * @param {Array} changes 数据变化信息\n * @param {boolean=} isFromOuter 变化信息是否来源于父组件之外的组件\n * @return {boolean}\n */\nSlotNode.prototype._update = function (changes, isFromOuter) {\n    var me = this;\n\n    if (this.nameBind && evalExpr(this.nameBind.expr, this.scope, this.owner) !== me.name) {\n        this.owner._notifyNeedReload();\n        return false;\n    }\n\n    if (isFromOuter) {\n        if (this.isInserted) {\n            elementUpdateChildren(this, changes);\n        }\n    }\n    else {\n        if (this.isScoped) {\n            each(this.aNode.vars, function (varItem) {\n                me.childScope.set(varItem.name, evalExpr(varItem.expr, me.scope, me.owner));\n            });\n\n\n            var scopedChanges = [];\n            each(changes, function (change) {\n                if (!me.isInserted) {\n                    scopedChanges.push(change);\n                }\n\n                each(me.aNode.vars, function (varItem) {\n                    var name = varItem.name;\n                    var relation = changeExprCompare(change.expr, varItem.expr, me.scope);\n\n                    if (relation < 1) {\n                        return;\n                    }\n\n                    if (change.type !== DataChangeType.SPLICE) {\n                        scopedChanges.push({\n                            type: DataChangeType.SET,\n                            expr: createAccessor([\n                                {type: ExprType.STRING, value: name}\n                            ]),\n                            value: me.childScope.get(name),\n                            option: change.option\n                        });\n                    }\n                    else if (relation === 2) {\n                        scopedChanges.push({\n                            expr: createAccessor([\n                                {type: ExprType.STRING, value: name}\n                            ]),\n                            type: DataChangeType.SPLICE,\n                            index: change.index,\n                            deleteCount: change.deleteCount,\n                            value: change.value,\n                            insertions: change.insertions,\n                            option: change.option\n                        });\n                    }\n                });\n            });\n\n            elementUpdateChildren(this, scopedChanges);\n        }\n        else if (!this.isInserted) {\n            elementUpdateChildren(this, changes);\n        }\n    }\n};\n\n// exports = module.exports = SlotNode;\n\n\n/**\n * @file 复制指令集合对象\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 复制指令集合对象\n *\n * @param {Object} source 要复制的指令集合对象\n * @param {Object=} excludes 需要排除的key集合\n * @return {Object}\n */\nfunction cloneDirectives(source, excludes) {\n    var result = {};\n    excludes = excludes || {};\n\n    for (var key in source) {\n        if (!excludes[key]) {\n            result[key] = source[key];\n        }\n    }\n\n    return result;\n}\n\n// exports = module.exports = cloneDirectives;\n\n\n/**\n * @file 简单执行销毁节点的行为\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var removeEl = require('../browser/remove-el');\n// var nodeDispose = require('./node-dispose');\n// var elementDisposeChildren = require('./element-dispose-children');\n\n/**\n * 简单执行销毁节点的行为\n *\n * @param {boolean=} noDetach 是否不要把节点从dom移除\n */\nfunction nodeOwnSimpleDispose(noDetach) {\n    elementDisposeChildren(this, noDetach, 1);\n\n    if (!noDetach) {\n        removeEl(this.el);\n    }\n\n    nodeDispose(this);\n}\n\n// exports = module.exports = nodeOwnSimpleDispose;\n\n\n/**\n * @file 创建节点对应的 stump comment 元素\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n\n/**\n * 创建节点对应的 stump comment 主元素\n */\nfunction nodeOwnCreateStump() {\n    this.el = this.el || document.createComment(this.id);\n}\n\n// exports = module.exports = nodeOwnCreateStump;\n\n\n/**\n * @file for 指令节点类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var inherits = require('../util/inherits');\n// var each = require('../util/each');\n// var guid = require('../util/guid');\n// var createANode = require('../parser/create-a-node');\n// var ExprType = require('../parser/expr-type');\n// var parseExpr = require('../parser/parse-expr');\n// var createAccessor = require('../parser/create-accessor');\n// var cloneDirectives = require('../parser/clone-directives');\n// var Data = require('../runtime/data');\n// var DataChangeType = require('../runtime/data-change-type');\n// var changeExprCompare = require('../runtime/change-expr-compare');\n// var evalExpr = require('../runtime/eval-expr');\n// var changesIsInDataRef = require('../runtime/changes-is-in-data-ref');\n// var removeEl = require('../browser/remove-el');\n// var insertBefore = require('../browser/insert-before');\n// var LifeCycle = require('./life-cycle');\n// var NodeType = require('./node-type');\n// var createNode = require('./create-node');\n// var createReverseNode = require('./create-reverse-node');\n// var nodeOwnSimpleDispose = require('./node-own-simple-dispose');\n// var nodeOwnCreateStump = require('./node-own-create-stump');\n// var elementDisposeChildren = require('./element-dispose-children');\n// var dataCache = require('../runtime/data-cache');\n\n\n/**\n * 循环项的数据容器类\n *\n * @inner\n * @class\n * @param {Object} forElement for元素对象\n * @param {*} item 当前项的数据\n * @param {number} index 当前项的索引\n */\nfunction ForItemData(forElement, item, index) {\n    this.id = guid();\n    this.parent = forElement.scope;\n    this.raw = {};\n    this.listeners = [];\n\n    this.directive = forElement.aNode.directives['for']; // eslint-disable-line dot-notation\n    this.raw[this.directive.item.raw] = item;\n    this.raw[this.directive.index.raw] = index;\n}\n\n/**\n * 将数据操作的表达式，转换成为对parent数据操作的表达式\n * 主要是对item和index进行处理\n *\n * @param {Object} expr 表达式\n * @return {Object}\n */\nForItemData.prototype.exprResolve = function (expr) {\n    var directive = this.directive;\n    var me = this;\n\n    function resolveItem(expr) {\n        if (expr.type === ExprType.ACCESSOR\n            && expr.paths[0].value === directive.item.paths[0].value\n        ) {\n            return createAccessor(\n                directive.value.paths.concat(\n                    {\n                        type: ExprType.NUMBER,\n                        value: me.get(directive.index)\n                    },\n                    expr.paths.slice(1)\n                )\n            );\n        }\n\n        return expr;\n    }\n\n    expr = resolveItem(expr);\n\n    var resolvedPaths = [];\n\n    each(expr.paths, function (item) {\n        resolvedPaths.push(\n            item.type === ExprType.ACCESSOR\n                && item.paths[0].value === directive.index.paths[0].value\n            ? {\n                type: ExprType.NUMBER,\n                value: me.get(directive.index)\n            }\n            : resolveItem(item)\n        );\n    });\n\n    return createAccessor(resolvedPaths);\n};\n\n// 代理数据操作方法\ninherits(ForItemData, Data);\neach(\n    ['set', 'remove', 'unshift', 'shift', 'push', 'pop', 'splice'],\n    function (method) {\n        ForItemData.prototype['_' + method] = Data.prototype[method];\n        ForItemData.prototype[method] = function (expr) {\n            expr = this.exprResolve(parseExpr(expr));\n            dataCache.clear();\n            this.parent[method].apply(\n                this.parent,\n                [expr].concat(Array.prototype.slice.call(arguments, 1))\n            );\n        };\n    }\n);\n\n/**\n * 创建 for 指令元素的子元素\n *\n * @inner\n * @param {ForDirective} forElement for 指令元素对象\n * @param {*} item 子元素对应数据\n * @param {number} index 子元素对应序号\n * @return {Element}\n */\nfunction createForDirectiveChild(forElement, item, index) {\n    var itemScope = new ForItemData(forElement, item, index);\n    return createNode(forElement.itemANode, forElement, itemScope);\n}\n\n/**\n * for 指令节点类\n *\n * @param {Object} aNode 抽象节点\n * @param {Component} owner 所属组件环境\n * @param {Model=} scope 所属数据环境\n * @param {Node} parent 父亲节点\n * @param {DOMChildrenWalker?} reverseWalker 子元素遍历对象\n */\nfunction ForNode(aNode, owner, scope, parent, reverseWalker) {\n    this.aNode = aNode;\n    this.owner = owner;\n    this.scope = scope;\n    this.parent = parent;\n    this.parentComponent = parent.nodeType === NodeType.CMPT\n        ? parent\n        : parent.parentComponent;\n\n    this.id = guid();\n    this.children = [];\n\n    this.itemANode = createANode({\n        children: aNode.children,\n        props: aNode.props,\n        events: aNode.events,\n        tagName: aNode.tagName,\n        vars: aNode.vars,\n        hotspot: aNode.hotspot,\n        directives: cloneDirectives(aNode.directives, {\n            'for': 1\n        })\n    });\n\n    this.param = aNode.directives['for']; // eslint-disable-line dot-notation\n\n    // #[begin] reverse\n    if (reverseWalker) {\n        var me = this;\n        each(\n            evalExpr(this.param.value, this.scope, this.owner),\n            function (item, i) {\n                var itemScope = new ForItemData(me, item, i);\n                var child = createReverseNode(me.itemANode, reverseWalker, me, itemScope);\n                me.children.push(child);\n            }\n        );\n\n        this._create();\n        insertBefore(this.el, reverseWalker.target, reverseWalker.current);\n    }\n    // #[end]\n}\n\n\nForNode.prototype.nodeType = NodeType.FOR;\nForNode.prototype._create = nodeOwnCreateStump;\nForNode.prototype.dispose = nodeOwnSimpleDispose;\n\n/**\n * 将元素attach到页面的行为\n *\n * @param {HTMLElement} parentEl 要添加到的父元素\n * @param {HTMLElement＝} beforeEl 要添加到哪个元素之前\n */\nForNode.prototype.attach = function (parentEl, beforeEl) {\n    this._create();\n    insertBefore(this.el, parentEl, beforeEl);\n\n    // paint list\n    var el = this.el || parentEl.firstChild;\n    var data = evalExpr(this.param.value, this.scope, this.owner);\n    var len = data && data.length || 0;\n    for (var i = 0; i < len; i++) {\n        var child = createForDirectiveChild(this, data[i], i);\n        this.children.push(child);\n        child.attach(parentEl, el);\n    }\n};\n\n/**\n * 将元素从页面上移除的行为\n */\nForNode.prototype.detach = function () {\n    if (this.lifeCycle.attached) {\n        elementDisposeChildren(this);\n        this.children = [];\n        removeEl(this.el);\n        this.lifeCycle = LifeCycle.detached;\n    }\n};\n\n/* eslint-disable fecs-max-statements */\n\n/**\n * 视图更新函数\n *\n * @param {Array} changes 数据变化信息\n */\nForNode.prototype._update = function (changes) {\n\n    var me = this;\n    // 控制列表更新策略是否原样更新的变量\n    var originalUpdate = this.aNode.directives.transition;\n\n\n    var oldChildrenLen = this.children.length;\n    var childrenChanges = new Array(oldChildrenLen);\n\n    function pushToChildrenChanges(change) {\n        for (var i = 0, l = childrenChanges.length; i < l; i++) {\n            (childrenChanges[i] = childrenChanges[i] || []).push(change);\n        }\n    }\n\n    var disposeChildren = [];\n\n\n    // 判断列表是否父元素下唯一的元素\n    // 如果是的话，可以做一些更新优化\n    var parentEl = this.el.parentNode;\n    var parentFirstChild = parentEl.firstChild;\n    var parentLastChild = parentEl.lastChild;\n    var isOnlyParentChild = oldChildrenLen > 0 // 有孩子时\n            && parentFirstChild === this.children[0].el\n            && (parentLastChild === this.el || parentLastChild === this.children[oldChildrenLen - 1].el)\n        || oldChildrenLen === 0 // 无孩子时\n            && parentFirstChild === this.el\n            && parentLastChild === this.el;\n\n    // 控制列表是否整体更新的变量\n    var isChildrenRebuild;\n\n    var newList = evalExpr(this.param.value, this.scope, this.owner);\n    var newLen = newList && newList.length || 0;\n\n    /* eslint-disable no-redeclare */\n    for (var cIndex = 0, cLen = changes.length; cIndex < cLen; cIndex++) {\n        var change = changes[cIndex];\n        var relation = changeExprCompare(change.expr, this.param.value, this.scope);\n\n        if (!relation) {\n            // 无关时，直接传递给子元素更新，列表本身不需要动\n            pushToChildrenChanges(change);\n        }\n        else if (relation > 2) {\n            // 变更表达式是list绑定表达式的子项\n            // 只需要对相应的子项进行更新\n            var changePaths = change.expr.paths;\n            var forLen = this.param.value.paths.length;\n            var changeIndex = +evalExpr(changePaths[forLen], this.scope, this.owner);\n\n            if (isNaN(changeIndex)) {\n                pushToChildrenChanges(change);\n            }\n            else {\n                change = {\n                    type: change.type,\n                    expr: createAccessor(\n                        this.param.item.paths.concat(changePaths.slice(forLen + 1))\n                    ),\n                    value: change.value,\n                    index: change.index,\n                    deleteCount: change.deleteCount,\n                    insertions: change.insertions,\n                    option: change.option\n                };\n\n                (childrenChanges[changeIndex] = childrenChanges[changeIndex] || [])\n                    .push(change);\n\n                if (this.children[changeIndex]) {\n                    if (change.type === DataChangeType.SPLICE) {\n                        this.children[changeIndex].scope._splice(\n                            change.expr,\n                            [].concat(change.index, change.deleteCount, change.insertions),\n                            { silent: 1 }\n                        );\n                    }\n                    else {\n                        this.children[changeIndex].scope._set(\n                            change.expr,\n                            change.value,\n                            { silent: 1 }\n                        );\n                    }\n                }\n            }\n        }\n        else if (change.type !== DataChangeType.SPLICE) {\n            // 变更表达式是list绑定表达式本身或母项的重新设值\n            // 此时需要更新整个列表\n\n\n            // 老的比新的多的部分，标记需要dispose\n            if (oldChildrenLen > newLen) {\n                disposeChildren = disposeChildren.concat(this.children.slice(newLen));\n\n                childrenChanges = childrenChanges.slice(0, newLen);\n                this.children = this.children.slice(0, newLen);\n            }\n\n            // 整项变更\n            for (var i = 0; i < newLen; i++) {\n                (childrenChanges[i] = childrenChanges[i] || []).push({\n                    type: DataChangeType.SET,\n                    option: change.option,\n                    expr: createAccessor(this.param.item.paths.slice(0)),\n                    value: newList[i]\n                });\n\n                // 对list更上级数据的直接设置\n                if (relation < 2) {\n                    childrenChanges[i].push(change);\n                }\n\n                if (this.children[i]) {\n                    this.children[i].scope._set(\n                        this.param.item,\n                        newList[i],\n                        {silent: 1}\n                    );\n                }\n                else {\n                    this.children[i] = 0;\n                }\n            }\n\n            isChildrenRebuild = 1;\n        }\n        else if (relation === 2 && change.type === DataChangeType.SPLICE && !isChildrenRebuild) {\n            // 变更表达式是list绑定表达式本身数组的splice操作\n            // 此时需要删除部分项，创建部分项\n            var changeStart = change.index;\n            var deleteCount = change.deleteCount;\n            var insertionsLen = change.insertions.length;\n            var newCount = insertionsLen - deleteCount;\n\n            if (newCount) {\n                var indexChange = {\n                    type: DataChangeType.SET,\n                    option: change.option,\n                    expr: this.param.index\n                };\n\n                for (var i = changeStart + deleteCount; i < this.children.length; i++) {\n                    (childrenChanges[i] = childrenChanges[i] || []).push(indexChange);\n                    this.children[i] && this.children[i].scope._set(\n                        indexChange.expr,\n                        i - deleteCount + insertionsLen,\n                        {silent: 1}\n                    );\n                }\n            }\n\n            var deleteLen = deleteCount;\n            while (deleteLen--) {\n                if (deleteLen < insertionsLen) {\n                    var i = changeStart + deleteLen;\n                    // update\n                    (childrenChanges[i] = childrenChanges[i] || []).push({\n                        type: DataChangeType.SET,\n                        option: change.option,\n                        expr: createAccessor(this.param.item.paths.slice(0)),\n                        value: change.insertions[deleteLen]\n                    });\n                    if (this.children[i]) {\n                        this.children[i].scope._set(\n                            this.param.item,\n                            change.insertions[deleteLen],\n                            {silent: 1}\n                        );\n                    }\n                }\n            }\n\n            if (newCount < 0) {\n                disposeChildren = disposeChildren.concat(this.children.splice(changeStart + insertionsLen, -newCount));\n                childrenChanges.splice(changeStart + insertionsLen, -newCount);\n            }\n            else if (newCount > 0) {\n                var spliceArgs = [changeStart + deleteCount, 0].concat(new Array(newCount));\n                this.children.splice.apply(this.children, spliceArgs);\n                childrenChanges.splice.apply(childrenChanges, spliceArgs);\n            }\n        }\n    }\n\n    var newChildrenLen = this.children.length;\n\n    // 标记 length 是否发生变化\n    if (newChildrenLen !== oldChildrenLen) {\n        var lengthChange = {\n            type: DataChangeType.SET,\n            option: {},\n            expr: createAccessor(\n                this.param.value.paths.concat({\n                    type: ExprType.STRING,\n                    value: 'length'\n                })\n            )\n        };\n\n        if (changesIsInDataRef([lengthChange], this.aNode.hotspot.data)) {\n            pushToChildrenChanges(lengthChange);\n        }\n    }\n\n    // 清除应该干掉的 child\n    this._doCreateAndUpdate = doCreateAndUpdate;\n\n    // 这里不用getTransition，getTransition和scope相关，for和forItem的scope是不同的\n    // 所以getTransition结果本身也是不一致的。不如直接判断指令是否存在，如果存在就不进入暴力清除模式\n    // var violentClear = isOnlyParentChild && newChildrenLen === 0 && !elementGetTransition(me);\n    var violentClear = !originalUpdate && isOnlyParentChild && newChildrenLen === 0;\n\n    var disposedChildCount = 0;\n    for (var i = 0; i < disposeChildren.length; i++) {\n        var disposeChild = disposeChildren[i];\n        if (disposeChild) {\n            disposeChild._ondisposed = childDisposed;\n            disposeChild.dispose(violentClear, violentClear);\n        }\n        else {\n            childDisposed();\n        }\n    }\n\n    if (violentClear) {\n        // cloneNode + replaceChild is faster\n        // parentEl.innerHTML = '';\n        var replaceNode = parentEl.cloneNode(false);\n        parentEl.parentNode.replaceChild(replaceNode, parentEl);\n        this.el = document.createComment(this.id);\n        replaceNode.appendChild(this.el);\n    }\n\n    if (disposeChildren.length === 0) {\n        doCreateAndUpdate();\n    }\n\n\n    function childDisposed() {\n        disposedChildCount++;\n        if (disposedChildCount === disposeChildren.length\n            && doCreateAndUpdate === me._doCreateAndUpdate\n        ) {\n            doCreateAndUpdate();\n        }\n    }\n\n    function doCreateAndUpdate() {\n        me._doCreateAndUpdate = null;\n        if (violentClear) {\n            return;\n        }\n\n\n        var beforeEl = me.el;\n\n        // 对相应的项进行更新\n        if (oldChildrenLen === 0 && isOnlyParentChild) {\n            for (var i = 0; i < newChildrenLen; i++) {\n                me.children[i] = createForDirectiveChild(me, newList[i], i);\n                me.children[i].attach(parentEl, beforeEl);\n            }\n        }\n        else {\n            // 如果不attached则直接创建，如果存在则调用更新函数\n            var j = -1;\n            for (var i = 0; i < newChildrenLen; i++) {\n                var child = me.children[i];\n\n                if (child) {\n                    childrenChanges[i] && child._update(childrenChanges[i]);\n                }\n                else {\n                    if (j < i) {\n                        j = i + 1;\n                        beforeEl = null;\n                        while (j < newChildrenLen) {\n                            var nextChild = me.children[j];\n                            if (nextChild) {\n                                beforeEl = nextChild.sel || nextChild.el;\n                                break;\n                            }\n                            j++;\n                        }\n                    }\n\n                    me.children[i] = createForDirectiveChild(me, newList[i], i);\n                    me.children[i].attach(parentEl, beforeEl || me.el);\n                }\n            }\n        }\n    }\n};\n\n\n// exports = module.exports = ForNode;\n\n\n/**\n * @file 清洗条件 aNode\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var createANode = require('../parser/create-a-node');\n// var cloneDirectives = require('../parser/clone-directives');\n\n\n/**\n * 清洗条件 aNode，返回纯净无条件指令的 aNode\n *\n * @param {ANode} aNode 条件节点对象\n * @return {ANode}\n */\nfunction rinseCondANode(aNode) {\n    var clearANode = createANode({\n        children: aNode.children,\n        props: aNode.props,\n        events: aNode.events,\n        tagName: aNode.tagName,\n        vars: aNode.vars,\n        hotspot: aNode.hotspot,\n        directives: cloneDirectives(aNode.directives, {\n            'if': 1,\n            'else': 1,\n            'elif': 1\n        })\n    });\n\n    return clearANode;\n}\n\n// exports = module.exports = rinseCondANode;\n\n\n/**\n * @file if 指令节点类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var each = require('../util/each');\n// var guid = require('../util/guid');\n// var insertBefore = require('../browser/insert-before');\n// var evalExpr = require('../runtime/eval-expr');\n// var NodeType = require('./node-type');\n// var rinseCondANode = require('./rinse-cond-anode');\n// var createNode = require('./create-node');\n// var createReverseNode = require('./create-reverse-node');\n// var nodeOwnCreateStump = require('./node-own-create-stump');\n// var elementUpdateChildren = require('./element-update-children');\n// var nodeOwnSimpleDispose = require('./node-own-simple-dispose');\n\n/**\n * if 指令节点类\n *\n * @param {Object} aNode 抽象节点\n * @param {Component} owner 所属组件环境\n * @param {Model=} scope 所属数据环境\n * @param {Node} parent 父亲节点\n * @param {DOMChildrenWalker?} reverseWalker 子元素遍历对象\n */\nfunction IfNode(aNode, owner, scope, parent, reverseWalker) {\n    this.aNode = aNode;\n    this.owner = owner;\n    this.scope = scope;\n    this.parent = parent;\n    this.parentComponent = parent.nodeType === NodeType.CMPT\n        ? parent\n        : parent.parentComponent;\n\n    this.id = guid();\n    this.children = [];\n\n    this.cond = this.aNode.directives['if'].value; // eslint-disable-line dot-notation\n\n    // #[begin] reverse\n    if (reverseWalker) {\n        if (evalExpr(this.cond, this.scope, this.owner)) {\n            this.elseIndex = -1;\n            this.children[0] = createReverseNode(\n                rinseCondANode(aNode),\n                reverseWalker,\n                this\n            );\n        }\n        else {\n            var me = this;\n            each(aNode.elses, function (elseANode, index) {\n                var elif = elseANode.directives.elif;\n\n                if (!elif || elif && evalExpr(elif.value, me.scope, me.owner)) {\n                    me.elseIndex = index;\n                    me.children[0] = createReverseNode(\n                        rinseCondANode(elseANode),\n                        reverseWalker,\n                        me\n                    );\n                    return false;\n                }\n            });\n        }\n\n        this._create();\n        insertBefore(this.el, reverseWalker.target, reverseWalker.current);\n    }\n    // #[end]\n}\n\nIfNode.prototype.nodeType = NodeType.IF;\n\nIfNode.prototype._create = nodeOwnCreateStump;\nIfNode.prototype.dispose = nodeOwnSimpleDispose;\n\nIfNode.prototype.attach = function (parentEl, beforeEl) {\n    var me = this;\n    var elseIndex;\n    var child;\n\n    if (evalExpr(this.cond, this.scope, this.owner)) {\n        child = createNode(rinseCondANode(me.aNode), me);\n        elseIndex = -1;\n    }\n    else {\n        each(me.aNode.elses, function (elseANode, index) {\n            var elif = elseANode.directives.elif;\n\n            if (!elif || elif && evalExpr(elif.value, me.scope, me.owner)) {\n                child = createNode(rinseCondANode(elseANode), me);\n                elseIndex = index;\n                return false;\n            }\n        });\n    }\n\n    if (child) {\n        me.children[0] = child;\n        child.attach(parentEl, beforeEl);\n        me.elseIndex = elseIndex;\n    }\n\n\n    this._create();\n    insertBefore(this.el, parentEl, beforeEl);\n};\n\n\n/**\n * 视图更新函数\n *\n * @param {Array} changes 数据变化信息\n */\nIfNode.prototype._update = function (changes) {\n    var me = this;\n    var childANode = me.aNode;\n    var elseIndex;\n\n    if (evalExpr(this.cond, this.scope, this.owner)) {\n        elseIndex = -1;\n    }\n    else {\n        each(me.aNode.elses, function (elseANode, index) {\n            var elif = elseANode.directives.elif;\n\n            if (elif && evalExpr(elif.value, me.scope, me.owner) || !elif) {\n                elseIndex = index;\n                childANode = elseANode;\n                return false;\n            }\n        });\n    }\n\n    if (elseIndex === me.elseIndex) {\n        elementUpdateChildren(me, changes);\n    }\n    else {\n        var child = me.children[0];\n        me.children = [];\n        if (child) {\n            child._ondisposed = newChild;\n            child.dispose();\n        }\n        else {\n            newChild();\n        }\n\n        me.elseIndex = elseIndex;\n    }\n\n    function newChild() {\n        if (typeof elseIndex !== 'undefined') {\n            var child = createNode(rinseCondANode(childANode), me);\n            // var parentEl = getNodeStumpParent(me);\n            child.attach(me.el.parentNode, me.el);\n\n            me.children[0] = child;\n        }\n    }\n};\n\n// exports = module.exports = IfNode;\n\n\n/**\n * @file template 节点类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var each = require('../util/each');\n// var guid = require('../util/guid');\n// var insertBefore = require('../browser/insert-before');\n// var NodeType = require('./node-type');\n// var LifeCycle = require('./life-cycle');\n// var nodeDispose = require('./node-dispose');\n// var createReverseNode = require('./create-reverse-node');\n// var elementDisposeChildren = require('./element-dispose-children');\n// var elementOwnToPhase = require('./element-own-to-phase');\n// var elementUpdateChildren = require('./element-update-children');\n// var nodeOwnOnlyChildrenAttach = require('./node-own-only-children-attach');\n\n/**\n * template 节点类\n *\n * @param {Object} aNode 抽象节点\n * @param {Component} owner 所属组件环境\n * @param {Model=} scope 所属数据环境\n * @param {Node} parent 父亲节点\n * @param {DOMChildrenWalker?} reverseWalker 子元素遍历对象\n */\nfunction TemplateNode(aNode, owner, scope, parent, reverseWalker) {\n    this.aNode = aNode;\n    this.owner = owner;\n    this.scope = scope;\n    this.parent = parent;\n    this.parentComponent = parent.nodeType === NodeType.CMPT\n        ? parent\n        : parent.parentComponent;\n\n    this.id = guid();\n    this.lifeCycle = LifeCycle.start;\n    this.children = [];\n\n    // #[begin] reverse\n    if (reverseWalker) {\n        this.sel = document.createComment(this.id);\n        insertBefore(this.sel, reverseWalker.target, reverseWalker.current);\n\n        var me = this;\n        each(this.aNode.children, function (aNodeChild) {\n            me.children.push(createReverseNode(aNodeChild, reverseWalker, me));\n        });\n\n        this.el = document.createComment(this.id);\n        insertBefore(this.el, reverseWalker.target, reverseWalker.current);\n\n        this._toPhase('attached');\n    }\n    // #[end]\n}\n\n\n\nTemplateNode.prototype.nodeType = NodeType.TPL;\n\nTemplateNode.prototype.attach = nodeOwnOnlyChildrenAttach;\n\n/**\n * 销毁释放\n *\n * @param {boolean=} noDetach 是否不要把节点从dom移除\n * @param {boolean=} noTransition 是否不显示过渡动画效果\n */\nTemplateNode.prototype.dispose = function (noDetach, noTransition) {\n    elementDisposeChildren(this, noDetach, noTransition);\n    nodeDispose(this);\n};\n\n\nTemplateNode.prototype._toPhase = elementOwnToPhase;\n\n/**\n * 视图更新函数\n *\n * @param {Array} changes 数据变化信息\n */\nTemplateNode.prototype._update = function (changes) {\n    elementUpdateChildren(this, changes);\n};\n\n// exports = module.exports = TemplateNode;\n\n\n/**\n * @file 对元素的子节点进行反解\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var each = require('../util/each');\n// var DOMChildrenWalker = require('./dom-children-walker');\n// var createReverseNode = require('./create-reverse-node');\n\n// #[begin] reverse\n\n/**\n * 对元素的子节点进行反解\n *\n * @param {Object} element 元素\n */\nfunction reverseElementChildren(element) {\n    var htmlDirective = element.aNode.directives.html;\n\n    if (!htmlDirective) {\n        var reverseWalker = new DOMChildrenWalker(element.el);\n\n        each(element.aNode.children, function (aNodeChild) {\n            element.children.push(createReverseNode(aNodeChild, reverseWalker, element));\n        });\n    }\n}\n// #[end]\n\n// exports = module.exports = reverseElementChildren;\n\n\n/**\n * @file 处理元素的属性操作\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var getPropHandler = require('./get-prop-handler');\n\n/**\n * 处理元素属性操作\n *\n * @param {Object} element 元素对象\n * @param {*} value 属性值\n * @param {Object} prop 属性信息对象\n */\nfunction handleProp(element, value, prop) {\n    var name = prop.name;\n    getPropHandler(element.tagName, name).prop(element.el, value, name, element, prop);\n}\n\n// exports = module.exports = handleProp;\n\n\n/**\n * @file 创建节点对应的 HTMLElement 主元素\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var evalExpr = require('../runtime/eval-expr');\n// var createEl = require('../browser/create-el');\n// var handleProp = require('./handle-prop');\n// var LifeCycle = require('./life-cycle');\n// var NodeType = require('./node-type');\n\nvar emptyPropWhenCreate = {\n    'class': 1,\n    'style': 1,\n    'id': 1\n};\n\n/**\n * 创建节点对应的 HTMLElement 主元素\n */\nfunction elementOwnCreate() {\n    if (!this.lifeCycle.created) {\n        this.lifeCycle = LifeCycle.painting;\n\n        var isComponent = this.nodeType === NodeType.CMPT;\n        var sourceNode = this.aNode.hotspot.sourceNode;\n        var props = this.aNode.props;\n\n        if (sourceNode) {\n            this.el = sourceNode.cloneNode();\n            props = this.aNode.hotspot.dynamicProps;\n        }\n        else {\n            this.el = createEl(this.tagName);\n        }\n\n        for (var i = 0, l = props.length; i < l; i++) {\n            var prop = props[i];\n            var value = isComponent\n                ? evalExpr(prop.expr, this.data, this)\n                : evalExpr(prop.expr, this.scope, this.owner);\n\n            if (value || !emptyPropWhenCreate[prop.name]) {\n                handleProp(this, value, prop);\n            }\n        }\n\n        this._toPhase('created');\n    }\n}\n\n// exports = module.exports = elementOwnCreate;\n\n\n/**\n * @file 将元素attach到页面\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var createNode = require('./create-node');\n// var evalExpr = require('../runtime/eval-expr');\n// var insertBefore = require('../browser/insert-before');\n\n/**\n * 将元素attach到页面\n *\n * @param {Object} element 元素节点\n * @param {HTMLElement} parentEl 要添加到的父元素\n * @param {HTMLElement＝} beforeEl 要添加到哪个元素之前\n */\nfunction elementAttach(element, parentEl, beforeEl) {\n    element._create();\n    insertBefore(element.el, parentEl, beforeEl);\n\n    if (!element._contentReady) {\n        var htmlDirective = element.aNode.directives.html;\n\n        if (htmlDirective) {\n            element.el.innerHTML = evalExpr(htmlDirective.value, element.scope, element.owner);\n        }\n        else {\n            var aNodeChildren = element.aNode.children;\n            for (var i = 0; i < aNodeChildren.length; i++) {\n                var child = createNode(aNodeChildren[i], element);\n                element.children.push(child);\n                child.attach(element.el);\n            }\n        }\n\n        element._contentReady = 1;\n    }\n}\n\n\n// exports = module.exports = elementAttach;\n\n\n/**\n * @file 将元素attach到页面\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var elementAttach = require('./element-attach');\n\n/**\n * 将元素attach到页面\n *\n * @param {HTMLElement} parentEl 要添加到的父元素\n * @param {HTMLElement＝} beforeEl 要添加到哪个元素之前\n */\nfunction elementOwnAttach(parentEl, beforeEl) {\n    if (!this.lifeCycle.attached) {\n        elementAttach(this, parentEl, beforeEl);\n        this._attached();\n    }\n}\n\n// exports = module.exports = elementOwnAttach;\n\n\n/**\n * @file 获取 element 的 transition 控制对象\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var evalArgs = require('../runtime/eval-args');\n// var findMethod = require('../runtime/find-method');\n// var NodeType = require('./node-type');\n\n/**\n * 获取 element 的 transition 控制对象\n *\n * @param {Object} element 元素\n * @return {Object?}\n */\nfunction elementGetTransition(element) {\n    var aNode = element.nodeType === NodeType.CMPT ? element.givenANode : element.aNode;\n    var directive = aNode && aNode.directives.transition;\n    var owner = element.owner;\n\n    var transition;\n    if (directive && owner) {\n        transition = findMethod(owner, directive.value.name);\n\n        if (typeof transition === 'function') {\n            transition = transition.apply(\n                owner,\n                evalArgs(directive.value.args, element.scope, owner)\n            );\n        }\n    }\n\n    return transition || element.transition;\n}\n\n// exports = module.exports = elementGetTransition;\n\n\n/**\n * @file 元素节点执行leave行为\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var elementGetTransition = require('./element-get-transition');\n\n\n/**\n * 元素节点执行leave行为\n *\n * @param {Object} element 元素\n */\nfunction elementLeave(element) {\n    var lifeCycle = element.lifeCycle;\n    if (lifeCycle.leaving) {\n        return;\n    }\n\n    if (element.disposeNoTransition) {\n        element._doneLeave();\n    }\n    else {\n        var transition = elementGetTransition(element);\n\n        if (transition && transition.leave) {\n            element._toPhase('leaving');\n            transition.leave(element.el, function () {\n                element._doneLeave();\n            });\n        }\n        else {\n            element._doneLeave();\n        }\n    }\n}\n\n// exports = module.exports = elementLeave;\n\n\n/**\n * @file 将元素从页面上移除\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var elementLeave = require('./element-leave');\n\n/**\n * 将元素从页面上移除\n */\nfunction elementOwnDetach() {\n    elementLeave(this);\n}\n\n\n// exports = module.exports = elementOwnDetach;\n\n\n/**\n * @file 销毁释放元素\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var elementLeave = require('./element-leave');\n\n/**\n * 销毁释放元素\n *\n * @param {boolean=} noDetach 是否不要把节点从dom移除\n * @param {boolean=} noTransition 是否不显示过渡动画效果\n */\nfunction elementOwnDispose(noDetach, noTransition) {\n    this.leaveDispose = 1;\n    this.disposeNoDetach = noDetach;\n    this.disposeNoTransition = noTransition;\n\n    elementLeave(this);\n}\n\n// exports = module.exports = elementOwnDispose;\n\n\n/**\n * @file 为元素的 el 绑定事件\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var on = require('../browser/on');\n\n/**\n * 为元素的 el 绑定事件\n *\n * @param {string} name 事件名\n * @param {Function} listener 监听器\n * @param {boolean} capture 是否是捕获阶段触发\n */\nfunction elementOwnOnEl(name, listener, capture) {\n    if (typeof listener === 'function') {\n        capture = !!capture;\n        this._elFns.push([name, listener, capture]);\n        on(this.el, name, listener, capture);\n    }\n}\n\n// exports = module.exports = elementOwnOnEl;\n\n\n/**\n * @file  事件绑定不存在的 warning\n * @author varsha(wangshuonpu@gmail.com)\n */\n\n// var each = require('../util/each');\n\n// #[begin] error\n/**\n * 事件绑定不存在的 warning\n *\n * @param {Object} eventBind 事件绑定对象\n * @param {Component} owner 所属的组件对象\n */\nfunction warnEventListenMethod(eventBind, owner) {\n    var valid = true;\n    var method = owner;\n    each(eventBind.expr.name.paths, function (path) {\n        if (!path.value) {\n            return false;\n        }\n\n        method = method[path.value];\n        valid = !!method;\n        return valid;\n    });\n\n    if (!valid) {\n        var paths = [];\n        each(eventBind.expr.name.paths, function (path) {\n            paths.push(path.value);\n        });\n        var message = '[SAN WARNING] ' + eventBind.name + ' listen fail,\"' + paths.join('.') + '\" not exist';\n\n        /* eslint-disable no-console */\n        if (typeof console === 'object' && console.warn) {\n            console.warn(message);\n        }\n        else {\n            throw new Error(message);\n        }\n        /* eslint-enable no-console */\n    }\n}\n// #[end]\n\n// exports = module.exports = warnEventListenMethod;\n\n\n/**\n * @file 完成元素 attached 后的行为\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var bind = require('../util/bind');\n// var empty = require('../util/empty');\n// var isBrowser = require('../browser/is-browser');\n// var trigger = require('../browser/trigger');\n// var NodeType = require('./node-type');\n// var elementGetTransition = require('./element-get-transition');\n// var eventDeclarationListener = require('./event-declaration-listener');\n// var getPropHandler = require('./get-prop-handler');\n// var warnEventListenMethod = require('./warn-event-listen-method');\n\n/**\n * 双绑输入框CompositionEnd事件监听函数\n *\n * @inner\n */\nfunction inputOnCompositionEnd() {\n    if (!this.composing) {\n        return;\n    }\n\n    this.composing = 0;\n\n    trigger(this, 'input');\n}\n\n/**\n * 双绑输入框CompositionStart事件监听函数\n *\n * @inner\n */\nfunction inputOnCompositionStart() {\n    this.composing = 1;\n}\n\nfunction xPropOutputer(xProp, data) {\n    getPropHandler(this.tagName, xProp.name).output(this, xProp, data);\n}\n\nfunction inputXPropOutputer(element, xProp, data) {\n    var outputer = bind(xPropOutputer, element, xProp, data);\n    return function (e) {\n        if (!this.composing) {\n            outputer(e);\n        }\n    };\n}\n\n/**\n * 完成元素 attached 后的行为\n *\n * @param {Object} element 元素节点\n */\nfunction elementOwnAttached() {\n    this._toPhase('created');\n\n    var isComponent = this.nodeType === NodeType.CMPT;\n    var data = isComponent ? this.data : this.scope;\n\n    /* eslint-disable no-redeclare */\n\n    // 处理自身变化时双向绑定的逻辑\n    var xProps = this.aNode.hotspot.xProps;\n    for (var i = 0, l = xProps.length; i < l; i++) {\n        var xProp = xProps[i];\n\n        switch (xProp.name) {\n            case 'value':\n                switch (this.tagName) {\n                    case 'input':\n                    case 'textarea':\n                        if (isBrowser && window.CompositionEvent) {\n                            this._onEl('change', inputOnCompositionEnd);\n                            this._onEl('compositionstart', inputOnCompositionStart);\n                            this._onEl('compositionend', inputOnCompositionEnd);\n                        }\n\n                        this._onEl(\n                            ('oninput' in this.el) ? 'input' : 'propertychange',\n                            inputXPropOutputer(this, xProp, data)\n                        );\n\n                        break;\n\n                    case 'select':\n                        this._onEl('change', bind(xPropOutputer, this, xProp, data));\n                        break;\n                }\n                break;\n\n            case 'checked':\n                switch (this.tagName) {\n                    case 'input':\n                        switch (this.el.type) {\n                            case 'checkbox':\n                            case 'radio':\n                                this._onEl('click', bind(xPropOutputer, this, xProp, data));\n                        }\n                }\n                break;\n        }\n    }\n\n    // bind events\n    var events = isComponent\n        ? this.aNode.events.concat(this.nativeEvents)\n        : this.aNode.events;\n\n    for (var i = 0, l = events.length; i < l; i++) {\n        var eventBind = events[i];\n        var owner = isComponent ? this : this.owner;\n\n        // 判断是否是nativeEvent，下面的warn方法和事件绑定都需要\n        // 依此指定eventBind.expr.name位于owner还是owner.owner上\n        if (eventBind.modifier.native) {\n            owner = owner.owner;\n            data = this.scope || owner.data;\n        }\n\n        // #[begin] error\n        warnEventListenMethod(eventBind, owner);\n        // #[end]\n\n        this._onEl(\n            eventBind.name,\n            bind(\n                eventDeclarationListener,\n                owner,\n                eventBind,\n                0,\n                data\n            ),\n            eventBind.modifier.capture\n        );\n    }\n\n    this._toPhase('attached');\n\n\n    if (this._isInitFromEl) {\n        this._isInitFromEl = false;\n    }\n    else {\n        var transition = elementGetTransition(this);\n        if (transition && transition.enter) {\n            transition.enter(this.el, empty);\n        }\n    }\n}\n\n// exports = module.exports = elementOwnAttached;\n\n\n/**\n * @file 销毁元素节点\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var un = require('../browser/un');\n// var removeEl = require('../browser/remove-el');\n// var elementDisposeChildren = require('./element-dispose-children');\n// var nodeDispose = require('./node-dispose');\n\n/**\n * 销毁元素节点\n *\n * @param {Object} element 要销毁的元素节点\n * @param {Object=} options 销毁行为的参数\n */\nfunction elementDispose(element) {\n    elementDisposeChildren(element, 1, 1);\n\n    // el 事件解绑\n    var len = element._elFns.length;\n    while (len--) {\n        var fn = element._elFns[len];\n        un(element.el, fn[0], fn[1], fn[2]);\n    }\n    element._elFns = null;\n\n\n    // 如果没有parent，说明是一个root component，一定要从dom树中remove\n    if (!element.disposeNoDetach || !element.parent) {\n        removeEl(element.el);\n    }\n\n    if (element._toPhase) {\n        element._toPhase('detached');\n    }\n\n    nodeDispose(element);\n}\n\n\n// exports = module.exports = elementDispose;\n\n\n/**\n * @file 初始化 element 节点的 tagName 处理\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ieOldThan9 = require('../browser/ie-old-than-9');\n\n/**\n * 初始化 element 节点的 tagName 处理\n *\n * @param {Object} node 节点对象\n */\nfunction elementInitTagName(node) {\n    node.tagName = node.tagName || node.aNode.tagName || 'div';\n\n    // #[begin] allua\n    // ie8- 不支持innerHTML输出自定义标签\n    if (ieOldThan9 && node.tagName.indexOf('-') > 0) {\n        node.tagName = 'div';\n    }\n    // #[end]\n}\n\n\n// exports = module.exports = elementInitTagName;\n\n\n/**\n * @file 给 devtool 发通知消息\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var isBrowser = require('../browser/is-browser');\n\n// #[begin] devtool\nvar san4devtool;\n\n/**\n * 给 devtool 发通知消息\n *\n * @param {string} name 消息名称\n * @param {*} arg 消息参数\n */\nfunction emitDevtool(name, arg) {\n    if (isBrowser && san4devtool && san4devtool.debug && window.__san_devtool__) {\n        window.__san_devtool__.emit(name, arg);\n    }\n}\n\nemitDevtool.start = function (main) {\n    san4devtool = main;\n    emitDevtool('san', main);\n};\n// #[end]\n\n// exports = module.exports = emitDevtool;\n\n\n/**\n * @file 组件类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var bind = require('../util/bind');\n// var each = require('../util/each');\n// var guid = require('../util/guid');\n// var extend = require('../util/extend');\n// var nextTick = require('../util/next-tick');\n// var emitDevtool = require('../util/emit-devtool');\n// var ExprType = require('../parser/expr-type');\n// var parseExpr = require('../parser/parse-expr');\n// var createAccessor = require('../parser/create-accessor');\n// var postProp = require('../parser/post-prop');\n// var removeEl = require('../browser/remove-el');\n// var Data = require('../runtime/data');\n// var evalExpr = require('../runtime/eval-expr');\n// var changeExprCompare = require('../runtime/change-expr-compare');\n// var compileComponent = require('./compile-component');\n// var componentPreheat = require('./component-preheat');\n// var LifeCycle = require('./life-cycle');\n// var getANodeProp = require('./get-a-node-prop');\n// var isDataChangeByElement = require('./is-data-change-by-element');\n// var eventDeclarationListener = require('./event-declaration-listener');\n// var reverseElementChildren = require('./reverse-element-children');\n// var camelComponentBinds = require('./camel-component-binds');\n// var NodeType = require('./node-type');\n// var elementInitTagName = require('./element-init-tag-name');\n// var elementOwnAttached = require('./element-own-attached');\n// var elementDispose = require('./element-dispose');\n// var elementUpdateChildren = require('./element-update-children');\n// var elementOwnOnEl = require('./element-own-on-el');\n// var elementOwnCreate = require('./element-own-create');\n// var elementOwnAttach = require('./element-own-attach');\n// var elementOwnDetach = require('./element-own-detach');\n// var elementOwnDispose = require('./element-own-dispose');\n// var warnEventListenMethod = require('./warn-event-listen-method');\n// var elementDisposeChildren = require('./element-dispose-children');\n// var elementAttach = require('./element-attach');\n// var handleProp = require('./handle-prop');\n// var createDataTypesChecker = require('../util/create-data-types-checker');\n\n\n\n/**\n * 组件类\n *\n * @class\n * @param {Object} options 初始化参数\n */\nfunction Component(options) { // eslint-disable-line\n    options = options || {};\n\n    this.lifeCycle = LifeCycle.start;\n    this.children = [];\n    this._elFns = [];\n    this.listeners = {};\n    this.slotChildren = [];\n\n    var clazz = this.constructor;\n\n    this.filters = this.filters || clazz.filters || {};\n    this.computed = this.computed || clazz.computed || {};\n    this.messages = this.messages || clazz.messages || {};\n    this.subTag = options.subTag;\n\n    // compile\n    compileComponent(clazz);\n    componentPreheat(clazz);\n\n    var me = this;\n    var protoANode = clazz.prototype.aNode;\n\n    me.givenANode = options.aNode;\n    me.givenNamedSlotBinds = [];\n    me.givenSlots = {\n        named: {}\n    };\n\n    this.owner = options.owner;\n    this.scope = options.scope;\n    this.el = options.el;\n\n    var parent = options.parent;\n    if (parent) {\n        this.parent = parent;\n        this.parentComponent = parent.nodeType === NodeType.CMPT\n            ? parent\n            : parent && parent.parentComponent;\n    }\n\n    this.id = guid();\n\n    // #[begin] reverse\n    if (this.el) {\n        var firstCommentNode = this.el.firstChild;\n        if (firstCommentNode.nodeType === 3) {\n            firstCommentNode = firstCommentNode.nextSibling;\n        }\n\n        if (firstCommentNode && firstCommentNode.nodeType === 8) {\n            var stumpMatch = firstCommentNode.data.match(/^\\s*s-data:([\\s\\S]+)?$/);\n            if (stumpMatch) {\n                var stumpText = stumpMatch[1];\n\n                // fill component data\n                options.data = (new Function(\n                    'return ' + stumpText.replace(/^[\\s\\n]*/, '')\n                ))();\n\n                if (firstCommentNode.previousSibling) {\n                    removeEl(firstCommentNode.previousSibling);\n                }\n                removeEl(firstCommentNode);\n            }\n        }\n    }\n    // #[end]\n\n    // native事件数组\n    this.nativeEvents = [];\n\n    if (this.givenANode) {\n        // 组件运行时传入的结构，做slot解析\n        this._createGivenSlots();\n\n        each(this.givenANode.events, function (eventBind) {\n            // 保存当前实例的native事件，下面创建aNode时候做合并\n            if (eventBind.modifier.native) {\n                me.nativeEvents.push(eventBind);\n                return;\n            }\n\n            // #[begin] error\n            warnEventListenMethod(eventBind, options.owner);\n            // #[end]\n\n            me.on(\n                eventBind.name,\n                bind(eventDeclarationListener, options.owner, eventBind, 1, options.scope),\n                eventBind\n            );\n        });\n\n        this.tagName = protoANode.tagName || me.givenANode.tagName;\n        this.binds = camelComponentBinds(this.givenANode.props);\n    }\n\n    this._toPhase('compiled');\n\n    // init data\n    this.data = new Data(\n        extend(\n            typeof this.initData === 'function' && this.initData() || {},\n            options.data\n        )\n    );\n\n    elementInitTagName(this);\n\n    each(this.binds, function (bind) {\n        postProp(bind);\n\n        if (me.scope) {\n            var value = evalExpr(bind.expr, me.scope, me.owner);\n            if (typeof value !== 'undefined') {\n                // See: https://github.com/ecomfe/san/issues/191\n                me.data.set(bind.name, value);\n            }\n        }\n    });\n\n    // #[begin] error\n    // 在初始化 + 数据绑定后，开始数据校验\n    // NOTE: 只在开发版本中进行属性校验\n    var dataTypes = this.dataTypes || clazz.dataTypes;\n    if (dataTypes) {\n        var dataTypeChecker = createDataTypesChecker(\n            dataTypes,\n            this.subTag || this.name || clazz.name\n        );\n        this.data.setTypeChecker(dataTypeChecker);\n        this.data.checkDataTypes();\n    }\n    // #[end]\n\n    this.computedDeps = {};\n    /* eslint-disable guard-for-in */\n    for (var expr in this.computed) {\n        if (!this.computedDeps[expr]) {\n            this._calcComputed(expr);\n        }\n    }\n    /* eslint-enable guard-for-in */\n\n    if (!this.dataChanger) {\n        this.dataChanger = bind(this._dataChanger, this);\n        this.data.listen(this.dataChanger);\n    }\n    this._toPhase('inited');\n\n    // #[begin] reverse\n    if (this.el) {\n        reverseElementChildren(this);\n        this._attached();\n    }\n\n    var walker = options.reverseWalker;\n    if (walker) {\n        var currentNode = walker.current;\n        if (currentNode && currentNode.nodeType === 1) {\n            this.el = currentNode;\n            walker.goNext();\n        }\n\n        reverseElementChildren(this);\n\n        this._attached();\n    }\n    // #[end]\n}\n\n\n\nComponent.prototype.getComponentType = function (aNode) {\n    return this.components[aNode.tagName];\n};\n\n/**\n * 初始化创建组件外部传入的插槽对象\n *\n * @protected\n */\nComponent.prototype._createGivenSlots = function () {\n    var me = this;\n    me.givenSlots.named = {};\n\n    // 组件运行时传入的结构，做slot解析\n    me.givenANode && me.scope && each(me.givenANode.children, function (child) {\n        var target;\n\n        var slotBind = !child.textExpr && getANodeProp(child, 'slot');\n        if (slotBind) {\n            !me.givenSlotInited && me.givenNamedSlotBinds.push(slotBind);\n\n            var slotName = evalExpr(slotBind.expr, me.scope, me.owner);\n            target = me.givenSlots.named[slotName];\n            if (!target) {\n                target = me.givenSlots.named[slotName] = [];\n            }\n        }\n        else if (!me.givenSlotInited) {\n            target = me.givenSlots.noname;\n            if (!target) {\n                target = me.givenSlots.noname = [];\n            }\n        }\n\n        target && target.push(child);\n    });\n\n    me.givenSlotInited = true;\n};\n\n/**\n * 类型标识\n *\n * @type {string}\n */\nComponent.prototype.nodeType = NodeType.CMPT;\n\n/**\n * 在下一个更新周期运行函数\n *\n * @param {Function} fn 要运行的函数\n */\nComponent.prototype.nextTick = nextTick;\n\n/* eslint-disable operator-linebreak */\n/**\n * 使节点到达相应的生命周期\n *\n * @protected\n * @param {string} name 生命周期名称\n */\nComponent.prototype._callHook =\nComponent.prototype._toPhase = function (name) {\n    if (!this.lifeCycle[name]) {\n        this.lifeCycle = LifeCycle[name] || this.lifeCycle;\n        if (typeof this[name] === 'function') {\n            this[name]();\n        }\n\n        // 通知devtool\n        // #[begin] devtool\n        emitDevtool('comp-' + name, this);\n        // #[end]\n    }\n};\n/* eslint-enable operator-linebreak */\n\n\n/**\n * 添加事件监听器\n *\n * @param {string} name 事件名\n * @param {Function} listener 监听器\n * @param {string?} declaration 声明式\n */\nComponent.prototype.on = function (name, listener, declaration) {\n    if (typeof listener === 'function') {\n        if (!this.listeners[name]) {\n            this.listeners[name] = [];\n        }\n        this.listeners[name].push({fn: listener, declaration: declaration});\n    }\n};\n\n/**\n * 移除事件监听器\n *\n * @param {string} name 事件名\n * @param {Function=} listener 监听器\n */\nComponent.prototype.un = function (name, listener) {\n    var nameListeners = this.listeners[name];\n    var len = nameListeners && nameListeners.length;\n\n    while (len--) {\n        if (!listener || listener === nameListeners[len].fn) {\n            nameListeners.splice(len, 1);\n        }\n    }\n};\n\n\n/**\n * 派发事件\n *\n * @param {string} name 事件名\n * @param {Object} event 事件对象\n */\nComponent.prototype.fire = function (name, event) {\n    var me = this;\n    each(this.listeners[name], function (listener) {\n        listener.fn.call(me, event);\n    });\n};\n\n/**\n * 计算 computed 属性的值\n *\n * @private\n * @param {string} computedExpr computed表达式串\n */\nComponent.prototype._calcComputed = function (computedExpr) {\n    var computedDeps = this.computedDeps[computedExpr];\n    if (!computedDeps) {\n        computedDeps = this.computedDeps[computedExpr] = {};\n    }\n\n    this.data.set(computedExpr, this.computed[computedExpr].call({\n        data: {\n            get: bind(function (expr) {\n                // #[begin] error\n                if (!expr) {\n                    throw new Error('[SAN ERROR] call get method in computed need argument');\n                }\n                // #[end]\n\n                if (!computedDeps[expr]) {\n                    computedDeps[expr] = 1;\n\n                    if (this.computed[expr]) {\n                        this._calcComputed(expr);\n                    }\n\n                    this.watch(expr, function () {\n                        this._calcComputed(computedExpr);\n                    });\n                }\n\n                return this.data.get(expr);\n            }, this)\n        }\n    }));\n};\n\n/**\n * 派发消息\n * 组件可以派发消息，消息将沿着组件树向上传递，直到遇上第一个处理消息的组件\n *\n * @param {string} name 消息名称\n * @param {*?} value 消息值\n */\nComponent.prototype.dispatch = function (name, value) {\n    var parentComponent = this.parentComponent;\n\n    while (parentComponent) {\n        var receiver = parentComponent.messages[name] || parentComponent.messages['*'];\n        if (typeof receiver === 'function') {\n            receiver.call(\n                parentComponent,\n                {target: this, value: value, name: name}\n            );\n            break;\n        }\n\n        parentComponent = parentComponent.parentComponent;\n    }\n};\n\n/**\n * 获取组件内部的 slot\n *\n * @param {string=} name slot名称，空为default slot\n * @return {Array}\n */\nComponent.prototype.slot = function (name) {\n    var result = [];\n    var me = this;\n\n    function childrenTraversal(children) {\n        each(children, function (child) {\n            if (child.nodeType === NodeType.SLOT && child.owner === me) {\n                if (child.isNamed && child.name === name\n                    || !child.isNamed && !name\n                ) {\n                    result.push(child);\n                }\n            }\n            else {\n                childrenTraversal(child.children);\n            }\n        });\n    }\n\n    childrenTraversal(this.children);\n    return result;\n};\n\n/**\n * 获取带有 san-ref 指令的子组件引用\n *\n * @param {string} name 子组件的引用名\n * @return {Component}\n */\nComponent.prototype.ref = function (name) {\n    var refTarget;\n    var owner = this;\n\n    function childrenTraversal(children) {\n        each(children, function (child) {\n            elementTraversal(child);\n            return !refTarget;\n        });\n    }\n\n    function elementTraversal(element) {\n        var nodeType = element.nodeType;\n        if (nodeType === NodeType.TEXT) {\n            return;\n        }\n\n        if (element.owner === owner) {\n            var ref;\n            switch (element.nodeType) {\n                case NodeType.ELEM:\n                    ref = element.aNode.directives.ref;\n                    if (ref && evalExpr(ref.value, element.scope, owner) === name) {\n                        refTarget = element.el;\n                    }\n                    break;\n\n                case NodeType.CMPT:\n                    ref = element.givenANode.directives.ref;\n                    if (ref && evalExpr(ref.value, element.scope, owner) === name) {\n                        refTarget = element;\n                    }\n            }\n\n            !refTarget && childrenTraversal(element.slotChildren);\n        }\n\n        !refTarget && childrenTraversal(element.children);\n    }\n\n    childrenTraversal(this.children);\n\n    return refTarget;\n};\n\n\n/**\n * 视图更新函数\n *\n * @param {Array?} changes 数据变化信息\n */\nComponent.prototype._update = function (changes) {\n    if (this.lifeCycle.disposed) {\n        return;\n    }\n\n    var me = this;\n\n\n    var needReloadForSlot = false;\n    this._notifyNeedReload = function () {\n        needReloadForSlot = true;\n    };\n\n    if (changes) {\n        each(changes, function (change) {\n            var changeExpr = change.expr;\n\n            each(me.binds, function (bindItem) {\n                var relation;\n                var setExpr = bindItem.name;\n                var updateExpr = bindItem.expr;\n\n                if (!isDataChangeByElement(change, me, setExpr)\n                    && (relation = changeExprCompare(changeExpr, updateExpr, me.scope))\n                ) {\n                    if (relation > 2) {\n                        setExpr = createAccessor(\n                            [\n                                {\n                                    type: ExprType.STRING,\n                                    value: setExpr\n                                }\n                            ].concat(changeExpr.paths.slice(updateExpr.paths.length))\n                        );\n\n                        updateExpr = changeExpr;\n                    }\n\n                    me.data.set(setExpr, evalExpr(updateExpr, me.scope, me.owner), {\n                        target: {\n                            id: me.owner.id\n                        }\n                    });\n                }\n            });\n\n            each(me.givenNamedSlotBinds, function (bindItem) {\n                needReloadForSlot = needReloadForSlot || changeExprCompare(changeExpr, bindItem.expr, me.scope);\n                return !needReloadForSlot;\n            });\n        });\n\n        if (needReloadForSlot) {\n            this._createGivenSlots();\n            this._repaintChildren();\n        }\n        else {\n            var slotChildrenLen = this.slotChildren.length;\n            while (slotChildrenLen--) {\n                var slotChild = this.slotChildren[slotChildrenLen];\n\n                if (slotChild.lifeCycle.disposed) {\n                    this.slotChildren.splice(slotChildrenLen, 1);\n                }\n                else if (slotChild.isInserted) {\n                    slotChild._update(changes, 1);\n                }\n            }\n        }\n    }\n\n    var dataChanges = this.dataChanges;\n    if (dataChanges) {\n        this.dataChanges = null;\n        each(this.aNode.hotspot.dynamicProps, function (prop) {\n            each(dataChanges, function (change) {\n                if (changeExprCompare(change.expr, prop.expr, me.data)\n                    || prop.hintExpr && changeExprCompare(change.expr, prop.hintExpr, me.data)\n                ) {\n                    handleProp(me, evalExpr(prop.expr, me.data, me), prop);\n                    return false;\n                }\n            });\n        });\n\n        elementUpdateChildren(this, dataChanges);\n        if (needReloadForSlot) {\n            this._createGivenSlots();\n            this._repaintChildren();\n        }\n\n        this._toPhase('updated');\n\n        if (this.owner) {\n            this._updateBindxOwner(dataChanges);\n            this.owner._update();\n        }\n    }\n\n    this._notifyNeedReload = null;\n};\n\nComponent.prototype._updateBindxOwner = function (dataChanges) {\n    var me = this;\n\n    if (this.owner) {\n        each(dataChanges, function (change) {\n            each(me.binds, function (bindItem) {\n                var changeExpr = change.expr;\n                if (bindItem.x\n                    && !isDataChangeByElement(change, me.owner)\n                    && changeExprCompare(changeExpr, parseExpr(bindItem.name), me.data)\n                ) {\n                    var updateScopeExpr = bindItem.expr;\n                    if (changeExpr.paths.length > 1) {\n                        updateScopeExpr = createAccessor(\n                            bindItem.expr.paths.concat(changeExpr.paths.slice(1))\n                        );\n                    }\n\n                    me.scope.set(\n                        updateScopeExpr,\n                        evalExpr(changeExpr, me.data, me),\n                        {\n                            target: {\n                                id: me.id,\n                                prop: bindItem.name\n                            }\n                        }\n                    );\n                }\n            });\n        });\n    }\n};\n\n/**\n * 重新绘制组件的内容\n * 当 dynamic slot name 发生变更或 slot 匹配发生变化时，重新绘制\n * 在组件级别重绘有点粗暴，但是能保证视图结果正确性\n */\nComponent.prototype._repaintChildren = function () {\n    elementDisposeChildren(this, 0, 1);\n    this.children = [];\n\n    this._contentReady = 0;\n    this.slotChildren = [];\n    elementAttach(this);\n};\n\n\n/**\n * 组件内部监听数据变化的函数\n *\n * @private\n * @param {Object} change 数据变化信息\n */\nComponent.prototype._dataChanger = function (change) {\n    if (this.lifeCycle.painting || this.lifeCycle.created) {\n        if (!this.dataChanges) {\n            nextTick(this._update, this);\n            this.dataChanges = [];\n        }\n\n        this.dataChanges.push(change);\n    }\n    else if (this.lifeCycle.inited && this.owner) {\n        this._updateBindxOwner([change]);\n    }\n};\n\n\n/**\n * 监听组件的数据变化\n *\n * @param {string} dataName 变化的数据项\n * @param {Function} listener 监听函数\n */\nComponent.prototype.watch = function (dataName, listener) {\n    var dataExpr = parseExpr(dataName);\n\n    this.data.listen(bind(function (change) {\n        if (changeExprCompare(change.expr, dataExpr, this.data)) {\n            listener.call(this, evalExpr(dataExpr, this.data, this), change);\n        }\n    }, this));\n};\n\n/**\n * 组件销毁的行为\n *\n * @param {Object} options 销毁行为的参数\n */\nComponent.prototype.dispose = elementOwnDispose;\n\nComponent.prototype._doneLeave = function () {\n    if (this.leaveDispose) {\n        if (!this.lifeCycle.disposed) {\n            // 这里不用挨个调用 dispose 了，因为 children 释放链会调用的\n            this.slotChildren = null;\n\n            this.data.unlisten();\n            this.dataChanger = null;\n            this.dataChanges = null;\n\n            elementDispose(\n                this,\n                this.disposeNoDetach,\n                this.disposeNoTransition\n            );\n            this.listeners = null;\n\n            this.givenANode = null;\n            this.givenSlots = null;\n            this.givenNamedSlotBinds = null;\n        }\n    }\n    else if (this.lifeCycle.attached) {\n        removeEl(this.el);\n        this._toPhase('detached');\n    }\n};\n\n/**\n * 完成组件 attached 后的行为\n *\n * @param {Object} element 元素节点\n */\nComponent.prototype._attached = elementOwnAttached;\n\nComponent.prototype.attach = elementOwnAttach;\nComponent.prototype.detach = elementOwnDetach;\nComponent.prototype._create = elementOwnCreate;\nComponent.prototype._onEl = elementOwnOnEl;\n\n\n// exports = module.exports = Component;\n\n\n/**\n * @file 创建组件类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var Component = require('./component');\n// var inherits = require('../util/inherits');\n\n/**\n * 创建组件类\n *\n * @param {Object} proto 组件类的方法表\n * @return {Function}\n */\nfunction defineComponent(proto) {\n    // 如果传入一个不是 san component 的 constructor，直接返回不是组件构造函数\n    // 这种场景导致的错误 san 不予考虑\n    if (typeof proto === 'function') {\n        return proto;\n    }\n\n    // #[begin] error\n    if (typeof proto !== 'object') {\n        throw new Error('[SAN FATAL] param must be a plain object.');\n    }\n    // #[end]\n\n    function ComponentClass(option) { // eslint-disable-line\n        Component.call(this, option);\n    }\n\n    ComponentClass.prototype = proto;\n    inherits(ComponentClass, Component);\n\n    return ComponentClass;\n}\n\n// exports = module.exports = defineComponent;\n\n\n/**\n * @file 编译组件类\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var createANode = require('../parser/create-a-node');\n// var parseTemplate = require('../parser/parse-template');\n// var parseText = require('../parser/parse-text');\n// var defineComponent = require('./define-component');\n\n\n/**\n * 编译组件类。预解析template和components\n *\n * @param {Function} ComponentClass 组件类\n */\nfunction compileComponent(ComponentClass) {\n    var proto = ComponentClass.prototype;\n\n    // pre define components class\n    if (!proto.hasOwnProperty('_cmptReady')) {\n        proto.components = ComponentClass.components || proto.components || {};\n        var components = proto.components;\n\n        for (var key in components) { // eslint-disable-line\n            var componentClass = components[key];\n\n            if (typeof componentClass === 'object') {\n                components[key] = defineComponent(componentClass);\n            }\n            else if (componentClass === 'self') {\n                components[key] = ComponentClass;\n            }\n        }\n\n        proto._cmptReady = 1;\n    }\n\n\n    // pre compile template\n    if (!proto.hasOwnProperty('aNode')) {\n        proto.aNode = createANode();\n\n        var tpl = ComponentClass.template || proto.template;\n        if (tpl) {\n            var aNode = parseTemplate(tpl, {\n                trimWhitespace: proto.trimWhitespace || ComponentClass.trimWhitespace,\n                delimiters: proto.delimiters || ComponentClass.delimiters\n            });\n            var firstChild = aNode.children[0];\n\n            // #[begin] error\n            if (aNode.children.length !== 1 || firstChild.textExpr) {\n                throw new Error('[SAN FATAL] template must have a root element.');\n            }\n            // #[end]\n\n            proto.aNode = firstChild;\n            if (firstChild.tagName === 'template') {\n                firstChild.tagName = null;\n            }\n\n            var componentPropExtra = {\n                'class': {name: 'class', expr: parseText('{{class | _class | _sep(\" \")}}')},\n                'style': {name: 'style', expr: parseText('{{style | _style | _sep(\";\")}}')},\n                'id': {name: 'id', expr: parseText('{{id}}')}\n            };\n\n            var len = firstChild.props.length;\n            while (len--) {\n                var prop = firstChild.props[len];\n                var extra = componentPropExtra[prop.name];\n\n                if (extra) {\n                    firstChild.props.splice(len, 1);\n                    componentPropExtra[prop.name] = prop;\n\n                    if (prop.name !== 'id') {\n                        prop.expr.segs.push(extra.expr.segs[0]);\n                        prop.expr.value = null;\n                    }\n                }\n            }\n\n            firstChild.props.push(\n                componentPropExtra['class'], // eslint-disable-line dot-notation\n                componentPropExtra.style,\n                componentPropExtra.id\n            );\n        }\n    }\n}\n\n// exports = module.exports = compileComponent;\n\n\n/**\n * @file 组件预热\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('../parser/expr-type');\n// var each = require('../util/each');\n// var createEl = require('../browser/create-el');\n// var getPropHandler = require('./get-prop-handler');\n// var getANodeProp = require('./get-a-node-prop');\n// var isBrowser = require('../browser/is-browser');\n\n/**\n * 组件预热，分析组件aNode的数据引用等信息\n *\n * @param {Function} ComponentClass 组件类\n */\nfunction componentPreheat(ComponentClass) {\n    var stack = [];\n\n    function recordHotspotData(refs, notContentData) {\n        var len = stack.length;\n        each(stack, function (aNode, index) {\n            if (!notContentData || index !== len - 1) {\n                each(refs, function (ref) {\n                    aNode.hotspot.data[ref] = 1;\n                });\n            }\n        });\n    }\n\n\n    function analyseANodeHotspot(aNode) {\n        if (!aNode.hotspot) {\n            stack.push(aNode);\n\n\n            if (aNode.textExpr) {\n                aNode.hotspot = {data: {}};\n                recordHotspotData(analyseExprDataHotspot(aNode.textExpr));\n            }\n            else {\n                var sourceNode;\n                if (isBrowser && aNode.tagName && !/^(template|slot|select|input|option)$/i.test(aNode.tagName)) {\n                    sourceNode = createEl(aNode.tagName);\n                }\n\n                aNode.hotspot = {\n                    data: {},\n                    dynamicProps: [],\n                    xProps: [],\n                    props: {},\n                    sourceNode: sourceNode\n                };\n\n\n                // === analyse hotspot data: start\n                each(aNode.vars, function (varItem) {\n                    recordHotspotData(analyseExprDataHotspot(varItem.expr));\n                });\n\n                each(aNode.props, function (prop) {\n                    recordHotspotData(analyseExprDataHotspot(prop.expr));\n                });\n\n                /* eslint-disable guard-for-in */\n                for (var key in aNode.directives) {\n                    var directive = aNode.directives[key];\n                    recordHotspotData(analyseExprDataHotspot(directive.value), key !== 'html');\n                }\n                /* eslint-enable guard-for-in */\n\n                each(aNode.elses, function (child) {\n                    analyseANodeHotspot(child);\n                });\n\n                each(aNode.children, function (child) {\n                    analyseANodeHotspot(child);\n                });\n                // === analyse hotspot data: end\n\n\n                // === analyse hotspot props: start\n                each(aNode.props, function (prop, index) {\n                    aNode.hotspot.props[prop.name] = index;\n\n                    if (prop.name === 'id') {\n                        prop.id = true;\n                        aNode.hotspot.idProp = prop;\n                        aNode.hotspot.dynamicProps.push(prop);\n                    }\n                    else if (prop.expr.value != null) {\n                        if (sourceNode) {\n                            getPropHandler(aNode.tagName, prop.name)\n                                .prop(sourceNode, prop.expr.value, prop.name, aNode);\n                        }\n                    }\n                    else {\n                        if (prop.x) {\n                            aNode.hotspot.xProps.push(prop);\n                        }\n                        aNode.hotspot.dynamicProps.push(prop);\n                    }\n                });\n\n                // ie 下，如果 option 没有 value 属性，select.value = xx 操作不会选中 option\n                // 所以没有设置 value 时，默认把 option 的内容作为 value\n                if (aNode.tagName === 'option'\n                    && !getANodeProp(aNode, 'value')\n                    && aNode.children[0]\n                ) {\n                    var valueProp = {\n                        name: 'value',\n                        expr: aNode.children[0].textExpr\n                    };\n                    aNode.props.push(valueProp);\n                    aNode.hotspot.dynamicProps.push(valueProp);\n                    aNode.hotspot.props.value = aNode.props.length - 1;\n                }\n                // === analyse hotspot props: end\n            }\n\n            stack.pop();\n        }\n    }\n\n    analyseANodeHotspot(ComponentClass.prototype.aNode);\n}\n\n/**\n * 分析表达式的数据引用\n *\n * @param {Object} expr 要分析的表达式\n * @return {Array}\n */\nfunction analyseExprDataHotspot(expr) {\n    var refs = [];\n\n    function analyseExprs(exprs) {\n        each(exprs, function (expr) {\n            refs = refs.concat(analyseExprDataHotspot(expr));\n        });\n    }\n\n    switch (expr.type) {\n        case ExprType.ACCESSOR:\n            var paths = expr.paths;\n            refs.push(paths[0].value);\n\n            if (paths.length > 1) {\n                refs.push(paths[0].value + '.' + (paths[1].value || '*'));\n            }\n\n            analyseExprs(paths.slice(1));\n            break;\n\n        case ExprType.UNARY:\n            return analyseExprDataHotspot(expr.expr);\n\n        case ExprType.TEXT:\n        case ExprType.BINARY:\n        case ExprType.TERTIARY:\n            analyseExprs(expr.segs);\n            break;\n\n        case ExprType.INTERP:\n            refs = analyseExprDataHotspot(expr.expr);\n\n            each(expr.filters, function (filter) {\n                analyseExprs(filter.name.paths);\n                analyseExprs(filter.args);\n            });\n\n            break;\n\n    }\n\n    return refs;\n}\n\n// exports = module.exports = componentPreheat;\n\n\n/**\n * @file 将 binds 的 name 从 kebabcase 转换成 camelcase\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var kebab2camel = require('../util/kebab2camel');\n// var each = require('../util/each');\n\n/**\n * 将 binds 的 name 从 kebabcase 转换成 camelcase\n *\n * @param {Array} binds binds集合\n * @return {Array}\n */\nfunction camelComponentBinds(binds) {\n    var result = [];\n    each(binds, function (bind) {\n        result.push({\n            name: kebab2camel(bind.name),\n            expr: bind.expr,\n            x: bind.x,\n            raw: bind.raw\n        });\n    });\n\n    return result;\n}\n\n// exports = module.exports = camelComponentBinds;\n\n\n/**\n * @file 编译源码的 helper 方法集合\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var each = require('../util/each');\n// var ExprType = require('../parser/expr-type');\n\n// #[begin] ssr\n// \n// /**\n//  * 编译源码的 helper 方法集合对象\n//  */\n// var compileExprSource = {\n// \n//     /**\n//      * 字符串字面化\n//      *\n//      * @param {string} source 需要字面化的字符串\n//      * @return {string} 字符串字面化结果\n//      */\n//     stringLiteralize: function (source) {\n//         return '\"'\n//             + source\n//                 .replace(/\\x5C/g, '\\\\\\\\')\n//                 .replace(/\"/g, '\\\\\"')\n//                 .replace(/\\x0A/g, '\\\\n')\n//                 .replace(/\\x09/g, '\\\\t')\n//                 .replace(/\\x0D/g, '\\\\r')\n//                 // .replace( /\\x08/g, '\\\\b' )\n//                 // .replace( /\\x0C/g, '\\\\f' )\n//             + '\"';\n//     },\n// \n//     /**\n//      * 生成数据访问表达式代码\n//      *\n//      * @param {Object?} accessorExpr accessor表达式对象\n//      * @return {string}\n//      */\n//     dataAccess: function (accessorExpr) {\n//         var code = 'componentCtx.data';\n//         if (accessorExpr) {\n//             each(accessorExpr.paths, function (path) {\n//                 if (path.type === ExprType.ACCESSOR) {\n//                     code += '[' + compileExprSource.dataAccess(path) + ']';\n//                     return;\n//                 }\n// \n//                 switch (typeof path.value) {\n//                     case 'string':\n//                         code += '.' + path.value;\n//                         break;\n// \n//                     case 'number':\n//                         code += '[' + path.value + ']';\n//                         break;\n//                 }\n//             });\n//         }\n// \n//         return code;\n//     },\n// \n//     /**\n//      * 生成插值代码\n//      *\n//      * @param {Object} interpExpr 插值表达式对象\n//      * @return {string}\n//      */\n//     interp: function (interpExpr) {\n//         var code = compileExprSource.expr(interpExpr.expr);\n// \n// \n//         each(interpExpr.filters, function (filter) {\n//             code = 'componentCtx.callFilter(\"' + filter.name.paths[0].value + '\", [' + code;\n//             each(filter.args, function (arg) {\n//                 code += ', ' + compileExprSource.expr(arg);\n//             });\n//             code += '])';\n//         });\n// \n//         if (!interpExpr.original) {\n//             return 'escapeHTML(' + code + ')';\n//         }\n// \n//         return code;\n//     },\n// \n//     /**\n//      * 生成文本片段代码\n//      *\n//      * @param {Object} textExpr 文本片段表达式对象\n//      * @return {string}\n//      */\n//     text: function (textExpr) {\n//         if (textExpr.segs.length === 0) {\n//             return '\"\"';\n//         }\n// \n//         var code = '';\n// \n//         each(textExpr.segs, function (seg) {\n//             var segCode = compileExprSource.expr(seg);\n//             code += code ? ' + ' + segCode : segCode;\n//         });\n// \n//         return code;\n//     },\n// \n//     /**\n//      * 二元表达式操作符映射表\n//      *\n//      * @type {Object}\n//      */\n//     binaryOp: {\n//         /* eslint-disable */\n//         43: '+',\n//         45: '-',\n//         42: '*',\n//         47: '/',\n//         60: '<',\n//         62: '>',\n//         76: '&&',\n//         94: '!=',\n//         121: '<=',\n//         122: '==',\n//         123: '>=',\n//         155: '!==',\n//         183: '===',\n//         248: '||'\n//         /* eslint-enable */\n//     },\n// \n//     /**\n//      * 生成表达式代码\n//      *\n//      * @param {Object} expr 表达式对象\n//      * @return {string}\n//      */\n//     expr: function (expr) {\n//         switch (expr.type) {\n//             case ExprType.UNARY:\n//                 return '!' + compileExprSource.expr(expr.expr);\n// \n//             case ExprType.BINARY:\n//                 return compileExprSource.expr(expr.segs[0])\n//                     + compileExprSource.binaryOp[expr.operator]\n//                     + compileExprSource.expr(expr.segs[1]);\n// \n//             case ExprType.TERTIARY:\n//                 return compileExprSource.expr(expr.segs[0])\n//                     + '?' + compileExprSource.expr(expr.segs[1])\n//                     + ':' + compileExprSource.expr(expr.segs[2]);\n// \n//             case ExprType.STRING:\n//                 return compileExprSource.stringLiteralize(expr.literal || expr.value);\n// \n//             case ExprType.NUMBER:\n//                 return expr.value;\n// \n//             case ExprType.BOOL:\n//                 return expr.value ? 'true' : 'false';\n// \n//             case ExprType.ACCESSOR:\n//                 return compileExprSource.dataAccess(expr);\n// \n//             case ExprType.INTERP:\n//                 return compileExprSource.interp(expr);\n// \n//             case ExprType.TEXT:\n//                 return compileExprSource.text(expr);\n//         }\n//     }\n// };\n// #[end]\n\n// exports = module.exports = compileExprSource;\n\n\n/**\n * @file 编译源码的中间buffer类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var each = require('../util/each');\n// var compileExprSource = require('./compile-expr-source');\n\n\n// #[begin] ssr\n// /**\n//  * 编译源码的中间buffer类\n//  *\n//  * @class\n//  */\n// function CompileSourceBuffer() {\n//     this.segs = [];\n// }\n// \n// /**\n//  * 添加原始代码，将原封不动输出\n//  *\n//  * @param {string} code 原始代码\n//  */\n// CompileSourceBuffer.prototype.addRaw = function (code) {\n//     this.segs.push({\n//         type: 'RAW',\n//         code: code\n//     });\n// };\n// \n// /**\n//  * 添加被拼接为html的原始代码\n//  *\n//  * @param {string} code 原始代码\n//  */\n// CompileSourceBuffer.prototype.joinRaw = function (code) {\n//     this.segs.push({\n//         type: 'JOIN_RAW',\n//         code: code\n//     });\n// };\n// \n// /**\n//  * 添加renderer方法的起始源码\n//  */\n// CompileSourceBuffer.prototype.addRendererStart = function () {\n//     this.addRaw('function (data, parentCtx, givenSlots) {');\n//     this.addRaw('var html = \"\";');\n// };\n// \n// /**\n//  * 添加renderer方法的结束源码\n//  */\n// CompileSourceBuffer.prototype.addRendererEnd = function () {\n//     this.addRaw('return html;');\n//     this.addRaw('}');\n// };\n// \n// /**\n//  * 添加被拼接为html的静态字符串\n//  *\n//  * @param {string} str 被拼接的字符串\n//  */\n// CompileSourceBuffer.prototype.joinString = function (str) {\n//     this.segs.push({\n//         str: str,\n//         type: 'JOIN_STRING'\n//     });\n// };\n// \n// /**\n//  * 添加被拼接为html的数据访问\n//  *\n//  * @param {Object?} accessor 数据访问表达式对象\n//  */\n// CompileSourceBuffer.prototype.joinDataStringify = function () {\n//     this.segs.push({\n//         type: 'JOIN_DATA_STRINGIFY'\n//     });\n// };\n// \n// /**\n//  * 添加被拼接为html的表达式\n//  *\n//  * @param {Object} expr 表达式对象\n//  */\n// CompileSourceBuffer.prototype.joinExpr = function (expr) {\n//     this.segs.push({\n//         expr: expr,\n//         type: 'JOIN_EXPR'\n//     });\n// };\n// \n// /**\n//  * 生成编译后代码\n//  *\n//  * @return {string}\n//  */\n// CompileSourceBuffer.prototype.toCode = function () {\n//     var code = [];\n//     var temp = '';\n// \n//     function genStrLiteral() {\n//         if (temp) {\n//             code.push('html += ' + compileExprSource.stringLiteralize(temp) + ';');\n//         }\n// \n//         temp = '';\n//     }\n// \n//     each(this.segs, function (seg) {\n//         if (seg.type === 'JOIN_STRING') {\n//             temp += seg.str;\n//             return;\n//         }\n// \n//         genStrLiteral();\n//         switch (seg.type) {\n//             case 'JOIN_DATA_STRINGIFY':\n//                 code.push('html += stringifier.any(' + compileExprSource.dataAccess() + ');');\n//                 break;\n// \n//             case 'JOIN_EXPR':\n//                 code.push('html += ' + compileExprSource.expr(seg.expr) + ';');\n//                 break;\n// \n//             case 'JOIN_RAW':\n//                 code.push('html += ' + seg.code + ';');\n//                 break;\n// \n//             case 'RAW':\n//                 code.push(seg.code);\n//                 break;\n// \n//         }\n//     });\n// \n//     genStrLiteral();\n// \n//     return code.join('\\n');\n// };\n// \n// #[end]\n\n// exports = module.exports = CompileSourceBuffer;\n\n\n/**\n * @file 将组件编译成 render 方法的 js 源码\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var each = require('../util/each');\n// var guid = require('../util/guid');\n// var parseExpr = require('../parser/parse-expr');\n// var createANode = require('../parser/create-a-node');\n// var cloneDirectives = require('../parser/clone-directives');\n// var autoCloseTags = require('../browser/auto-close-tags');\n// var CompileSourceBuffer = require('./compile-source-buffer');\n// var compileExprSource = require('./compile-expr-source');\n// var rinseCondANode = require('./rinse-cond-anode');\n// var getANodeProp = require('./get-a-node-prop');\n\n// #[begin] ssr\n// \n// /**\n//  * 生成序列化时起始桩的html\n//  *\n//  * @param {string} type 桩类型标识\n//  * @param {string?} content 桩内的内容\n//  * @return {string}\n//  */\n// function serializeStump(type, content) {\n//     return '<!--s-' + type + (content ? ':' + content : '') + '-->';\n// }\n// \n// /**\n//  * 生成序列化时结束桩的html\n//  *\n//  * @param {string} type 桩类型标识\n//  * @return {string}\n//  */\n// function serializeStumpEnd(type) {\n//     return '<!--/s-' + type + '-->';\n// }\n// \n// /**\n//  * element 的编译方法集合对象\n//  *\n//  * @inner\n//  */\n// var elementSourceCompiler = {\n// \n//     /* eslint-disable max-params */\n//     /**\n//      * 编译元素标签头\n//      *\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {string} tagName 标签名\n//      * @param {Array} props 属性列表\n//      * @param {string?} extraProp 额外的属性串\n//      * @param {boolean?} isClose 是否闭合\n//      */\n//     tagStart: function (sourceBuffer, tagName, props, extraProp, isClose) {\n//         sourceBuffer.joinString('<' + tagName);\n//         sourceBuffer.joinString(extraProp || '');\n// \n//         // index list\n//         var propsIndex = {};\n//         each(props, function (prop) {\n//             propsIndex[prop.name] = prop;\n//         });\n// \n//         each(props, function (prop) {\n//             if (prop.name === 'slot') {\n//                 return;\n//             }\n// \n//             if (prop.name === 'value') {\n//                 switch (tagName) {\n//                     case 'textarea':\n//                         return;\n// \n//                     case 'select':\n//                         sourceBuffer.addRaw('$selectValue = '\n//                             + compileExprSource.expr(prop.expr)\n//                             + ' || \"\";'\n//                         );\n//                         return;\n// \n//                     case 'option':\n//                         sourceBuffer.addRaw('$optionValue = '\n//                             + compileExprSource.expr(prop.expr)\n//                             + ';'\n//                         );\n//                         // value\n//                         sourceBuffer.addRaw('if ($optionValue != null) {');\n//                         sourceBuffer.joinRaw('\" value=\\\\\"\" + $optionValue + \"\\\\\"\"');\n//                         sourceBuffer.addRaw('}');\n// \n//                         // selected\n//                         sourceBuffer.addRaw('if ($optionValue === $selectValue) {');\n//                         sourceBuffer.joinString(' selected');\n//                         sourceBuffer.addRaw('}');\n//                         return;\n//                 }\n//             }\n// \n//             switch (prop.name) {\n//                 case 'readonly':\n//                 case 'disabled':\n//                 case 'multiple':\n//                     if (prop.raw === '') {\n//                         sourceBuffer.joinString(' ' + prop.name);\n//                     }\n//                     else {\n//                         sourceBuffer.joinRaw('boolAttrFilter(\"' + prop.name + '\", '\n//                             + compileExprSource.expr(prop.expr)\n//                             + ')'\n//                         );\n//                     }\n//                     break;\n// \n//                 case 'checked':\n//                     if (tagName === 'input') {\n//                         var valueProp = propsIndex.value;\n//                         var valueCode = compileExprSource.expr(valueProp.expr);\n// \n//                         if (valueProp) {\n//                             switch (propsIndex.type.raw) {\n//                                 case 'checkbox':\n//                                     sourceBuffer.addRaw('if (contains('\n//                                         + compileExprSource.expr(prop.expr)\n//                                         + ', '\n//                                         + valueCode\n//                                         + ')) {'\n//                                     );\n//                                     sourceBuffer.joinString(' checked');\n//                                     sourceBuffer.addRaw('}');\n//                                     break;\n// \n//                                 case 'radio':\n//                                     sourceBuffer.addRaw('if ('\n//                                         + compileExprSource.expr(prop.expr)\n//                                         + ' === '\n//                                         + valueCode\n//                                         + ') {'\n//                                     );\n//                                     sourceBuffer.joinString(' checked');\n//                                     sourceBuffer.addRaw('}');\n//                                     break;\n//                             }\n//                         }\n//                     }\n//                     break;\n// \n//                 default:\n//                     if (prop.attr) {\n//                         sourceBuffer.joinString(' ' + prop.attr);\n//                     }\n//                     else {\n//                         sourceBuffer.joinRaw('attrFilter(\"' + prop.name + '\", '\n//                             + (prop.x ? 'escapeHTML(' : '')\n//                             + compileExprSource.expr(prop.expr)\n//                             + (prop.x ? ')' : '')\n//                             + ')'\n//                         );\n//                     }\n//                     break;\n//             }\n//         });\n// \n//         sourceBuffer.joinString(isClose ? '/>' : '>');\n//     },\n//     /* eslint-enable max-params */\n// \n//     /**\n//      * 编译元素闭合\n//      *\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {string} tagName 标签名\n//      */\n//     tagEnd: function (sourceBuffer, tagName) {\n//         if (!autoCloseTags[tagName]) {\n//             sourceBuffer.joinString('</' + tagName + '>');\n//         }\n// \n//         if (tagName === 'select') {\n//             sourceBuffer.addRaw('$selectValue = null;');\n//         }\n// \n//         if (tagName === 'option') {\n//             sourceBuffer.addRaw('$optionValue = null;');\n//         }\n//     },\n// \n//     /**\n//      * 编译元素内容\n//      *\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {ANode} aNode 元素的抽象节点信息\n//      * @param {Component} owner 所属组件实例环境\n//      */\n//     inner: function (sourceBuffer, aNode, owner) {\n//         // inner content\n//         if (aNode.tagName === 'textarea') {\n//             var valueProp = getANodeProp(aNode, 'value');\n//             if (valueProp) {\n//                 sourceBuffer.joinRaw('escapeHTML('\n//                     + compileExprSource.expr(valueProp.expr)\n//                     + ')'\n//                 );\n//             }\n// \n//             return;\n//         }\n// \n//         var htmlDirective = aNode.directives.html;\n//         if (htmlDirective) {\n//             sourceBuffer.joinExpr(htmlDirective.value);\n//         }\n//         else {\n//             /* eslint-disable no-use-before-define */\n//             each(aNode.children, function (aNodeChild) {\n//                 sourceBuffer.addRaw(aNodeCompiler.compile(aNodeChild, sourceBuffer, owner));\n//             });\n//             /* eslint-enable no-use-before-define */\n//         }\n//     }\n// };\n// \n// /**\n//  * ANode 的编译方法集合对象\n//  *\n//  * @inner\n//  */\n// var aNodeCompiler = {\n// \n//     /**\n//      * 编译节点\n//      *\n//      * @param {ANode} aNode 抽象节点\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {Component} owner 所属组件实例环境\n//      * @param {Object} extra 编译所需的一些额外信息\n//      */\n//     compile: function (aNode, sourceBuffer, owner, extra) {\n//         extra = extra || {};\n//         var compileMethod = 'compileElement';\n// \n//         if (aNode.textExpr) {\n//             compileMethod = 'compileText';\n//         }\n//         else if (aNode.directives['if']) { // eslint-disable-line dot-notation\n//             compileMethod = 'compileIf';\n//         }\n//         else if (aNode.directives['for']) { // eslint-disable-line dot-notation\n//             compileMethod = 'compileFor';\n//         }\n//         else if (aNode.tagName === 'slot') {\n//             compileMethod = 'compileSlot';\n//         }\n//         else if (aNode.tagName === 'template') {\n//             compileMethod = 'compileTemplate';\n//         }\n//         else {\n//             var ComponentType = owner.getComponentType(aNode);\n//             if (ComponentType) {\n//                 compileMethod = 'compileComponent';\n//                 extra.ComponentClass = ComponentType;\n//             }\n//         }\n// \n//         aNodeCompiler[compileMethod](aNode, sourceBuffer, owner, extra);\n//     },\n// \n//     /**\n//      * 编译文本节点\n//      *\n//      * @param {ANode} aNode 节点对象\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      */\n//     compileText: function (aNode, sourceBuffer) {\n//         if (aNode.textExpr.original) {\n//             sourceBuffer.joinString(serializeStump('text'));\n//         }\n// \n//         sourceBuffer.joinExpr(aNode.textExpr);\n// \n//         if (aNode.textExpr.original) {\n//             sourceBuffer.joinString(serializeStumpEnd('text'));\n//         }\n//     },\n// \n//     /**\n//      * 编译template节点\n//      *\n//      * @param {ANode} aNode 节点对象\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {Component} owner 所属组件实例环境\n//      */\n//     compileTemplate: function (aNode, sourceBuffer, owner) {\n//         elementSourceCompiler.inner(sourceBuffer, aNode, owner);\n//     },\n// \n//     /**\n//      * 编译 if 节点\n//      *\n//      * @param {ANode} aNode 节点对象\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {Component} owner 所属组件实例环境\n//      */\n//     compileIf: function (aNode, sourceBuffer, owner) {\n//         sourceBuffer.addRaw('(function () {');\n// \n//         sourceBuffer.addRaw('var ifIndex = null;');\n// \n//         // output main if\n//         var ifDirective = aNode.directives['if']; // eslint-disable-line dot-notation\n//         sourceBuffer.addRaw('if (' + compileExprSource.expr(ifDirective.value) + ') {');\n//         sourceBuffer.addRaw(\n//             aNodeCompiler.compile(\n//                 rinseCondANode(aNode),\n//                 sourceBuffer,\n//                 owner\n//             )\n//         );\n//         sourceBuffer.addRaw('}');\n// \n//         // output elif and else\n//         each(aNode.elses, function (elseANode, index) {\n//             var elifDirective = elseANode.directives.elif;\n//             if (elifDirective) {\n//                 sourceBuffer.addRaw('else if (' + compileExprSource.expr(elifDirective.value) + ') {');\n//             }\n//             else {\n//                 sourceBuffer.addRaw('else {');\n//             }\n// \n//             sourceBuffer.addRaw(\n//                 aNodeCompiler.compile(\n//                     rinseCondANode(elseANode),\n//                     sourceBuffer,\n//                     owner\n//                 )\n//             );\n//             sourceBuffer.addRaw('}');\n//         });\n// \n//         sourceBuffer.addRaw('})();');\n//     },\n// \n//     /**\n//      * 编译 for 节点\n//      *\n//      * @param {ANode} aNode 节点对象\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {Component} owner 所属组件实例环境\n//      */\n//     compileFor: function (aNode, sourceBuffer, owner) {\n//         var forElementANode = createANode({\n//             children: aNode.children,\n//             props: aNode.props,\n//             events: aNode.events,\n//             tagName: aNode.tagName,\n//             directives: cloneDirectives(aNode.directives, {\n//                 'for': 1\n//             }),\n//             hotspot: aNode.hotspot\n//         });\n// \n//         var forDirective = aNode.directives['for']; // eslint-disable-line dot-notation\n//         var itemName = forDirective.item.raw;\n//         var indexName = forDirective.index.raw;\n//         var listName = compileExprSource.dataAccess(forDirective.value);\n// \n//         if (indexName === '$index') {\n//             indexName = guid();\n//         }\n// \n//         sourceBuffer.addRaw('for ('\n//             + 'var ' + indexName + ' = 0; '\n//             + indexName + ' < ' + listName + '.length; '\n//             + indexName + '++) {'\n//         );\n//         sourceBuffer.addRaw('componentCtx.data.' + indexName + '=' + indexName + ';');\n//         sourceBuffer.addRaw('componentCtx.data.' + itemName + '= ' + listName + '[' + indexName + '];');\n//         sourceBuffer.addRaw(\n//             aNodeCompiler.compile(\n//                 forElementANode,\n//                 sourceBuffer,\n//                 owner\n//             )\n//         );\n//         sourceBuffer.addRaw('}');\n//     },\n// \n//     /**\n//      * 编译 slot 节点\n//      *\n//      * @param {ANode} aNode 节点对象\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {Component} owner 所属组件实例环境\n//      */\n//     compileSlot: function (aNode, sourceBuffer, owner) {\n//         sourceBuffer.addRaw('(function () {');\n// \n//         sourceBuffer.addRaw('function $defaultSlotRender(componentCtx) {');\n//         sourceBuffer.addRaw('  var html = \"\";');\n//         each(aNode.children, function (aNodeChild) {\n//             sourceBuffer.addRaw(aNodeCompiler.compile(aNodeChild, sourceBuffer, owner));\n//         });\n//         sourceBuffer.addRaw('  return html;');\n//         sourceBuffer.addRaw('}');\n// \n//         sourceBuffer.addRaw('  var $givenSlot = [];');\n// \n//         var nameProp = getANodeProp(aNode, 'name');\n//         if (nameProp) {\n//             sourceBuffer.addRaw('var $slotName = ' + compileExprSource.expr(nameProp.expr) + ';');\n//         }\n//         else {\n//             sourceBuffer.addRaw('var $slotName = null;');\n//         }\n// \n//         sourceBuffer.addRaw('var $ctxGivenSlots = componentCtx.givenSlots;');\n//         sourceBuffer.addRaw('for (var $i = 0; $i < $ctxGivenSlots.length; $i++) {');\n//         sourceBuffer.addRaw('  if ($ctxGivenSlots[$i][1] == $slotName) {');\n//         sourceBuffer.addRaw('    $givenSlot.push($ctxGivenSlots[$i][0]);');\n//         sourceBuffer.addRaw('  }');\n//         sourceBuffer.addRaw('}');\n// \n// \n//         sourceBuffer.addRaw('var $isInserted = $givenSlot.length > 0;');\n//         sourceBuffer.addRaw('if (!$isInserted) { $givenSlot.push($defaultSlotRender); }');\n// \n//         sourceBuffer.addRaw('var $slotCtx = $isInserted ? componentCtx.owner : componentCtx;');\n//         if (aNode.vars) {\n//             sourceBuffer.addRaw('$slotCtx = {data: extend({}, $slotCtx.data), filters: $slotCtx.filters, callFilter: $slotCtx.callFilter};'); // eslint-disable-line\n//             each(aNode.vars, function (varItem) {\n//                 sourceBuffer.addRaw(\n//                     '$slotCtx.data[\"' + varItem.name + '\"] = '\n//                     + compileExprSource.expr(varItem.expr)\n//                     + ';'\n//                 );\n//             });\n//         }\n// \n//         sourceBuffer.addRaw('for (var $renderIndex = 0; $renderIndex < $givenSlot.length; $renderIndex++) {');\n//         sourceBuffer.addRaw('  html += $givenSlot[$renderIndex]($slotCtx);');\n//         sourceBuffer.addRaw('}');\n// \n//         sourceBuffer.addRaw('})();');\n//     },\n// \n//     /**\n//      * 编译普通节点\n//      *\n//      * @param {ANode} aNode 节点对象\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {Component} owner 所属组件实例环境\n//      * @param {Object} extra 编译所需的一些额外信息\n//      */\n//     compileElement: function (aNode, sourceBuffer, owner, extra) {\n//         extra = extra || {};\n//         // if (aNode.tagName === 'option'\n//         //     && !getANodeProp(aNode, 'value')\n//         //     && aNode.children[0]\n//         // ) {\n//         //     aNode.props.push({\n//         //         name: 'value',\n//         //         expr: aNode.children[0].textExpr\n//         //     });\n//         // }\n// \n//         elementSourceCompiler.tagStart(\n//             sourceBuffer,\n//             aNode.tagName,\n//             aNode.props,\n//             extra.prop\n//         );\n// \n//         elementSourceCompiler.inner(sourceBuffer, aNode, owner);\n//         elementSourceCompiler.tagEnd(sourceBuffer, aNode.tagName);\n//     },\n// \n//     /**\n//      * 编译组件节点\n//      *\n//      * @param {ANode} aNode 节点对象\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {Component} owner 所属组件实例环境\n//      * @param {Object} extra 编译所需的一些额外信息\n//      * @param {Function} extra.ComponentClass 对应组件类\n//      */\n//     compileComponent: function (aNode, sourceBuffer, owner, extra) {\n//         if (aNode) {\n//             sourceBuffer.addRaw('var $slotName = null;');\n//             sourceBuffer.addRaw('var $givenSlots = [];');\n//             each(aNode.children, function (child) {\n//                 var slotBind = !child.textExpr && getANodeProp(child, 'slot');\n//                 if (slotBind) {\n//                     sourceBuffer.addRaw('$slotName = ' + compileExprSource.expr(slotBind.expr) + ';');\n//                     sourceBuffer.addRaw('$givenSlots.push([function (componentCtx) {');\n//                     sourceBuffer.addRaw('  var html = \"\";');\n//                     sourceBuffer.addRaw(aNodeCompiler.compile(child, sourceBuffer, owner));\n//                     sourceBuffer.addRaw('  return html;');\n//                     sourceBuffer.addRaw('}, $slotName]);');\n//                 }\n//                 else {\n//                     sourceBuffer.addRaw('$givenSlots.push([function (componentCtx) {');\n//                     sourceBuffer.addRaw('  var html = \"\";');\n//                     sourceBuffer.addRaw(aNodeCompiler.compile(child, sourceBuffer, owner));\n//                     sourceBuffer.addRaw('  return html;');\n//                     sourceBuffer.addRaw('}]);');\n//                 }\n//             });\n//         }\n// \n//         var ComponentClass = extra.ComponentClass;\n//         var component = new ComponentClass({\n//             aNode: aNode,\n//             owner: owner,\n//             subTag: aNode.tagName\n//         });\n// \n//         var givenData = [];\n// \n//         each(component.binds, function (prop) {\n//             givenData.push(\n//                 compileExprSource.stringLiteralize(prop.name)\n//                 + ':'\n//                 + compileExprSource.expr(prop.expr)\n//             );\n//         });\n// \n//         sourceBuffer.addRaw('html += (');\n//         sourceBuffer.addRendererStart();\n//         compileComponentSource(sourceBuffer, component, extra && extra.prop);\n//         sourceBuffer.addRendererEnd();\n//         sourceBuffer.addRaw(')({' + givenData.join(',\\n') + '}, componentCtx, $givenSlots);');\n//         sourceBuffer.addRaw('$givenSlots = null;');\n//     }\n// };\n// /* eslint-disable guard-for-in */\n// \n// /**\n//  * 生成组件 renderer 时 ctx 对象构建的代码\n//  *\n//  * @inner\n//  * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//  * @param {Object} component 组件实例\n//  * @param {string?} extraProp 额外的属性串\n//  */\n// function compileComponentSource(sourceBuffer, component, extraProp) {\n//     sourceBuffer.addRaw(genComponentContextCode(component));\n//     sourceBuffer.addRaw('componentCtx.owner = parentCtx;');\n//     sourceBuffer.addRaw('componentCtx.givenSlots = givenSlots;');\n// \n// \n//     sourceBuffer.addRaw('data = extend(componentCtx.data, data);');\n//     sourceBuffer.addRaw('for (var $i = 0; $i < componentCtx.computedNames.length; $i++) {');\n//     sourceBuffer.addRaw('  var $computedName = componentCtx.computedNames[$i];');\n//     sourceBuffer.addRaw('  data[$computedName] = componentCtx.computed[$computedName]();');\n//     sourceBuffer.addRaw('}');\n// \n//     extraProp = extraProp || '';\n// \n//     var eventDeclarations = [];\n//     for (var key in component.listeners) {\n//         each(component.listeners[key], function (listener) {\n//             if (listener.declaration) {\n//                 eventDeclarations.push(listener.declaration);\n//             }\n//         });\n//     }\n// \n//     elementSourceCompiler.tagStart(\n//         sourceBuffer,\n//         component.tagName,\n//         component.aNode.props,\n//         extraProp\n//     );\n// \n//     if (!component.owner) {\n//         sourceBuffer.joinString('<!--s-data:');\n//         sourceBuffer.joinDataStringify();\n//         sourceBuffer.joinString('-->');\n//     }\n// \n// \n// \n//     elementSourceCompiler.inner(sourceBuffer, component.aNode, component);\n//     elementSourceCompiler.tagEnd(sourceBuffer, component.tagName);\n// }\n// \n// var stringifier = {\n//     obj: function (source) {\n//         var prefixComma;\n//         var result = '{';\n// \n//         for (var key in source) {\n//             if (typeof source[key] === 'undefined') {\n//                 continue;\n//             }\n// \n//             if (prefixComma) {\n//                 result += ',';\n//             }\n//             prefixComma = 1;\n// \n//             result += compileExprSource.stringLiteralize(key) + ':' + stringifier.any(source[key]);\n//         }\n// \n//         return result + '}';\n//     },\n// \n//     arr: function (source) {\n//         var prefixComma;\n//         var result = '[';\n// \n//         each(source, function (value) {\n//             if (prefixComma) {\n//                 result += ',';\n//             }\n//             prefixComma = 1;\n// \n//             result += stringifier.any(value);\n//         });\n// \n//         return result + ']';\n//     },\n// \n//     str: function (source) {\n//         return compileExprSource.stringLiteralize(source);\n//     },\n// \n//     date: function (source) {\n//         return 'new Date(' + source.getTime() + ')';\n//     },\n// \n//     any: function (source) {\n//         switch (typeof source) {\n//             case 'string':\n//                 return stringifier.str(source);\n// \n//             case 'number':\n//                 return '' + source;\n// \n//             case 'boolean':\n//                 return source ? 'true' : 'false';\n// \n//             case 'object':\n//                 if (!source) {\n//                     return null;\n//                 }\n// \n//                 if (source instanceof Array) {\n//                     return stringifier.arr(source);\n//                 }\n// \n//                 if (source instanceof Date) {\n//                     return stringifier.date(source);\n//                 }\n// \n//                 return stringifier.obj(source);\n//         }\n// \n//         throw new Error('Cannot Stringify:' + source);\n//     }\n// };\n// \n// /**\n//  * 生成组件 renderer 时 ctx 对象构建的代码\n//  *\n//  * @inner\n//  * @param {Object} component 组件实例\n//  * @return {string}\n//  */\n// function genComponentContextCode(component) {\n//     var code = ['var componentCtx = {'];\n// \n//     // given anode\n//     code.push('givenSlots: [],');\n// \n//     // filters\n//     code.push('filters: {');\n//     var filterCode = [];\n//     for (var key in component.filters) {\n//         var filter = component.filters[key];\n// \n//         if (typeof filter === 'function') {\n//             filterCode.push(key + ': ' + filter.toString());\n//         }\n//     }\n//     code.push(filterCode.join(','));\n//     code.push('},');\n// \n//     code.push(\n//         'callFilter: function (name, args) {',\n//         '    var filter = this.filters[name] || DEFAULT_FILTERS[name];',\n//         '    if (typeof filter === \"function\") {',\n//         '        return filter.apply(this, args);',\n//         '    }',\n//         '},'\n//     );\n// \n//     /* eslint-disable no-redeclare */\n//     // computed obj\n//     code.push('computed: {');\n//     var computedCode = [];\n//     for (var key in component.computed) {\n//         var computed = component.computed[key];\n// \n//         if (typeof computed === 'function') {\n//             computedCode.push(key + ': '\n//                 + computed.toString().replace(\n//                     /this.data.get\\(([^\\)]+)\\)/g,\n//                     function (match, exprLiteral) {\n//                         var exprStr = (new Function('return ' + exprLiteral))();\n//                         var expr = parseExpr(exprStr);\n// \n//                         return compileExprSource.expr(expr);\n//                     })\n//             );\n//         }\n//     }\n//     code.push(computedCode.join(','));\n//     code.push('},');\n// \n//     // computed names\n//     code.push('computedNames: [');\n//     computedCode = [];\n//     for (var key in component.computed) {\n//         var computed = component.computed[key];\n// \n//         if (typeof computed === 'function') {\n//             computedCode.push('\"' + key + '\"');\n//         }\n//     }\n//     code.push(computedCode.join(','));\n//     code.push('],');\n//     /* eslint-enable no-redeclare */\n// \n//     // data\n//     code.push('data: ' + stringifier.any(component.data.get()) + ',');\n// \n//     // tagName\n//     code.push('tagName: \"' + component.tagName + '\"');\n//     code.push('};');\n// \n//     return code.join('\\n');\n// }\n// \n// /* eslint-enable guard-for-in */\n// \n// /* eslint-disable no-unused-vars */\n// /* eslint-disable fecs-camelcase */\n// \n// /**\n//  * 组件编译的模板函数\n//  *\n//  * @inner\n//  */\n// function componentCompilePreCode() {\n//     var $version = '3.5.7';\n// \n//     function extend(target, source) {\n//         if (source) {\n//             Object.keys(source).forEach(function (key) {\n//                 let value = source[key];\n//                 if (typeof value !== 'undefined') {\n//                     target[key] = value;\n//                 }\n//             });\n//         }\n// \n//         return target;\n//     }\n// \n//     function each(array, iterator) {\n//         if (array && array.length > 0) {\n//             for (var i = 0, l = array.length; i < l; i++) {\n//                 if (iterator(array[i], i) === false) {\n//                     break;\n//                 }\n//             }\n//         }\n//     }\n// \n//     function contains(array, value) {\n//         var result;\n//         each(array, function (item) {\n//             result = item === value;\n//             return !result;\n//         });\n// \n//         return result;\n//     }\n// \n//     var HTML_ENTITY = {\n//         /* jshint ignore:start */\n//         '&': '&amp;',\n//         '<': '&lt;',\n//         '>': '&gt;',\n//         '\"': '&quot;',\n//         /* eslint-disable quotes */\n//         \"'\": '&#39;'\n//         /* eslint-enable quotes */\n//         /* jshint ignore:end */\n//     };\n// \n//     function htmlFilterReplacer(c) {\n//         return HTML_ENTITY[c];\n//     }\n// \n//     function escapeHTML(source) {\n//         if (source == null) {\n//             return '';\n//         }\n// \n//         return String(source).replace(/[&<>\"']/g, htmlFilterReplacer);\n//     }\n// \n//     var DEFAULT_FILTERS = {\n//         url: encodeURIComponent,\n//         _class: function (source) {\n//             if (source instanceof Array) {\n//                 return source.join(' ');\n//             }\n// \n//             return source;\n//         },\n//         _style: function (source) {\n//             if (typeof source === 'object') {\n//                 var result = '';\n//                 if (source) {\n//                     Object.keys(source).forEach(function (key) {\n//                         result += key + ':' + source[key] + ';';\n//                     });\n//                 }\n// \n//                 return result;\n//             }\n// \n//             return source || '';\n//         },\n//         _sep: function (source, sep) {\n//             return source ? sep + source : '';\n//         }\n//     };\n// \n//     function attrFilter(name, value) {\n//         if (value) {\n//             return ' ' + name + '=\"' + value + '\"';\n//         }\n// \n//         return '';\n//     }\n// \n//     function boolAttrFilter(name, value) {\n//         if (value && value !== 'false' && value !== '0') {\n//             return ' ' + name;\n//         }\n// \n//         return '';\n//     }\n// \n//     function stringLiteralize(source) {\n//         return '\"'\n//             + source\n//                 .replace(/\\x5C/g, '\\\\\\\\')\n//                 .replace(/\"/g, '\\\\\"')\n//                 .replace(/\\x0A/g, '\\\\n')\n//                 .replace(/\\x09/g, '\\\\t')\n//                 .replace(/\\x0D/g, '\\\\r')\n//             + '\"';\n//     }\n// \n//     var stringifier = {\n//         obj: function (source) {\n//             var prefixComma;\n//             var result = '{';\n// \n//             Object.keys(source).forEach(function (key) {\n//                 if (typeof source[key] === 'undefined') {\n//                     return;\n//                 }\n// \n//                 if (prefixComma) {\n//                     result += ',';\n//                 }\n//                 prefixComma = 1;\n// \n//                 result += stringLiteralize(key) + ':' + stringifier.any(source[key]);\n//             });\n// \n//             return result + '}';\n//         },\n// \n//         arr: function (source) {\n//             var prefixComma;\n//             var result = '[';\n// \n//             each(source, function (value) {\n//                 if (prefixComma) {\n//                     result += ',';\n//                 }\n//                 prefixComma = 1;\n// \n//                 result += stringifier.any(value);\n//             });\n// \n//             return result + ']';\n//         },\n// \n//         str: function (source) {\n//             return stringLiteralize(source);\n//         },\n// \n//         date: function (source) {\n//             return 'new Date(' + source.getTime() + ')';\n//         },\n// \n//         any: function (source) {\n//             switch (typeof source) {\n//                 case 'string':\n//                     return stringifier.str(source);\n// \n//                 case 'number':\n//                     return '' + source;\n// \n//                 case 'boolean':\n//                     return source ? 'true' : 'false';\n// \n//                 case 'object':\n//                     if (!source) {\n//                         return null;\n//                     }\n// \n//                     if (source instanceof Array) {\n//                         return stringifier.arr(source);\n//                     }\n// \n//                     if (source instanceof Date) {\n//                         return stringifier.date(source);\n//                     }\n// \n//                     return stringifier.obj(source);\n//             }\n// \n//             throw new Error('Cannot Stringify:' + source);\n//         }\n//     };\n// }\n// /* eslint-enable no-unused-vars */\n// /* eslint-enable fecs-camelcase */\n// \n// /**\n//  * 将组件编译成 render 方法的 js 源码\n//  *\n//  * @param {Function} ComponentClass 组件类\n//  * @return {string}\n//  */\n// function compileJSSource(ComponentClass) {\n//     var sourceBuffer = new CompileSourceBuffer();\n// \n//     sourceBuffer.addRendererStart();\n//     sourceBuffer.addRaw(\n//         componentCompilePreCode.toString()\n//             .split('\\n')\n//             .slice(1)\n//             .join('\\n')\n//             .replace(/\\}\\s*$/, '')\n//     );\n// \n//     // 先初始化个实例，让模板编译成 ANode，并且能获得初始化数据\n//     var component = new ComponentClass();\n// \n//     compileComponentSource(sourceBuffer, component);\n//     sourceBuffer.addRendererEnd();\n//     return sourceBuffer.toCode();\n// }\n// #[end]\n\n// exports = module.exports = compileJSSource;\n\n    /* eslint-disable no-unused-vars */\n//     var nextTick = require('./util/next-tick');\n//     var inherits = require('./util/inherits');\n//     var parseTemplate = require('./parser/parse-template');\n//     var parseExpr = require('./parser/parse-expr');\n//     var ExprType = require('./parser/expr-type');\n//     var LifeCycle = require('./view/life-cycle');\n//     var NodeType = require('./view/node-type');\n//     var Component = require('./view/component');\n//     var compileComponent = require('./view/compile-component');\n//     var defineComponent = require('./view/define-component');\n//     var emitDevtool = require('./util/emit-devtool');\n//     var compileJSSource = require('./view/compile-js-source');\n//     var Data = require('./runtime/data');\n//     var evalExpr = require('./runtime/eval-expr');\n//     var DataTypes = require('./util/data-types');\n\n\n    var san = {\n        /**\n         * san版本号\n         *\n         * @type {string}\n         */\n        version: '3.5.7',\n\n        // #[begin] devtool\n        /**\n         * 是否开启调试。开启调试时 devtool 会工作\n         *\n         * @type {boolean}\n         */\n        debug: true,\n        // #[end]\n\n        // #[begin] ssr\n//         /**\n//          * 将组件类编译成 renderer 方法\n//          *\n//          * @param {Function} ComponentClass 组件类\n//          * @return {function(Object):string}\n//          */\n//         compileToRenderer: function (ComponentClass) {\n//             var renderer = ComponentClass.__ssrRenderer;\n// \n//             if (!renderer) {\n//                 var code = compileJSSource(ComponentClass);\n//                 renderer = (new Function('return ' + code))();\n//                 ComponentClass.__ssrRenderer = renderer;\n//             }\n// \n//             return renderer;\n//         },\n// \n//         /**\n//          * 将组件类编译成 renderer 方法的源文件\n//          *\n//          * @param {Function} ComponentClass 组件类\n//          * @return {string}\n//          */\n//         compileToSource: compileJSSource,\n        // #[end]\n\n        /**\n         * 组件基类\n         *\n         * @type {Function}\n         */\n        Component: Component,\n\n        /**\n         * 创建组件类\n         *\n         * @param {Object} proto 组件类的方法表\n         * @return {Function}\n         */\n        defineComponent: defineComponent,\n\n        /**\n         * 编译组件类。预解析template和components\n         *\n         * @param {Function} ComponentClass 组件类\n         */\n        compileComponent: compileComponent,\n\n        /**\n         * 解析 template\n         *\n         * @inner\n         * @param {string} source template 源码\n         * @return {ANode}\n         */\n        parseTemplate: parseTemplate,\n\n        /**\n         * 解析表达式\n         *\n         * @param {string} source 源码\n         * @return {Object}\n         */\n        parseExpr: parseExpr,\n\n        /**\n         * 表达式类型枚举\n         *\n         * @const\n         * @type {Object}\n         */\n        ExprType: ExprType,\n\n        /**\n         * 生命周期\n         */\n        LifeCycle: LifeCycle,\n\n        /**\n         * 节点类型\n         *\n         * @const\n         * @type {Object}\n         */\n        NodeType: NodeType,\n\n        /**\n         * 在下一个更新周期运行函数\n         *\n         * @param {Function} fn 要运行的函数\n         */\n        nextTick: nextTick,\n\n        /**\n         * 数据类\n         *\n         * @class\n         * @param {Object?} data 初始数据\n         * @param {Data?} parent 父级数据对象\n         */\n        Data: Data,\n\n        /**\n         * 计算表达式的值\n         *\n         * @param {Object} expr 表达式对象\n         * @param {Data} data 数据对象\n         * @param {Component=} owner 组件对象，用于表达式中filter的执行\n         * @return {*}\n         */\n        evalExpr: evalExpr,\n\n        /**\n         * 构建类之间的继承关系\n         *\n         * @param {Function} subClass 子类函数\n         * @param {Function} superClass 父类函数\n         */\n        inherits: inherits,\n\n        /**\n         * DataTypes\n         *\n         * @type {Object}\n         */\n        DataTypes: DataTypes\n    };\n\n    // export\n    if (typeof exports === 'object' && typeof module === 'object') {\n        // For CommonJS\n        exports = module.exports = san;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        // For AMD\n        define('san', [], san);\n    }\n    else {\n        // For <script src=\"...\"\n        root.san = san;\n    }\n\n    // #[begin] devtool\n    emitDevtool.start(san);\n    // #[end]\n})(this);\n","(function (global, factory) {\n    if (typeof define === \"function\" && define.amd) {\n        define(['exports', 'san', '../babelHelpers'], factory);\n    } else if (typeof exports !== \"undefined\") {\n        factory(exports, require('san'), require('../babelHelpers'));\n    } else {\n        var mod = {\n            exports: {}\n        };\n        factory(mod.exports, global.san, global.babelHelpers);\n        global.TH = mod.exports;\n    }\n})(this, function (exports, _san, babelHelpers) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n\n    var _san2 = babelHelpers.interopRequireDefault(_san);\n\n    var TH = function (_san$Component) {\n        babelHelpers.inherits(TH, _san$Component);\n\n        function TH() {\n            babelHelpers.classCallCheck(this, TH);\n            return babelHelpers.possibleConstructorReturn(this, (TH.__proto__ || Object.getPrototypeOf(TH)).apply(this, arguments));\n        }\n\n        return TH;\n    }(_san2.default.Component);\n\n    TH.template = '\\n        <th><slot></slot></th>\\n    ';\n    exports.default = TH;\n});\n//# sourceMappingURL=TH.js.map\n","(function (global, factory) {\n    if (typeof define === \"function\" && define.amd) {\n        define(['exports', 'san', '../babelHelpers'], factory);\n    } else if (typeof exports !== \"undefined\") {\n        factory(exports, require('san'), require('../babelHelpers'));\n    } else {\n        var mod = {\n            exports: {}\n        };\n        factory(mod.exports, global.san, global.babelHelpers);\n        global.TD = mod.exports;\n    }\n})(this, function (exports, _san, babelHelpers) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n\n    var _san2 = babelHelpers.interopRequireDefault(_san);\n\n    var TD = function (_san$Component) {\n        babelHelpers.inherits(TD, _san$Component);\n\n        function TD() {\n            babelHelpers.classCallCheck(this, TD);\n            return babelHelpers.possibleConstructorReturn(this, (TD.__proto__ || Object.getPrototypeOf(TD)).apply(this, arguments));\n        }\n\n        return TD;\n    }(_san2.default.Component);\n\n    TD.template = '\\n        <td><slot></slot></td>\\n    ';\n    exports.default = TD;\n});\n//# sourceMappingURL=TD.js.map\n","(function (global, factory) {\n    if (typeof define === \"function\" && define.amd) {\n        define(['exports', 'san', './TD', './TH', '../Checkbox/index', '../Radio/index', '../babelHelpers'], factory);\n    } else if (typeof exports !== \"undefined\") {\n        factory(exports, require('san'), require('./TD'), require('./TH'), require('../Checkbox/index'), require('../Radio/index'), require('../babelHelpers'));\n    } else {\n        var mod = {\n            exports: {}\n        };\n        factory(mod.exports, global.san, global.TD, global.TH, global.index, global.index, global.babelHelpers);\n        global.TR = mod.exports;\n    }\n})(this, function (exports, _san, _TD, _TH, _index, _index3, babelHelpers) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n\n    var _san2 = babelHelpers.interopRequireDefault(_san);\n\n    var _TD2 = babelHelpers.interopRequireDefault(_TD);\n\n    var _TH2 = babelHelpers.interopRequireDefault(_TH);\n\n    var _index2 = babelHelpers.interopRequireDefault(_index);\n\n    var _index4 = babelHelpers.interopRequireDefault(_index3);\n\n    var TR = function (_san$Component) {\n        babelHelpers.inherits(TR, _san$Component);\n\n        function TR() {\n            babelHelpers.classCallCheck(this, TR);\n            return babelHelpers.possibleConstructorReturn(this, (TR.__proto__ || Object.getPrototypeOf(TR)).apply(this, arguments));\n        }\n\n        babelHelpers.createClass(TR, [{\n            key: 'initData',\n            value: function initData() {\n                return {\n                    pos: 'tbody',\n                    selected: false,\n                    indeterminate: false,\n                    disable: false\n                };\n            }\n        }, {\n            key: 'inited',\n            value: function inited() {\n                this.dispatch('UI:tr-inited');\n            }\n        }, {\n            key: 'attached',\n            value: function attached() {\n                this.dispatch('UI:tr-attached');\n            }\n        }, {\n            key: 'select',\n            value: function select(checked) {\n                var _data$get = this.data.get(),\n                    selected = _data$get.selected,\n                    pos = _data$get.pos;\n\n                var nextSelected = !!checked.length;\n\n                if (selected === nextSelected) {\n                    return;\n                }\n\n                this.data.set('selected', nextSelected);\n\n                this.dispatch('UI:table-select-' + (pos === 'tbody' ? 'item' : 'head'), nextSelected);\n            }\n        }, {\n            key: 'detached',\n            value: function detached() {\n                this.dispatch('UI:tr-detached');\n            }\n        }]);\n        return TR;\n    }(_san2.default.Component);\n\n    TR.components = {\n        'sm-td': _TD2.default,\n        'sm-th': _TH2.default,\n        'sm-checkbox': _index2.default,\n        'sm-radio': _index4.default\n    };\n    TR.template = '\\n        <tr class=\"{{selected && pos === \\'tbody\\' ? \\'sm-table-row-selected\\' : \\'\\'}}\">\\n            <sm-th\\n                san-if=\"tableSelectable === \\'multi\\'\"\\n                class=\"sm-table-col-select\">\\n                <sm-checkbox\\n                    s-ref=\"checkbox\"\\n                    checked=\"{{checked}}\"\\n                    indeterminate=\"{{indeterminate}}\"\\n                    value=\"ON\"\\n                    disabled=\"{{!!disabled}}\"\\n                    on-input-change=\"select($event)\"/>\\n            </sm-th>\\n            <sm-th\\n                san-if=\"tableSelectable === \\'single\\'\"\\n                class=\"sm-table-col-select\">\\n                <sm-radio\\n                    s-if=\"tableSelectable && pos === \\'tbody\\'\"\\n                    checked=\"{{checked}}\"\\n                    value=\"ON\"\\n                    on-input-change=\"select($event)\" />\\n            </sm-th>\\n            <slot></slot>\\n        </tr>\\n    ';\n    TR.computed = {\n        checked: function checked() {\n            var selected = this.data.get('selected');\n            var tableSelectable = this.data.get('tableSelectable');\n            switch (tableSelectable) {\n                case 'single':\n                    return selected ? 'ON' : '';\n                case 'multi':\n                    return selected ? ['ON'] : [];\n            }\n        }\n    };\n    TR.dataTypes = {\n        pos: _san.DataTypes.oneOf(['tbody', 'thead', 'tfoot']),\n        selected: _san.DataTypes.bool,\n        indeterminate: _san.DataTypes.bool\n    };\n    exports.default = TR;\n});\n//# sourceMappingURL=TR.js.map\n","/*!\n  Copyright (c) 2016 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tclasses.push(classNames.apply(null, arg));\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","(function (global, factory) {\n    if (typeof define === \"function\" && define.amd) {\n        define(['exports', 'classnames', '../../constants', '../../babelHelpers'], factory);\n    } else if (typeof exports !== \"undefined\") {\n        factory(exports, require('classnames'), require('../../constants'), require('../../babelHelpers'));\n    } else {\n        var mod = {\n            exports: {}\n        };\n        factory(mod.exports, global.classnames, global.constants, global.babelHelpers);\n        global.cx = mod.exports;\n    }\n})(this, function (exports, _classnames, _constants, babelHelpers) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.create = create;\n\n    var _classnames2 = babelHelpers.interopRequireDefault(_classnames);\n\n    function addPrefix(prefix) {\n\n        return function () {\n\n            var classNames = _classnames2.default.apply(undefined, arguments).trim();\n\n            return classNames ? classNames.split(' ').map(function (className) {\n                return prefix + '-' + className;\n            }).join(' ') : '';\n        };\n    }\n\n    function resolveStates(component) {\n        var disabled = component.data.get('disabled');\n        var readOnly = component.data.get('readOnly');\n        var hidden = component.data.get('hidden');\n        return {\n            disabled: disabled,\n            readOnly: readOnly,\n            hidden: hidden\n        };\n    }\n\n    function convertToVariants(variants) {\n\n        if (!variants) {\n            return [];\n        }\n\n        if (typeof variants === 'string') {\n            return variants.split(' ').filter(function (variant) {\n                return !!variant;\n            }).map(function (variant) {\n                return variant.trim();\n            });\n        }\n\n        return Array.isArray(variants) ? variants : [];\n    }\n\n    function create(prefix) {\n\n        function getPartClassName(part) {\n            return part ? _constants.COMPONENT_CLASSNAME_PREFIX + '-' + prefix + '-' + part : _constants.COMPONENT_CLASSNAME_PREFIX + '-' + prefix;\n        }\n\n        function classNameBuilder(component) {\n\n            var part = '';\n            var variants = convertToVariants(component.data.get('variants'));\n\n            var states = resolveStates(component);\n            var getVariantClassName = addPrefix('variant');\n            var getStateClassName = addPrefix('state');\n\n            var builder = {\n                build: build,\n                setPart: setPart,\n                addVariants: addVariants,\n                addStates: addStates\n            };\n\n            function setPart(p) {\n                part = p;\n                return builder;\n            }\n\n            function addVariants() {\n                for (var _len = arguments.length, extraVariants = Array(_len), _key = 0; _key < _len; _key++) {\n                    extraVariants[_key] = arguments[_key];\n                }\n\n                variants = [].concat(babelHelpers.toConsumableArray(variants), babelHelpers.toConsumableArray(extraVariants.map(convertToVariants)));\n                return builder;\n            }\n\n            function addStates() {\n                for (var _len2 = arguments.length, extraStates = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n                    extraStates[_key2] = arguments[_key2];\n                }\n\n                states = extraStates.reduce(function (states, state) {\n                    return babelHelpers.extends({}, states, state);\n                }, states);\n                return builder;\n            }\n\n            function build() {\n                return (0, _classnames2.default)(getPartClassName(part), getVariantClassName(variants), getStateClassName(states));\n            }\n\n            return builder;\n        }\n\n        classNameBuilder.getPartClassName = getPartClassName;\n\n        return classNameBuilder;\n    }\n});\n//# sourceMappingURL=cx.js.map\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target) {\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target) {\n                // If passing function in options, then use it for resolve \"head\" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector(\"#foo\").shadowRoot }\n                // }\n                if (typeof target === 'function') {\n                        return target();\n                }\n                if (typeof memo[target] === \"undefined\") {\n\t\t\tvar styleTarget = getTarget.call(this, target);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertInto + \" \" + options.insertAt.before);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = options.transform(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n","/**\n * San\n * Copyright 2016 Baidu Inc. All rights reserved.\n *\n * @file 主文件\n * @author errorrik(errorrik@gmail.com)\n *         otakustay(otakustay@gmail.com)\n *         junmer(junmer@foxmail.com)\n */\n\n(function (root) {\n    // 人工调整打包代码顺序，通过注释手工写一些依赖\n//     // require('./util/guid');\n//     // require('./util/empty');\n//     // require('./util/extend');\n//     // require('./util/inherits');\n//     // require('./util/each');\n//     // require('./util/contains');\n//     // require('./util/bind');\n//     // require('./browser/on');\n//     // require('./browser/un');\n//     // require('./browser/svg-tags');\n//     // require('./browser/create-el');\n//     // require('./browser/remove-el');\n//     // require('./util/next-tick');\n//     // require('./browser/ie');\n//     // require('./browser/ie-old-than-9');\n//     // require('./browser/input-event-compatible');\n//     // require('./browser/auto-close-tags');\n//     // require('./util/data-types.js');\n//     // require('./util/create-data-types-checker.js');\n//     // require('./parser/walker');\n//     // require('./parser/create-a-node');\n//     // require('./parser/parse-template');\n//     // require('./runtime/change-expr-compare');\n//     // require('./runtime/data-change-type');\n//     // require('./runtime/default-filters');\n//     // require('./view/life-cycle');\n//     // require('./view/node-type');\n//     // require('./view/get-prop-handler');\n//     // require('./view/is-data-change-by-element');\n//     // require('./view/event-declaration-listener');\n//     // require('./view/create-node');\n\n\n    /**\n * @file 生成唯一id\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n/**\n * 唯一id的起始值\n *\n * @inner\n * @type {number}\n */\nvar guidIndex = 1;\n\n/**\n * 唯一id的前缀\n *\n * @inner\n * @type {string}\n */\nvar guidPrefix = (new Date()).getTime().toString(16).slice(8);\n\n/**\n * 获取唯一id\n *\n * @inner\n * @return {string} 唯一id\n */\nfunction guid() {\n    return '_' + guidPrefix + (guidIndex++);\n}\n\n// exports = module.exports = guid;\n\n\n/**\n * @file 空函数\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n/**\n * 啥都不干\n */\nfunction empty() {}\n\n// exports = module.exports = empty;\n\n\n/**\n * @file 属性拷贝\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 对象属性拷贝\n *\n * @param {Object} target 目标对象\n * @param {Object} source 源对象\n * @return {Object} 返回目标对象\n */\nfunction extend(target, source) {\n    for (var key in source) {\n        if (source.hasOwnProperty(key)) {\n            var value = source[key];\n            if (typeof value !== 'undefined') {\n                target[key] = value;\n            }\n        }\n    }\n\n    return target;\n}\n\n// exports = module.exports = extend;\n\n\n/**\n * @file 构建类之间的继承关系\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var extend = require('./extend');\n\n/**\n * 构建类之间的继承关系\n *\n * @param {Function} subClass 子类函数\n * @param {Function} superClass 父类函数\n */\nfunction inherits(subClass, superClass) {\n    /* jshint -W054 */\n    var subClassProto = subClass.prototype;\n    var F = new Function();\n    F.prototype = superClass.prototype;\n    subClass.prototype = new F();\n    subClass.prototype.constructor = subClass;\n    extend(subClass.prototype, subClassProto);\n    /* jshint +W054 */\n}\n\n// exports = module.exports = inherits;\n\n\n/**\n * @file 遍历数组\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n/**\n * 遍历数组集合\n *\n * @param {Array} array 数组源\n * @param {function(Any,number):boolean} iterator 遍历函数\n */\nfunction each(array, iterator) {\n    if (array && array.length > 0) {\n        for (var i = 0, l = array.length; i < l; i++) {\n            if (iterator(array[i], i) === false) {\n                break;\n            }\n        }\n    }\n}\n\n// exports = module.exports = each;\n\n\n/**\n * @file 判断数组中是否包含某项\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var each = require('./each');\n\n/**\n * 判断数组中是否包含某项\n *\n * @param {Array} array 数组\n * @param {*} value 包含的项\n * @return {boolean}\n */\nfunction contains(array, value) {\n    var result = false;\n    each(array, function (item) {\n        result = item === value;\n        return !result;\n    });\n\n    return result;\n}\n\n// exports = module.exports = contains;\n\n\n/**\n * @file bind函数\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * Function.prototype.bind 方法的兼容性封装\n *\n * @param {Function} func 要bind的函数\n * @param {Object} thisArg this指向对象\n * @param {...*} args 预设的初始参数\n * @return {Function}\n */\nfunction bind(func, thisArg) {\n    var nativeBind = Function.prototype.bind;\n    var slice = Array.prototype.slice;\n    // #[begin] allua\n    if (nativeBind && func.bind === nativeBind) {\n    // #[end]\n        return nativeBind.apply(func, slice.call(arguments, 1));\n    // #[begin] allua\n    }\n\n    var args = slice.call(arguments, 2);\n    return function () {\n        return func.apply(thisArg, args.concat(slice.call(arguments)));\n    };\n    // #[end]\n}\n\n// exports = module.exports = bind;\n\n\n/**\n * @file DOM 事件挂载\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * DOM 事件挂载\n *\n * @inner\n * @param {HTMLElement} el DOM元素\n * @param {string} eventName 事件名\n * @param {Function} listener 监听函数\n * @param {boolean} capture 是否是捕获阶段\n */\nfunction on(el, eventName, listener, capture) {\n    // #[begin] allua\n    if (el.addEventListener) {\n    // #[end]\n        el.addEventListener(eventName, listener, capture);\n    // #[begin] allua\n    }\n    else {\n        el.attachEvent('on' + eventName, listener);\n    }\n    // #[end]\n}\n\n// exports = module.exports = on;\n\n\n/**\n * @file DOM 事件卸载\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * DOM 事件卸载\n *\n * @inner\n * @param {HTMLElement} el DOM元素\n * @param {string} eventName 事件名\n * @param {Function} listener 监听函数\n * @param {boolean} capture 是否是捕获阶段\n */\nfunction un(el, eventName, listener, capture) {\n    // #[begin] allua\n    if (el.addEventListener) {\n    // #[end]\n        el.removeEventListener(eventName, listener, capture);\n    // #[begin] allua\n    }\n    else {\n        el.detachEvent('on' + eventName, listener);\n    }\n    // #[end]\n}\n\n// exports = module.exports = un;\n\n\n/**\n * @file 将字符串逗号切分返回对象\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var each = require('../util/each');\n\n/**\n * 将字符串逗号切分返回对象\n *\n * @param {string} source 源字符串\n * @return {Object}\n */\nfunction splitStr2Obj(source) {\n    var result = {};\n    each(\n        source.split(','),\n        function (key) {\n            result[key] = 1;\n        }\n    );\n    return result;\n}\n\n// exports = module.exports = splitStr2Obj;\n\n\n/**\n * @file SVG标签表\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var splitStr2Obj = require('../util/split-str-2-obj');\n\n/**\n * svgTags\n *\n * @see https://www.w3.org/TR/SVG/svgdtd.html 只取常用\n * @type {Object}\n */\nvar svgTags = splitStr2Obj(''\n    // structure\n    + 'svg,g,defs,desc,metadata,symbol,use,'\n    // image & shape\n    + 'image,path,rect,circle,line,ellipse,polyline,polygon,'\n    // text\n    + 'text,tspan,tref,textpath,'\n    // other\n    + 'marker,pattern,clippath,mask,filter,cursor,view,animate,'\n    // font\n    + 'font,font-face,glyph,missing-glyph');\n\n// exports = module.exports = svgTags;\n\n\n/**\n * @file DOM创建\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var svgTags = require('./svg-tags');\n\n/**\n * 创建 DOM 元素\n *\n * @param  {string} tagName tagName\n * @return {HTMLElement}\n */\nfunction createEl(tagName) {\n    if (svgTags[tagName]) {\n        return document.createElementNS('http://www.w3.org/2000/svg', tagName);\n    }\n\n    return document.createElement(tagName);\n}\n\n// exports = module.exports = createEl;\n\n\n/**\n * @file 移除DOM\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 将 DOM 从页面中移除\n *\n * @param {HTMLElement} el DOM元素\n */\nfunction removeEl(el) {\n    if (el && el.parentNode) {\n        el.parentNode.removeChild(el);\n    }\n}\n\n// exports = module.exports = removeEl;\n\n\n/**\n * @file 在下一个时间周期运行任务\n * @author errorrik(errorrik@gmail.com)\n */\n\n// 该方法参照了vue2.5.0的实现，感谢vue团队\n// SEE: https://github.com/vuejs/vue/blob/0948d999f2fddf9f90991956493f976273c5da1f/src/core/util/env.js#L68\n\n\n// var bind = require('./bind');\n\n/**\n * 下一个周期要执行的任务列表\n *\n * @inner\n * @type {Array}\n */\nvar nextTasks = [];\n\n/**\n * 执行下一个周期任务的函数\n *\n * @inner\n * @type {Function}\n */\nvar nextHandler;\n\n/**\n * 浏览器是否支持原生Promise\n * 对Promise做判断，是为了禁用一些不严谨的Promise的polyfill\n *\n * @inner\n * @type {boolean}\n */\nvar isNativePromise = typeof Promise === 'function' && /native code/.test(Promise);\n\n/**\n * 在下一个时间周期运行任务\n *\n * @inner\n * @param {Function} fn 要运行的任务函数\n * @param {Object=} thisArg this指向对象\n */\nfunction nextTick(fn, thisArg) {\n    if (thisArg) {\n        fn = bind(fn, thisArg);\n    }\n    nextTasks.push(fn);\n\n    if (nextHandler) {\n        return;\n    }\n\n    nextHandler = function () {\n        var tasks = nextTasks.slice(0);\n        nextTasks = [];\n        nextHandler = null;\n\n        for (var i = 0, l = tasks.length; i < l; i++) {\n            tasks[i]();\n        }\n    };\n\n    // 非标准方法，但是此方法非常吻合要求。\n    if (typeof setImmediate === 'function') {\n        setImmediate(nextHandler);\n    }\n    // 用MessageChannel去做setImmediate的polyfill\n    // 原理是将新的message事件加入到原有的dom events之后\n    else if (typeof MessageChannel === 'function') {\n        var channel = new MessageChannel();\n        var port = channel.port2;\n        channel.port1.onmessage = nextHandler;\n        port.postMessage(1);\n    }\n    // for native app\n    else if (isNativePromise) {\n        Promise.resolve().then(nextHandler);\n    }\n    else {\n        setTimeout(nextHandler, 0);\n    }\n}\n\n// exports = module.exports = nextTick;\n\n\n/**\n * @file ie版本号\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 从userAgent中ie版本号的匹配信息\n *\n * @type {Array}\n */\nvar ieVersionMatch = typeof navigator !== 'undefined'\n    && navigator.userAgent.match(/msie\\s*([0-9]+)/i);\n\n/**\n * ie版本号，非ie时为0\n *\n * @type {number}\n */\nvar ie = ieVersionMatch ? ieVersionMatch[1] - 0 : 0;\n\n// exports = module.exports = ie;\n\n\n/**\n * @file 是否 IE 并且小于 9\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ie = require('./ie');\n\n// HACK:\n// 1. IE8下，设置innerHTML时如果以html comment开头，comment会被自动滤掉\n//    为了保证stump存在，需要设置完html后，createComment并appendChild/insertBefore\n// 2. IE8下，innerHTML还不支持custom element，所以需要用div替代，不用createElement\n// 3. 虽然IE8已经优化了字符串+连接，碎片化连接性能不再退化\n//    但是由于上面多个兼容场景都用 < 9 判断，所以字符串连接也沿用\n//    所以结果是IE8下字符串连接用的是数组join的方式\n\n// #[begin] allua\n/**\n * 是否 IE 并且小于 9\n */\nvar ieOldThan9 = ie && ie < 9;\n// #[end]\n\n// exports = module.exports = ieOldThan9;\n\n\n/**\n * @file DOM 事件挂载\n * @author dafrok(o.o@mug.dog)\n */\n\n/**\n * DOM 事件挂载\n *\n * @inner\n * @param {HTMLElement} el DOM元素\n * @param {string} eventName 事件名\n */\nfunction trigger(el, eventName) {\n    var event = document.createEvent('HTMLEvents');\n    event.initEvent(eventName, true, true);\n    el.dispatchEvent(event);\n}\n\n// exports = module.exports = trigger;\n\n\n/**\n * @file 解决 IE9 在表单元素中删除字符时不触发事件的问题\n * @author dafrok(o.o@mug.dog)\n */\n\n// var ie = require('./ie');\n// var on = require('./on');\n// var trigger = require('./trigger');\n\n// #[begin] allua\nif (ie === 9) {\n    on(document, 'selectionchange', function () {\n        var el = document.activeElement;\n        if (el.tagName === 'TEXTAREA' || el.tagName === 'INPUT') {\n            trigger(el, 'input');\n        }\n    });\n}\n// #[end]\n\n\n/**\n * @file 自闭合标签表\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var splitStr2Obj = require('../util/split-str-2-obj');\n\n/**\n * 自闭合标签列表\n *\n * @type {Object}\n */\nvar autoCloseTags = splitStr2Obj('area,base,br,col,embed,hr,img,input,keygen,param,source,track,wbr');\n\n// exports = module.exports = autoCloseTags;\n\n\n/**\n * @file data types\n * @author leon <ludafa@outlook.com>\n */\n\n// var bind = require('./bind');\n// var empty = require('./empty');\n// var extend = require('./extend');\n\n// #[begin] error\nvar ANONYMOUS_CLASS_NAME = '<<anonymous>>';\n\n/**\n * 获取精确的类型\n *\n * @NOTE 如果 obj 是一个 DOMElement，我们会返回 `element`；\n *\n * @param  {*} obj 目标\n * @return {string}\n */\nfunction getDataType(obj) {\n\n    if (obj && obj.nodeType === 1) {\n        return 'element';\n    }\n\n    return Object.prototype.toString\n        .call(obj)\n        .slice(8, -1)\n        .toLowerCase();\n}\n// #[end]\n\n/**\n * 创建链式的数据类型校验器\n *\n * @param  {Function} validate 真正的校验器\n * @return {Function}\n */\nfunction createChainableChecker(validate) {\n    var chainedChecker = function () {};\n    chainedChecker.isRequired = empty;\n\n    // 只在 error 功能启用时才有实际上的 dataTypes 检测\n    // #[begin] error\n    var checkType = function (isRequired, data, dataName, componentName, fullDataName) {\n\n        var dataValue = data[dataName];\n        var dataType = getDataType(dataValue);\n\n        componentName = componentName || ANONYMOUS_CLASS_NAME;\n\n        // 如果是 null 或 undefined，那么要提前返回啦\n        if (dataValue == null) {\n            // 是 required 就报错\n            if (isRequired) {\n                throw new Error('[SAN ERROR] '\n                    + 'The `' + dataName + '` '\n                    + 'is marked as required in `' + componentName + '`, '\n                    + 'but its value is ' + dataType\n                );\n            }\n            // 不是 required，那就是 ok 的\n            return;\n        }\n\n        validate(data, dataName, componentName, fullDataName);\n\n    };\n\n    chainedChecker = bind(checkType, null, false);\n    chainedChecker.isRequired = bind(checkType, null, true);\n    // #[end]\n\n\n\n    return chainedChecker;\n\n}\n\n// #[begin] error\n/**\n * 生成主要类型数据校验器\n *\n * @param  {string} type 主类型\n * @return {Function}\n */\nfunction createPrimaryTypeChecker(type) {\n\n    return createChainableChecker(function (data, dataName, componentName, fullDataName) {\n\n        var dataValue = data[dataName];\n        var dataType = getDataType(dataValue);\n\n        if (dataType !== type) {\n            throw new Error('[SAN ERROR] '\n                + 'Invalid ' + componentName + ' data `' + fullDataName + '` of type'\n                + '(' + dataType + ' supplied to ' + componentName + ', '\n                + 'expected ' + type + ')'\n            );\n        }\n\n    });\n\n}\n\n\n\n/**\n * 生成 arrayOf 校验器\n *\n * @param  {Function} arrayItemChecker 数组中每项数据的校验器\n * @return {Function}\n */\nfunction createArrayOfChecker(arrayItemChecker) {\n\n    return createChainableChecker(function (data, dataName, componentName, fullDataName) {\n\n        if (typeof arrayItemChecker !== 'function') {\n            throw new Error('[SAN ERROR] '\n                + 'Data `' + dataName + '` of `' + componentName + '` has invalid '\n                + 'DataType notation inside `arrayOf`, expected `function`'\n            );\n        }\n\n        var dataValue = data[dataName];\n        var dataType = getDataType(dataValue);\n\n        if (dataType !== 'array') {\n            throw new Error('[SAN ERROR] '\n                + 'Invalid ' + componentName + ' data `' + fullDataName + '` of type'\n                + '(' + dataType + ' supplied to ' + componentName + ', '\n                + 'expected array)'\n            );\n        }\n\n        for (var i = 0, len = dataValue.length; i < len; i++) {\n            arrayItemChecker(dataValue, i, componentName, fullDataName + '[' + i + ']');\n        }\n\n    });\n\n}\n\n/**\n * 生成 instanceOf 检测器\n *\n * @param  {Function|Class} expectedClass 期待的类\n * @return {Function}\n */\nfunction createInstanceOfChecker(expectedClass) {\n\n    return createChainableChecker(function (data, dataName, componentName, fullDataName) {\n\n        var dataValue = data[dataName];\n\n        if (dataValue instanceof expectedClass) {\n            return;\n        }\n\n        var dataValueClassName = dataValue.constructor && dataValue.constructor.name\n            ? dataValue.constructor.name\n            : ANONYMOUS_CLASS_NAME;\n\n        var expectedClassName = expectedClass.name || ANONYMOUS_CLASS_NAME;\n\n        throw new Error('[SAN ERROR] '\n            + 'Invalid ' + componentName + ' data `' + fullDataName + '` of type'\n            + '(' + dataValueClassName + ' supplied to ' + componentName + ', '\n            + 'expected instance of ' + expectedClassName + ')'\n        );\n\n\n    });\n\n}\n\n/**\n * 生成 shape 校验器\n *\n * @param  {Object} shapeTypes shape 校验规则\n * @return {Function}\n */\nfunction createShapeChecker(shapeTypes) {\n\n    return createChainableChecker(function (data, dataName, componentName, fullDataName) {\n\n        if (getDataType(shapeTypes) !== 'object') {\n            throw new Error('[SAN ERROR] '\n                + 'Data `' + fullDataName + '` of `' + componentName + '` has invalid '\n                + 'DataType notation inside `shape`, expected `object`'\n            );\n        }\n\n        var dataValue = data[dataName];\n        var dataType = getDataType(dataValue);\n\n        if (dataType !== 'object') {\n            throw new Error('[SAN ERROR] '\n                + 'Invalid ' + componentName + ' data `' + fullDataName + '` of type'\n                + '(' + dataType + ' supplied to ' + componentName + ', '\n                + 'expected object)'\n            );\n        }\n\n        for (var shapeKeyName in shapeTypes) {\n            if (shapeTypes.hasOwnProperty(shapeKeyName)) {\n                var checker = shapeTypes[shapeKeyName];\n                if (typeof checker === 'function') {\n                    checker(dataValue, shapeKeyName, componentName, fullDataName + '.' + shapeKeyName);\n                }\n            }\n        }\n\n    });\n\n}\n\n/**\n * 生成 oneOf 校验器\n *\n * @param  {Array} expectedEnumValues 期待的枚举值\n * @return {Function}\n */\nfunction createOneOfChecker(expectedEnumValues) {\n\n    return createChainableChecker(function (data, dataName, componentName, fullDataName) {\n\n        if (getDataType(expectedEnumValues) !== 'array') {\n            throw new Error('[SAN ERROR] '\n                + 'Data `' + fullDataName + '` of `' + componentName + '` has invalid '\n                + 'DataType notation inside `oneOf`, array is expected.'\n            );\n        }\n\n        var dataValue = data[dataName];\n\n        for (var i = 0, len = expectedEnumValues.length; i < len; i++) {\n            if (dataValue === expectedEnumValues[i]) {\n                return;\n            }\n        }\n\n        throw new Error('[SAN ERROR] '\n            + 'Invalid ' + componentName + ' data `' + fullDataName + '` of value'\n            + '(`' + dataValue + '` supplied to ' + componentName + ', '\n            + 'expected one of ' + expectedEnumValues.join(',') + ')'\n        );\n\n    });\n\n}\n\n/**\n * 生成 oneOfType 校验器\n *\n * @param  {Array<Function>} expectedEnumOfTypeValues 期待的枚举类型\n * @return {Function}\n */\nfunction createOneOfTypeChecker(expectedEnumOfTypeValues) {\n\n    return createChainableChecker(function (data, dataName, componentName, fullDataName) {\n\n        if (getDataType(expectedEnumOfTypeValues) !== 'array') {\n            throw new Error('[SAN ERROR] '\n                + 'Data `' + dataName + '` of `' + componentName + '` has invalid '\n                + 'DataType notation inside `oneOf`, array is expected.'\n            );\n        }\n\n        var dataValue = data[dataName];\n\n        for (var i = 0, len = expectedEnumOfTypeValues.length; i < len; i++) {\n\n            var checker = expectedEnumOfTypeValues[i];\n\n            if (typeof checker !== 'function') {\n                continue;\n            }\n\n            try {\n                checker(data, dataName, componentName, fullDataName);\n                // 如果 checker 完成校验没报错，那就返回了\n                return;\n            }\n            catch (e) {\n                // 如果有错误，那么应该把错误吞掉\n            }\n\n        }\n\n        // 所有的可接受 type 都失败了，才丢一个异常\n        throw new Error('[SAN ERROR] '\n            + 'Invalid ' + componentName + ' data `' + dataName + '` of value'\n            + '(`' + dataValue + '` supplied to ' + componentName + ')'\n        );\n\n    });\n\n}\n\n/**\n * 生成 objectOf 校验器\n *\n * @param  {Function} typeChecker 对象属性值校验器\n * @return {Function}\n */\nfunction createObjectOfChecker(typeChecker) {\n\n    return createChainableChecker(function (data, dataName, componentName, fullDataName) {\n\n        if (typeof typeChecker !== 'function') {\n            throw new Error('[SAN ERROR] '\n                + 'Data `' + dataName + '` of `' + componentName + '` has invalid '\n                + 'DataType notation inside `objectOf`, expected function'\n            );\n        }\n\n        var dataValue = data[dataName];\n        var dataType = getDataType(dataValue);\n\n        if (dataType !== 'object') {\n            throw new Error('[SAN ERROR] '\n                + 'Invalid ' + componentName + ' data `' + dataName + '` of type'\n                + '(' + dataType + ' supplied to ' + componentName + ', '\n                + 'expected object)'\n            );\n        }\n\n        for (var dataKeyName in dataValue) {\n            if (dataValue.hasOwnProperty(dataKeyName)) {\n                typeChecker(\n                    dataValue,\n                    dataKeyName,\n                    componentName,\n                    fullDataName + '.' + dataKeyName\n                );\n            }\n        }\n\n\n    });\n\n}\n\n/**\n * 生成 exact 校验器\n *\n * @param  {Object} shapeTypes object 形态定义\n * @return {Function}\n */\nfunction createExactChecker(shapeTypes) {\n\n    return createChainableChecker(function (data, dataName, componentName, fullDataName, secret) {\n\n        if (getDataType(shapeTypes) !== 'object') {\n            throw new Error('[SAN ERROR] '\n                + 'Data `' + dataName + '` of `' + componentName + '` has invalid '\n                + 'DataType notation inside `exact`'\n            );\n        }\n\n        var dataValue = data[dataName];\n        var dataValueType = getDataType(dataValue);\n\n        if (dataValueType !== 'object') {\n            throw new Error('[SAN ERROR] '\n                + 'Invalid data `' + fullDataName + '` of type `' + dataValueType + '`'\n                + '(supplied to ' + componentName + ', expected `object`)'\n            );\n        }\n\n        var allKeys = {};\n\n        // 先合入 shapeTypes\n        extend(allKeys, shapeTypes);\n        // 再合入 dataValue\n        extend(allKeys, dataValue);\n        // 保证 allKeys 的类型正确\n\n        for (var key in allKeys) {\n            if (allKeys.hasOwnProperty(key)) {\n                var checker = shapeTypes[key];\n\n                // dataValue 中有一个多余的数据项\n                if (!checker) {\n                    throw new Error('[SAN ERROR] '\n                        + 'Invalid data `' + fullDataName + '` key `' + key + '` '\n                        + 'supplied to `' + componentName + '`. '\n                        + '(`' + key + '` is not defined in `DataTypes.exact`)'\n                    );\n                }\n\n                if (!(key in dataValue)) {\n                    throw new Error('[SAN ERROR] '\n                        + 'Invalid data `' + fullDataName + '` key `' + key + '` '\n                        + 'supplied to `' + componentName + '`. '\n                        + '(`' + key + '` is marked `required` in `DataTypes.exact`)'\n                    );\n                }\n\n                checker(\n                    dataValue,\n                    key,\n                    componentName,\n                    fullDataName + '.' + key,\n                    secret\n                );\n\n            }\n        }\n\n    });\n\n}\n// #[end]\n\n\n\n/* eslint-disable fecs-valid-var-jsdoc */\nvar DataTypes = {\n    array: createChainableChecker(empty),\n    object: createChainableChecker(empty),\n    func: createChainableChecker(empty),\n    string: createChainableChecker(empty),\n    number: createChainableChecker(empty),\n    bool: createChainableChecker(empty),\n    symbol: createChainableChecker(empty),\n    any: createChainableChecker,\n    arrayOf: createChainableChecker,\n    instanceOf: createChainableChecker,\n    shape: createChainableChecker,\n    oneOf: createChainableChecker,\n    oneOfType: createChainableChecker,\n    objectOf: createChainableChecker,\n    exact: createChainableChecker\n};\n\n// #[begin] error\nDataTypes = {\n\n    any: createChainableChecker(empty),\n\n    // 类型检测\n    array: createPrimaryTypeChecker('array'),\n    object: createPrimaryTypeChecker('object'),\n    func: createPrimaryTypeChecker('function'),\n    string: createPrimaryTypeChecker('string'),\n    number: createPrimaryTypeChecker('number'),\n    bool: createPrimaryTypeChecker('boolean'),\n    symbol: createPrimaryTypeChecker('symbol'),\n\n    // 复合类型检测\n    arrayOf: createArrayOfChecker,\n    instanceOf: createInstanceOfChecker,\n    shape: createShapeChecker,\n    oneOf: createOneOfChecker,\n    oneOfType: createOneOfTypeChecker,\n    objectOf: createObjectOfChecker,\n    exact: createExactChecker\n\n};\n/* eslint-enable fecs-valid-var-jsdoc */\n// #[end]\n\n\n// module.exports = DataTypes;\n\n\n/**\n * @file 创建数据检测函数\n * @author leon<ludafa@outlook.com>\n */\n\n\n// #[begin] error\n\n/**\n * 创建数据检测函数\n *\n * @param  {Object} dataTypes     数据格式\n * @param  {string} componentName 组件名\n * @return {Function}\n */\nfunction createDataTypesChecker(dataTypes, componentName) {\n\n    /**\n     * 校验 data 是否满足 data types 的格式\n     *\n     * @param  {*} data 数据\n     */\n    return function (data) {\n\n        for (var dataTypeName in dataTypes) {\n\n            if (dataTypes.hasOwnProperty(dataTypeName)) {\n\n                var dataTypeChecker = dataTypes[dataTypeName];\n\n                if (typeof dataTypeChecker !== 'function') {\n                    throw new Error('[SAN ERROR] '\n                        + componentName + ':' + dataTypeName + ' is invalid; '\n                        + 'it must be a function, usually from san.DataTypes'\n                    );\n                }\n\n                dataTypeChecker(\n                    data,\n                    dataTypeName,\n                    componentName,\n                    dataTypeName\n                );\n\n\n            }\n        }\n\n    };\n\n}\n\n// #[end]\n\n// module.exports = createDataTypesChecker;\n\n\n/**\n * @file 字符串源码读取类\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n/**\n * 字符串源码读取类，用于模板字符串解析过程\n *\n * @class\n * @param {string} source 要读取的字符串\n */\nfunction Walker(source) {\n    this.source = source;\n    this.len = this.source.length;\n    this.index = 0;\n}\n\n/**\n * 获取当前字符码\n *\n * @return {number}\n */\nWalker.prototype.currentCode = function () {\n    return this.charCode(this.index);\n};\n\n/**\n * 截取字符串片段\n *\n * @param {number} start 起始位置\n * @param {number} end 结束位置\n * @return {string}\n */\nWalker.prototype.cut = function (start, end) {\n    return this.source.slice(start, end);\n};\n\n/**\n * 向前读取字符\n *\n * @param {number} distance 读取字符数\n */\nWalker.prototype.go = function (distance) {\n    this.index += distance;\n};\n\n/**\n * 读取下一个字符，返回下一个字符的 code\n *\n * @return {number}\n */\nWalker.prototype.nextCode = function () {\n    this.go(1);\n    return this.currentCode();\n};\n\n/**\n * 获取相应位置字符的 code\n *\n * @param {number} index 字符位置\n * @return {number}\n */\nWalker.prototype.charCode = function (index) {\n    return this.source.charCodeAt(index);\n};\n\n/**\n * 向前读取字符，直到遇到指定字符再停止\n *\n * @param {number=} charCode 指定字符的code\n * @return {boolean} 当指定字符时，返回是否碰到指定的字符\n */\nWalker.prototype.goUntil = function (charCode) {\n    var code;\n    while (this.index < this.len && (code = this.currentCode())) {\n        switch (code) {\n            case 32:\n            case 9:\n                this.index++;\n                break;\n            default:\n                if (code === charCode) {\n                    this.index++;\n                    return 1;\n                }\n                return;\n        }\n    }\n};\n\n/**\n * 向前读取符合规则的字符片段，并返回规则匹配结果\n *\n * @param {RegExp} reg 字符片段的正则表达式\n * @return {Array}\n */\nWalker.prototype.match = function (reg) {\n    reg.lastIndex = this.index;\n\n    var match = reg.exec(this.source);\n    if (match) {\n        this.index = reg.lastIndex;\n    }\n\n    return match;\n};\n\n// exports = module.exports = Walker;\n\n\n\n/**\n * @file 模板解析生成的抽象节点\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 创建模板解析生成的抽象节点\n *\n * @param {Object=} options 节点参数\n * @param {string=} options.tagName 标签名\n * @param {ANode=} options.parent 父节点\n * @param {boolean=} options.textExpr 文本节点表达式对象\n * @return {Object}\n */\nfunction createANode(options) {\n    options = options || {};\n\n    if (!options.textExpr) {\n        options.directives = options.directives || {};\n        options.props = options.props || [];\n        options.events = options.events || [];\n        options.children = options.children || [];\n    }\n\n    return options;\n}\n\n// exports = module.exports = createANode;\n\n\n/**\n * @file 把 kebab case 字符串转换成 camel case\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 把 kebab case 字符串转换成 camel case\n *\n * @param {string} source 源字符串\n * @return {string}\n */\nfunction kebab2camel(source) {\n    return source.replace(/-([a-z])/g, function (match, alpha) {\n        return alpha.toUpperCase();\n    });\n}\n\n// exports = module.exports = kebab2camel;\n\n\n/**\n * @file 表达式类型\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 表达式类型\n *\n * @const\n * @type {Object}\n */\nvar ExprType = {\n    STRING: 1,\n    NUMBER: 2,\n    BOOL: 3,\n    ACCESSOR: 4,\n    INTERP: 5,\n    CALL: 6,\n    TEXT: 7,\n    BINARY: 8,\n    UNARY: 9,\n    TERTIARY: 10\n};\n\n// exports = module.exports = ExprType;\n\n\n/**\n * @file 创建访问表达式对象\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n\n/**\n * 创建访问表达式对象\n *\n * @param {Array} paths 访问路径\n * @return {Object}\n */\nfunction createAccessor(paths) {\n    return {\n        type: ExprType.ACCESSOR,\n        paths: paths\n    };\n}\n\n// exports = module.exports = createAccessor;\n\n\n/**\n * @file 读取字符串\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var ExprType = require('./expr-type');\n\n/**\n * 读取字符串\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readString(walker) {\n    var startCode = walker.currentCode();\n    var startIndex = walker.index;\n    var charCode;\n\n    walkLoop: while ((charCode = walker.nextCode())) {\n        switch (charCode) {\n            case 92: // \\\n                walker.go(1);\n                break;\n            case startCode:\n                walker.go(1);\n                break walkLoop;\n        }\n    }\n\n    var literal = walker.cut(startIndex, walker.index);\n    return {\n        type: ExprType.STRING,\n        value: (new Function('return ' + literal))()\n    };\n}\n\n// exports = module.exports = readString;\n\n\n/**\n * @file 读取数字\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var ExprType = require('./expr-type');\n\n/**\n * 读取数字\n *\n * @inner\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readNumber(walker) {\n    var match = walker.match(/\\s*(-?[0-9]+(\\.[0-9]+)?)/g);\n\n    return {\n        type: ExprType.NUMBER,\n        value: match[1] - 0\n    };\n}\n\n// exports = module.exports = readNumber;\n\n\n/**\n * @file 读取ident\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 读取ident\n *\n * @inner\n * @param {Walker} walker 源码读取对象\n * @return {string}\n */\nfunction readIdent(walker) {\n    var match = walker.match(/\\s*([\\$0-9a-z_]+)/ig);\n    return match[1];\n}\n\n// exports = module.exports = readIdent;\n\n\n/**\n * @file 读取三元表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readLogicalORExpr = require('./read-logical-or-expr');\n\n/**\n * 读取三元表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readTertiaryExpr(walker) {\n    var conditional = readLogicalORExpr(walker);\n    walker.goUntil();\n\n    if (walker.currentCode() === 63) { // ?\n        walker.go(1);\n        var yesExpr = readTertiaryExpr(walker);\n        walker.goUntil();\n\n        if (walker.currentCode() === 58) { // :\n            walker.go(1);\n            return {\n                type: ExprType.TERTIARY,\n                segs: [\n                    conditional,\n                    yesExpr,\n                    readTertiaryExpr(walker)\n                ]\n            };\n        }\n    }\n\n    return conditional;\n}\n\n// exports = module.exports = readTertiaryExpr;\n\n\n/**\n * @file 读取访问表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var createAccessor = require('./create-accessor');\n// var readIdent = require('./read-ident');\n// var readTertiaryExpr = require('./read-tertiary-expr');\n\n/**\n * 读取访问表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readAccessor(walker) {\n    var firstSeg = readIdent(walker);\n    switch (firstSeg) {\n        case 'true':\n        case 'false':\n            return {\n                type: ExprType.BOOL,\n                value: firstSeg === 'true'\n            };\n    }\n\n    var result = createAccessor([\n        {\n            type: ExprType.STRING,\n            value: firstSeg\n        }\n    ]);\n\n    /* eslint-disable no-constant-condition */\n    accessorLoop: while (1) {\n    /* eslint-enable no-constant-condition */\n\n        switch (walker.currentCode()) {\n            case 46: // .\n                walker.go(1);\n\n                // ident as string\n                result.paths.push({\n                    type: ExprType.STRING,\n                    value: readIdent(walker)\n                });\n                break;\n\n            case 91: // [\n                walker.go(1);\n                result.paths.push(readTertiaryExpr(walker));\n                walker.goUntil(93); // ]\n                break;\n\n            default:\n                break accessorLoop;\n        }\n    }\n\n    return result;\n}\n\n// exports = module.exports = readAccessor;\n\n\n/**\n * @file 读取括号表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var readTertiaryExpr = require('./read-tertiary-expr');\n\n/**\n * 读取括号表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readParenthesizedExpr(walker) {\n    walker.go(1);\n    var expr = readTertiaryExpr(walker);\n    walker.goUntil(41); // )\n\n    return expr;\n}\n\n// exports = module.exports = readParenthesizedExpr;\n\n\n/**\n * @file 读取一元表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readString = require('./read-string');\n// var readNumber = require('./read-number');\n// var readAccessor = require('./read-accessor');\n// var readParenthesizedExpr = require('./read-parenthesized-expr');\n\n\n/**\n * 读取一元表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readUnaryExpr(walker) {\n    walker.goUntil();\n\n    switch (walker.currentCode()) {\n        case 33: // !\n            walker.go(1);\n            return {\n                type: ExprType.UNARY,\n                expr: readUnaryExpr(walker)\n            };\n        case 34: // \"\n        case 39: // '\n            return readString(walker);\n        case 45: // number\n        case 48:\n        case 49:\n        case 50:\n        case 51:\n        case 52:\n        case 53:\n        case 54:\n        case 55:\n        case 56:\n        case 57:\n            return readNumber(walker);\n        case 40: // (\n            return readParenthesizedExpr(walker);\n    }\n\n    return readAccessor(walker);\n}\n\n// exports = module.exports = readUnaryExpr;\n\n\n/**\n * @file 读取乘法表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readUnaryExpr = require('./read-unary-expr');\n\n/**\n * 读取乘法表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readMultiplicativeExpr(walker) {\n    var expr = readUnaryExpr(walker);\n\n    while (1) {\n        walker.goUntil();\n\n        var code = walker.currentCode();\n        switch (code) {\n            case 37: // %\n            case 42: // *\n            case 47: // /\n                walker.go(1);\n                expr = {\n                    type: ExprType.BINARY,\n                    operator: code,\n                    segs: [expr, readUnaryExpr(walker)]\n                };\n                continue;\n        }\n\n        break;\n    }\n\n\n    return expr;\n}\n\n// exports = module.exports = readMultiplicativeExpr;\n\n\n/**\n * @file 读取加法表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readMultiplicativeExpr = require('./read-multiplicative-expr');\n\n\n/**\n * 读取加法表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readAdditiveExpr(walker) {\n    var expr = readMultiplicativeExpr(walker);\n\n    while (1) {\n        walker.goUntil();\n        var code = walker.currentCode();\n\n        switch (code) {\n            case 43: // +\n            case 45: // -\n                walker.go(1);\n                expr = {\n                    type: ExprType.BINARY,\n                    operator: code,\n                    segs: [expr, readMultiplicativeExpr(walker)]\n                };\n                continue;\n        }\n\n        break;\n    }\n\n    return expr;\n}\n\n// exports = module.exports = readAdditiveExpr;\n\n\n/**\n * @file 读取关系判断表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readAdditiveExpr = require('./read-additive-expr');\n\n/**\n * 读取关系判断表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readRelationalExpr(walker) {\n    var expr = readAdditiveExpr(walker);\n    walker.goUntil();\n\n    var code = walker.currentCode();\n    switch (code) {\n        case 60: // <\n        case 62: // >\n            if (walker.nextCode() === 61) {\n                code += 61;\n                walker.go(1);\n            }\n\n            return {\n                type: ExprType.BINARY,\n                operator: code,\n                segs: [expr, readAdditiveExpr(walker)]\n            };\n    }\n\n    return expr;\n}\n\n// exports = module.exports = readRelationalExpr;\n\n\n/**\n * @file 读取相等比对表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readRelationalExpr = require('./read-relational-expr');\n\n/**\n * 读取相等比对表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readEqualityExpr(walker) {\n    var expr = readRelationalExpr(walker);\n    walker.goUntil();\n\n    var code = walker.currentCode();\n    switch (code) {\n        case 61: // =\n        case 33: // !\n            if (walker.nextCode() === 61) {\n                code += 61;\n                if (walker.nextCode() === 61) {\n                    code += 61;\n                    walker.go(1);\n                }\n\n                return {\n                    type: ExprType.BINARY,\n                    operator: code,\n                    segs: [expr, readRelationalExpr(walker)]\n                };\n            }\n\n            walker.go(-1);\n    }\n\n    return expr;\n}\n\n// exports = module.exports = readEqualityExpr;\n\n\n/**\n * @file 读取逻辑与表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readEqualityExpr = require('./read-equality-expr');\n\n/**\n * 读取逻辑与表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readLogicalANDExpr(walker) {\n    var expr = readEqualityExpr(walker);\n    walker.goUntil();\n\n    if (walker.currentCode() === 38) { // &\n        if (walker.nextCode() === 38) {\n            walker.go(1);\n            return {\n                type: ExprType.BINARY,\n                operator: 76,\n                segs: [expr, readLogicalANDExpr(walker)]\n            };\n        }\n\n        walker.go(-1);\n    }\n\n    return expr;\n}\n\n// exports = module.exports = readLogicalANDExpr;\n\n\n/**\n * @file 读取逻辑或表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readLogicalANDExpr = require('./read-logical-and-expr');\n\n/**\n * 读取逻辑或表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readLogicalORExpr(walker) {\n    var expr = readLogicalANDExpr(walker);\n    walker.goUntil();\n\n    if (walker.currentCode() === 124) { // |\n        if (walker.nextCode() === 124) {\n            walker.go(1);\n            return {\n                type: ExprType.BINARY,\n                operator: 248,\n                segs: [expr, readLogicalORExpr(walker)]\n            };\n        }\n\n        walker.go(-1);\n    }\n\n    return expr;\n}\n\n// exports = module.exports = readLogicalORExpr;\n\n\n/**\n * @file 解析表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var Walker = require('./walker');\n// var readTertiaryExpr = require('./read-tertiary-expr');\n\n/**\n * 解析表达式\n *\n * @param {string} source 源码\n * @return {Object}\n */\nfunction parseExpr(source) {\n    if (typeof source === 'object' && source.type) {\n        return source;\n    }\n\n    var expr = readTertiaryExpr(new Walker(source));\n    expr.raw = source;\n    return expr;\n}\n\n// exports = module.exports = parseExpr;\n\n\n/**\n * @file 读取调用\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readAccessor = require('./read-accessor');\n// var readTertiaryExpr = require('./read-tertiary-expr');\n\n/**\n * 读取调用\n *\n * @param {Walker} walker 源码读取对象\n * @param {Array=} defaultArgs 默认参数\n * @return {Object}\n */\nfunction readCall(walker, defaultArgs) {\n    walker.goUntil();\n    var ident = readAccessor(walker);\n    var args = [];\n\n    if (walker.goUntil(40)) { // (\n        while (!walker.goUntil(41)) { // )\n            args.push(readTertiaryExpr(walker));\n            walker.goUntil(44); // ,\n        }\n    }\n    else if (defaultArgs) {\n        args = defaultArgs;\n    }\n\n    return {\n        type: ExprType.CALL,\n        name: ident,\n        args: args\n    };\n}\n\n// exports = module.exports = readCall;\n\n\n/**\n * @file 解析调用\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var Walker = require('./walker');\n// var readCall = require('./read-call');\n\n/**\n * 解析调用\n *\n * @param {string} source 源码\n * @param {Array=} defaultArgs 默认参数\n * @return {Object}\n */\nfunction parseCall(source, defaultArgs) {\n    var expr = readCall(new Walker(source), defaultArgs);\n    expr.raw = source;\n    return expr;\n}\n\n// exports = module.exports = parseCall;\n\n\n/**\n * @file 解析插值替换\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var Walker = require('./walker');\n// var readTertiaryExpr = require('./read-tertiary-expr');\n// var ExprType = require('./expr-type');\n// var readCall = require('./read-call');\n\n/**\n * 解析插值替换\n *\n * @param {string} source 源码\n * @return {Object}\n */\nfunction parseInterp(source) {\n    var walker = new Walker(source);\n\n    var interp = {\n        type: ExprType.INTERP,\n        expr: readTertiaryExpr(walker),\n        filters: [],\n        raw: source\n    };\n\n    while (walker.goUntil(124)) { // |\n        var callExpr = readCall(walker);\n        switch (callExpr.name.paths[0].value) {\n            case 'html':\n                break;\n            case 'raw':\n                interp.original = 1;\n                break;\n            default:\n                interp.filters.push(callExpr);\n        }\n    }\n\n    return interp;\n}\n\n// exports = module.exports = parseInterp;\n\n\n/**\n * @file 解析文本\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var Walker = require('./walker');\n// var ExprType = require('./expr-type');\n// var parseInterp = require('./parse-interp');\n\n/**\n * 对字符串进行可用于new RegExp的字面化\n *\n * @inner\n * @param {string} source 需要字面化的字符串\n * @return {string} 字符串字面化结果\n */\nfunction regexpLiteral(source) {\n    return source.replace(/[\\^\\[\\]\\$\\(\\)\\{\\}\\?\\*\\.\\+\\\\]/g, function (c) {\n        return '\\\\' + c;\n    });\n}\n\n/**\n * 解析文本\n *\n * @param {string} source 源码\n * @param {Array?} delimiters 分隔符。默认为 ['{{', '}}']\n * @return {Object}\n */\nfunction parseText(source, delimiters) {\n    delimiters = delimiters || ['{{', '}}'];\n    var exprStartReg = new RegExp(\n        regexpLiteral(delimiters[0]) + '\\\\s*([\\\\s\\\\S]+?)\\\\s*' + regexpLiteral(delimiters[1]),\n        'ig'\n    );\n\n    var exprMatch;\n\n    var walker = new Walker(source);\n    var beforeIndex = 0;\n\n    var expr = {\n        type: ExprType.TEXT,\n        segs: []\n    };\n\n    function pushStringToSeg(text) {\n        text && expr.segs.push({\n            type: ExprType.STRING,\n            value: decodeHTML(text)\n        });\n    }\n\n    while ((exprMatch = walker.match(exprStartReg)) != null) {\n        pushStringToSeg(walker.cut(\n            beforeIndex,\n            walker.index - exprMatch[0].length\n        ));\n\n        var interp = parseInterp(exprMatch[1]);\n        expr.original = expr.original || interp.original;\n\n        expr.segs.push(interp);\n        beforeIndex = walker.index;\n    }\n\n    pushStringToSeg(walker.cut(beforeIndex));\n\n\n\n    if (expr.segs.length === 1 && expr.segs[0].type === ExprType.STRING) {\n        expr.value = expr.segs[0].value;\n    }\n\n    return expr;\n}\n\nfunction decodeHTML(source) {\n    return source\n        .replace(/&lt;/g, '<')\n        .replace(/&gt;/g, '>')\n        .replace(/&nbsp;/g, ' ')\n        .replace(/&quot;/g, '\\\"')\n        .replace(/&#([0-9]+);/g, function (match, code) {\n            return String.fromCharCode(+code);\n        })\n        .replace(/&#x([0-9a-f]+);/ig, function (match, code) {\n            return String.fromCharCode(parseInt(code, 16));\n        })\n        .replace(/&amp;/g, '&');\n}\n\n// exports = module.exports = parseText;\n\n\n/**\n * @file 解析指令\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var Walker = require('./walker');\n// var parseExpr = require('./parse-expr');\n// var parseCall = require('./parse-call');\n// var parseText = require('./parse-text');\n// var readAccessor = require('./read-accessor');\n\n/**\n * 指令解析器\n *\n * @inner\n * @type {Object}\n */\nvar directiveParsers = {\n    'for': function (value) {\n        var walker = new Walker(value);\n        var match = walker.match(/^\\s*([\\$0-9a-z_]+)(\\s*,\\s*([\\$0-9a-z_]+))?\\s+in\\s+/ig);\n\n        if (match) {\n            return {\n                item: parseExpr(match[1]),\n                index: parseExpr(match[3] || '$index'),\n                value: readAccessor(walker)\n            };\n        }\n\n        // #[begin] error\n        throw new Error('[SAN FATAL] for syntax error: ' + value);\n        // #[end]\n    },\n\n    'ref': function (value, options) {\n        return {\n            value: parseText(value, options.delimiters)\n        };\n    },\n\n    'if': function (value) {\n        return {\n            value: parseExpr(value.replace(/(^\\{\\{|\\}\\}$)/g, ''))\n        };\n    },\n\n    'elif': function (value) {\n        return {\n            value: parseExpr(value.replace(/(^\\{\\{|\\}\\}$)/g, ''))\n        };\n    },\n\n    'else': function (value) {\n        return {\n            value: {}\n        };\n    },\n\n    'html': function (value) {\n        return {\n            value: parseExpr(value.replace(/(^\\{\\{|\\}\\}$)/g, ''))\n        };\n    },\n\n    'transition': function (value) {\n        return {\n            value: parseCall(value)\n        };\n    }\n};\n\n/**\n * 解析指令\n *\n * @param {ANode} aNode 抽象节点\n * @param {string} name 指令名称\n * @param {string} value 指令值\n * @param {Object} options 解析参数\n * @param {Array?} options.delimiters 插值分隔符列表\n */\nfunction parseDirective(aNode, name, value, options) {\n    if (name === 'else-if') {\n        name = 'elif';\n    }\n\n    var parser = directiveParsers[name];\n    if (parser) {\n        (aNode.directives[name] = parser(value, options)).raw = value;\n    }\n}\n\n// exports = module.exports = parseDirective;\n\n\n/**\n * @file 对属性信息进行处理\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('../parser/expr-type');\n\n/**\n * 对属性信息进行处理\n * 对组件的 binds 或者特殊的属性（比如 input 的 checked）需要处理\n *\n * 扁平化：\n * 当 text 解析只有一项时，要么就是 string，要么就是 interp\n * interp 有可能是绑定到组件属性的表达式，不希望被 eval text 成 string\n * 所以这里做个处理，只有一项时直接抽出来\n *\n * bool属性：\n * 当绑定项没有值时，默认为true\n *\n * @param {Object} prop 属性对象\n */\nfunction postProp(prop) {\n    var expr = prop.expr;\n\n    if (expr.type === ExprType.TEXT) {\n        switch (expr.segs.length) {\n            case 0:\n                prop.expr = {\n                    type: ExprType.BOOL,\n                    value: true\n                };\n                break;\n\n            case 1:\n                expr = prop.expr = expr.segs[0];\n                if (expr.type === ExprType.INTERP && expr.filters.length === 0) {\n                    prop.expr = expr.expr;\n                }\n        }\n    }\n}\n\n// exports = module.exports = postProp;\n\n\n/**\n * @file 解析抽象节点属性\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var each = require('../util/each');\n// var kebab2camel = require('../util/kebab2camel');\n// var ExprType = require('./expr-type');\n// var createAccessor = require('./create-accessor');\n// var parseExpr = require('./parse-expr');\n// var parseCall = require('./parse-call');\n// var parseText = require('./parse-text');\n// var parseDirective = require('./parse-directive');\n// var postProp = require('./post-prop');\n\n\n/**\n * 解析抽象节点属性\n *\n * @param {ANode} aNode 抽象节点\n * @param {string} name 属性名称\n * @param {string} value 属性值\n * @param {Object} options 解析参数\n * @param {Array?} options.delimiters 插值分隔符列表\n */\nfunction integrateAttr(aNode, name, value, options) {\n    var prefixIndex = name.indexOf('-');\n    var realName;\n    var prefix;\n\n    if (prefixIndex > 0) {\n        prefix = name.slice(0, prefixIndex);\n        realName = name.slice(prefixIndex + 1);\n    }\n\n    switch (prefix) {\n        case 'on':\n            var event = {\n                name: realName,\n                modifier: {}\n            };\n            aNode.events.push(event);\n\n            var colonIndex;\n            while ((colonIndex = value.indexOf(':')) > 0) {\n                var modifier = value.slice(0, colonIndex);\n\n                // eventHandler(\"dd:aa\") 这种情况不能算modifier，需要辨识\n                if (!/^[a-z]+$/i.test(modifier)) {\n                    break;\n                }\n\n                event.modifier[modifier] = true;\n                value = value.slice(colonIndex + 1);\n            }\n\n            event.expr = parseCall(value, [\n                createAccessor([\n                    { type: ExprType.STRING, value: '$event' }\n                ])\n            ]);\n            break;\n\n        case 'san':\n        case 's':\n            parseDirective(aNode, realName, value, options);\n            break;\n\n        case 'prop':\n            integrateProp(aNode, realName, value, options);\n            break;\n\n        case 'var':\n            if (!aNode.vars) {\n                aNode.vars = [];\n            }\n\n            realName = kebab2camel(realName);\n            aNode.vars.push({\n                name: realName,\n                expr: parseExpr(value.replace(/(^\\{\\{|\\}\\}$)/g, ''))\n            });\n            break;\n\n        default:\n            integrateProp(aNode, name, value, options);\n    }\n}\n\n/**\n * 解析抽象节点绑定属性\n *\n * @inner\n * @param {ANode} aNode 抽象节点\n * @param {string} name 属性名称\n * @param {string} value 属性值\n * @param {Object} options 解析参数\n * @param {Array?} options.delimiters 插值分隔符列表\n */\nfunction integrateProp(aNode, name, value, options) {\n    // parse two way binding, e.g. value=\"{=ident=}\"\n    var xMatch = value.match(/^\\{=\\s*(.*?)\\s*=\\}$/);\n\n    if (xMatch) {\n        aNode.props.push({\n            name: name,\n            expr: parseExpr(xMatch[1]),\n            x: 1,\n            raw: value\n        });\n\n        return;\n    }\n\n    // parse normal prop\n    var prop = {\n        name: name,\n        expr: parseText(value, options.delimiters),\n        raw: value\n    };\n\n    // 这里不能把只有一个插值的属性抽取\n    // 因为插值里的值可能是html片段，容易被注入\n    // 组件的数据绑定在组件init时做抽取\n    switch (name) {\n        case 'class':\n        case 'style':\n            each(prop.expr.segs, function (seg) {\n                if (seg.type === ExprType.INTERP) {\n                    seg.filters.push({\n                        type: ExprType.CALL,\n                        name: createAccessor([\n                            {\n                                type: ExprType.STRING,\n                                value: '_' + prop.name\n                            }\n                        ]),\n                        args: []\n                    });\n                }\n            });\n            break;\n\n        case 'checked':\n            if (aNode.tagName === 'input') {\n                postProp(prop);\n            }\n            break;\n    }\n\n    aNode.props.push(prop);\n}\n\n\n// exports = module.exports = integrateAttr;\n\n\n/**\n * @file 解析模板\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var createANode = require('./create-a-node');\n// var Walker = require('./walker');\n// var integrateAttr = require('./integrate-attr');\n// var parseText = require('./parse-text');\n// var autoCloseTags = require('../browser/auto-close-tags');\n\n// #[begin] error\nfunction getXPath(stack, currentTagName) {\n    var path = ['ROOT'];\n    for (var i = 1, len = stack.length; i < len; i++) {\n        path.push(stack[i].tagName);\n    }\n    if (currentTagName) {\n        path.push(currentTagName);\n    }\n    return path.join('>');\n}\n// #[end]\n\n/* eslint-disable fecs-max-statements */\n\n/**\n * 解析 template\n *\n * @param {string} source template源码\n * @param {Object?} options 解析参数\n * @param {string?} options.trimWhitespace 空白文本的处理策略。none|blank|all\n * @param {Array?} options.delimiters 插值分隔符列表\n * @return {ANode}\n */\nfunction parseTemplate(source, options) {\n    options = options || {};\n    options.trimWhitespace = options.trimWhitespace || 'none';\n\n    var rootNode = createANode();\n\n    if (typeof source !== 'string') {\n        return rootNode;\n    }\n\n    source = source.replace(/<!--([\\s\\S]*?)-->/mg, '').replace(/(^\\s+|\\s+$)/g, '');\n    var walker = new Walker(source);\n\n    var tagReg = /<(\\/)?([a-z0-9-]+)\\s*/ig;\n    var attrReg = /([-:0-9a-z\\(\\)\\[\\]]+)(\\s*=\\s*(['\"])([^\\3]*?)\\3)?\\s*/ig;\n\n    var tagMatch;\n    var currentNode = rootNode;\n    var stack = [rootNode];\n    var stackIndex = 0;\n    var beforeLastIndex = 0;\n\n    while ((tagMatch = walker.match(tagReg)) != null) {\n        var tagEnd = tagMatch[1];\n        var tagName = tagMatch[2].toLowerCase();\n\n        pushTextNode(source.slice(\n            beforeLastIndex,\n            walker.index - tagMatch[0].length\n        ));\n\n        // 62: >\n        // 47: /\n        // 处理 </xxxx >\n        if (tagEnd && walker.currentCode() === 62) {\n            // 满足关闭标签的条件时，关闭标签\n            // 向上查找到对应标签，找不到时忽略关闭\n            var closeIndex = stackIndex;\n\n            // #[begin] error\n            // 如果正在闭合一个自闭合的标签，例如 </input>，报错\n            if (autoCloseTags[tagName]) {\n                throw new Error(''\n                    + '[SAN ERROR] ' + getXPath(stack, tagName) + ' is a `auto closed` tag, '\n                    + 'so it cannot be closed with </' + tagName + '>'\n                );\n            }\n\n            // 如果关闭的 tag 和当前打开的不一致，报错\n            if (\n                stack[closeIndex].tagName !== tagName\n                // 这里要把 table 自动添加 tbody 的情况给去掉\n                && !(tagName === 'table' && stack[closeIndex].tagName === 'tbody')\n            ) {\n                throw new Error('[SAN ERROR] ' + getXPath(stack) + ' is closed with ' + tagName);\n            }\n            // #[end]\n\n            while (closeIndex > 0 && stack[closeIndex].tagName !== tagName) {\n                closeIndex--;\n            }\n\n            if (closeIndex > 0) {\n                stackIndex = closeIndex - 1;\n                currentNode = stack[stackIndex];\n            }\n            walker.go(1);\n        }\n\n        // #[begin] error\n        // 处理 </xxx 非正常闭合标签\n        else if (tagEnd) {\n\n            // 如果闭合标签时，匹配后的下一个字符是 <，即下一个标签的开始，那么当前闭合标签未闭合\n            if (walker.currentCode() === 60) {\n                throw new Error(''\n                    + '[SAN ERROR] ' + getXPath(stack)\n                    + '\\'s close tag not closed'\n                );\n            }\n\n            // 闭合标签有属性\n            throw new Error(''\n                + '[SAN ERROR] ' + getXPath(stack)\n                + '\\'s close tag has attributes'\n            );\n\n        }\n        // #[end]\n\n        else if (!tagEnd) {\n            var aElement = createANode({\n                tagName: tagName\n            });\n            var tagClose = autoCloseTags[tagName];\n\n            // 解析 attributes\n\n            /* eslint-disable no-constant-condition */\n            while (1) {\n            /* eslint-enable no-constant-condition */\n\n                var nextCharCode = walker.currentCode();\n\n                // 标签结束时跳出 attributes 读取\n                // 标签可能直接结束或闭合结束\n                if (nextCharCode === 62) {\n                    walker.go(1);\n                    break;\n                }\n                // 遇到 /> 按闭合处理\n                else if (nextCharCode === 47\n                    && walker.charCode(walker.index + 1) === 62\n                ) {\n                    walker.go(2);\n                    tagClose = 1;\n                    break;\n                }\n\n                // #[begin] error\n                // 在处理一个 open 标签时，如果遇到了 <， 即下一个标签的开始，则当前标签未能正常闭合，报错\n                if (nextCharCode === 60) {\n                    throw new Error('[SAN ERROR] ' + getXPath(stack, tagName) + ' is not closed');\n                }\n                // #[end]\n\n                // 读取 attribute\n                var attrMatch = walker.match(attrReg);\n                if (attrMatch) {\n\n                    // #[begin] error\n                    // 如果属性有 =，但没取到 value，报错\n                    if (\n                        walker.charCode(attrMatch.index + attrMatch[1].length) === 61\n                        && !attrMatch[2]\n                    ) {\n                        throw new Error(''\n                            + '[SAN ERROR] ' + getXPath(stack, tagName) + ' attribute `'\n                            + attrMatch[1] + '` is not wrapped with \"\"'\n                        );\n                    }\n                    // #[end]\n\n                    integrateAttr(\n                        aElement,\n                        attrMatch[1],\n                        attrMatch[2] ? attrMatch[4] : '',\n                        options\n                    );\n                }\n\n            }\n\n            // match if directive for else/elif directive\n            var elseDirective = aElement.directives['else'] || aElement.directives.elif; // eslint-disable-line dot-notation\n            if (elseDirective) {\n                var parentChildrenLen = currentNode.children.length;\n\n                while (parentChildrenLen--) {\n                    var parentChild = currentNode.children[parentChildrenLen];\n                    if (parentChild.textExpr) {\n                        currentNode.children.splice(parentChildrenLen, 1);\n                        continue;\n                    }\n\n                    // #[begin] error\n                    if (!parentChild.directives['if']) { // eslint-disable-line dot-notation\n                        throw new Error('[SAN FATEL] else not match if.');\n                    }\n                    // #[end]\n\n                    parentChild.elses = parentChild.elses || [];\n                    parentChild.elses.push(aElement);\n\n                    break;\n                }\n            }\n            else {\n                if (aElement.tagName === 'tr' && currentNode.tagName === 'table') {\n                    var tbodyNode = createANode({\n                        tagName: 'tbody'\n                    });\n                    currentNode.children.push(tbodyNode);\n                    currentNode = tbodyNode;\n                    stack[++stackIndex] = tbodyNode;\n                }\n\n                currentNode.children.push(aElement);\n            }\n\n            if (!tagClose) {\n                currentNode = aElement;\n                stack[++stackIndex] = aElement;\n            }\n        }\n\n        beforeLastIndex = walker.index;\n    }\n\n    pushTextNode(walker.cut(beforeLastIndex));\n\n    return rootNode;\n\n    /**\n     * 在读取栈中添加文本节点\n     *\n     * @inner\n     * @param {string} text 文本内容\n     */\n    function pushTextNode(text) {\n        switch (options.trimWhitespace) {\n            case 'blank':\n                if (/^\\s+$/.test(text)) {\n                    text = null;\n                }\n                break;\n\n            case 'all':\n                text = text.replace(/(^\\s+|\\s+$)/g, '');\n                break;\n        }\n\n        if (text) {\n            currentNode.children.push(createANode({\n                textExpr: parseText(text, options.delimiters)\n            }));\n        }\n    }\n}\n\n/* eslint-enable fecs-max-statements */\n\n// exports = module.exports = parseTemplate;\n\n\n/**\n * @file 默认filter\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n/* eslint-disable fecs-camelcase */\n/* eslint-disable guard-for-in */\n\n/**\n * 默认filter\n *\n * @const\n * @type {Object}\n */\nvar DEFAULT_FILTERS = {\n\n    /**\n     * URL编码filter\n     *\n     * @param {string} source 源串\n     * @return {string} 替换结果串\n     */\n    url: encodeURIComponent,\n\n    _class: function (source) {\n        if (source instanceof Array) {\n            return source.join(' ');\n        }\n\n        return source;\n    },\n\n    _style: function (source) {\n        if (typeof source === 'object') {\n            var result = '';\n            for (var key in source) {\n                result += key + ':' + source[key] + ';';\n            }\n\n            return result;\n        }\n\n        return source;\n    },\n\n    _sep: function (source, sep) {\n        return source ? sep + source : source;\n    }\n};\n/* eslint-enable fecs-camelcase */\n\n// exports = module.exports = DEFAULT_FILTERS;\n\n\n/**\n * @file 表达式计算\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('../parser/expr-type');\n// var DEFAULT_FILTERS = require('./default-filters');\n// var evalArgs = require('./eval-args');\n// var dataCache = require('./data-cache');\n\n/**\n * 计算表达式的值\n *\n * @param {Object} expr 表达式对象\n * @param {Data} data 数据容器对象\n * @param {Component=} owner 所属组件环境\n * @return {*}\n */\nfunction evalExpr(expr, data, owner) {\n    if (expr.value != null) {\n        return expr.value;\n    }\n\n    var value = dataCache.get(data, expr);\n\n    if (value == null) {\n        switch (expr.type) {\n            case ExprType.UNARY:\n                value = !evalExpr(expr.expr, data, owner);\n                break;\n\n            case ExprType.BINARY:\n                var leftValue = evalExpr(expr.segs[0], data, owner);\n                var rightValue = evalExpr(expr.segs[1], data, owner);\n\n                /* eslint-disable eqeqeq */\n                switch (expr.operator) {\n                    case 37:\n                        value = leftValue % rightValue;\n                        break;\n                    case 43:\n                        value = leftValue + rightValue;\n                        break;\n                    case 45:\n                        value = leftValue - rightValue;\n                        break;\n                    case 42:\n                        value = leftValue * rightValue;\n                        break;\n                    case 47:\n                        value = leftValue / rightValue;\n                        break;\n                    case 60:\n                        value = leftValue < rightValue;\n                        break;\n                    case 62:\n                        value = leftValue > rightValue;\n                        break;\n                    case 76:\n                        value = leftValue && rightValue;\n                        break;\n                    case 94:\n                        value = leftValue != rightValue;\n                        break;\n                    case 121:\n                        value = leftValue <= rightValue;\n                        break;\n                    case 122:\n                        value = leftValue == rightValue;\n                        break;\n                    case 123:\n                        value = leftValue >= rightValue;\n                        break;\n                    case 155:\n                        value = leftValue !== rightValue;\n                        break;\n                    case 183:\n                        value = leftValue === rightValue;\n                        break;\n                    case 248:\n                        value = leftValue || rightValue;\n                        break;\n                }\n                /* eslint-enable eqeqeq */\n                break;\n\n            case ExprType.TERTIARY:\n                value = evalExpr(\n                    expr.segs[evalExpr(expr.segs[0], data, owner) ? 1 : 2],\n                    data,\n                    owner\n                );\n                break;\n\n            case ExprType.ACCESSOR:\n                value = data.get(expr);\n                break;\n\n            case ExprType.INTERP:\n                value = evalExpr(expr.expr, data, owner);\n\n                if (owner) {\n                    for (var i = 0, l = expr.filters.length; i < l; i++) {\n                        var filter = expr.filters[i];\n                        var filterName = filter.name.paths[0].value;\n\n                        if (owner.filters[filterName]) {\n                            value = owner.filters[filterName].apply(\n                                owner,\n                                [value].concat(evalArgs(filter.args, data, owner))\n                            );\n                        }\n                        else if (DEFAULT_FILTERS[filterName]) {\n                            value = DEFAULT_FILTERS[filterName](\n                                value,\n                                filter.args[0] ? filter.args[0].value : ''\n                            );\n                        }\n                    }\n                }\n\n                if (value == null) {\n                    value = '';\n                }\n\n                break;\n\n            /* eslint-disable no-redeclare */\n            case ExprType.TEXT:\n                var buf = '';\n                for (var i = 0, l = expr.segs.length; i < l; i++) {\n                    var seg = expr.segs[i];\n                    buf += seg.value || evalExpr(seg, data, owner);\n                }\n                return buf;\n        }\n\n        dataCache.set(data, expr, value);\n    }\n\n    return value;\n}\n\n// exports = module.exports = evalExpr;\n\n\n/**\n * @file 为函数调用计算参数数组的值\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var evalExpr = require('../runtime/eval-expr');\n\n/**\n * 为函数调用计算参数数组的值\n *\n * @param {Array} args 参数表达式列表\n * @param {Data} data 数据环境\n * @param {Component} owner 组件环境\n * @return {Array}\n */\nfunction evalArgs(args, data, owner) {\n    var result = [];\n    for (var i = 0; i < args.length; i++) {\n        result.push(evalExpr(args[i], data, owner));\n    }\n\n    return result;\n}\n\n// exports = module.exports = evalArgs;\n\n\n/**\n * @file 数据缓存管理器\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n\nvar dataCacheSource = {};\nvar dataCacheClearly = 1;\n\n/**\n * 数据缓存管理器\n *\n * @const\n * @type {Object}\n */\nvar dataCache = {\n    clear: function () {\n        if (!dataCacheClearly) {\n            dataCacheClearly = 1;\n            dataCacheSource = {};\n        }\n    },\n\n    set: function (data, expr, value) {\n        if (expr.raw) {\n            dataCacheClearly = 0;\n            (dataCacheSource[data.id] = dataCacheSource[data.id] || {})[expr.raw] = value;\n        }\n    },\n\n    get: function (data, expr) {\n        if (expr.raw && dataCacheSource[data.id]) {\n            return dataCacheSource[data.id][expr.raw];\n        }\n    }\n};\n\n\n// exports = module.exports = dataCache;\n\n\n/**\n * @file 比较变更表达式与目标表达式之间的关系\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('../parser/expr-type');\n// var evalExpr = require('./eval-expr');\n// var each = require('../util/each');\n\n/**\n * 判断变更表达式与多个表达式之间的关系，0为完全没关系，1为有关系\n *\n * @inner\n * @param {Object} changeExpr 目标表达式\n * @param {Array} exprs 多个源表达式\n * @param {Data} data 表达式所属数据环境\n * @return {number}\n */\nfunction changeExprCompareExprs(changeExpr, exprs, data) {\n    for (var i = 0, l = exprs.length; i < l; i++) {\n        if (changeExprCompare(changeExpr, exprs[i], data)) {\n            return 1;\n        }\n    }\n\n    return 0;\n}\n\n/**\n * 比较变更表达式与目标表达式之间的关系，用于视图更新判断\n * 视图更新需要根据其关系，做出相应的更新行为\n *\n * 0: 完全没关系\n * 1: 变更表达式是目标表达式的母项(如a与a.b) 或 表示需要完全变化\n * 2: 变更表达式是目标表达式相等\n * >2: 变更表达式是目标表达式的子项，如a.b.c与a.b\n *\n * @param {Object} changeExpr 变更表达式\n * @param {Object} expr 要比较的目标表达式\n * @param {Data} data 表达式所属数据环境\n * @return {number}\n */\nfunction changeExprCompare(changeExpr, expr, data) {\n    switch (expr.type) {\n        case ExprType.ACCESSOR:\n            var paths = expr.paths;\n            var len = paths.length;\n            var changePaths = changeExpr.paths;\n            var changeLen = changePaths.length;\n\n            var result = 1;\n            for (var i = 0; i < len; i++) {\n                var pathExpr = paths[i];\n\n                if (pathExpr.type === ExprType.ACCESSOR\n                    && changeExprCompare(changeExpr, pathExpr, data)\n                ) {\n                    return 1;\n                }\n\n                if (result && i < changeLen\n                    /* eslint-disable eqeqeq */\n                    && (pathExpr.value || evalExpr(pathExpr, data))\n                        != (changePaths[i].value || evalExpr(changePaths[i], data))\n                    /* eslint-enable eqeqeq */\n                ) {\n                    result = 0;\n                }\n            }\n\n            if (result) {\n                result = Math.max(1, changeLen - len + 2);\n            }\n            return result;\n\n        case ExprType.UNARY:\n            return changeExprCompare(changeExpr, expr.expr, data) ? 1 : 0;\n\n\n        case ExprType.TEXT:\n        case ExprType.BINARY:\n        case ExprType.TERTIARY:\n            return changeExprCompareExprs(changeExpr, expr.segs, data);\n\n        case ExprType.INTERP:\n            if (!changeExprCompare(changeExpr, expr.expr, data)) {\n                var filterResult;\n                each(expr.filters, function (filter) {\n                    filterResult = changeExprCompareExprs(changeExpr, filter.args, data);\n                    return !filterResult;\n                });\n\n                return filterResult ? 1 : 0;\n            }\n\n            return 1;\n    }\n\n    return 0;\n}\n\n// exports = module.exports = changeExprCompare;\n\n\n/**\n * @file 数据变更类型枚举\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 数据变更类型枚举\n *\n * @const\n * @type {Object}\n */\nvar DataChangeType = {\n    SET: 1,\n    SPLICE: 2\n};\n\n// exports = module.exports = DataChangeType;\n\n\n/**\n * @file 生命周期类\n * @author errorrik(errorrik@gmail.com)\n */\n\nfunction lifeCycleOwnIs(name) {\n    return this[name];\n}\n\n/* eslint-disable fecs-valid-var-jsdoc */\n/**\n * 节点生命周期信息\n *\n * @inner\n * @type {Object}\n */\nvar LifeCycle = {\n    start: {},\n\n    compiled: {\n        is: lifeCycleOwnIs,\n        compiled: true\n    },\n\n    inited: {\n        is: lifeCycleOwnIs,\n        compiled: true,\n        inited: true\n    },\n\n    painting: {\n        is: lifeCycleOwnIs,\n        compiled: true,\n        inited: true,\n        painting: true\n    },\n\n    created: {\n        is: lifeCycleOwnIs,\n        compiled: true,\n        inited: true,\n        created: true\n    },\n\n    attached: {\n        is: lifeCycleOwnIs,\n        compiled: true,\n        inited: true,\n        created: true,\n        attached: true\n    },\n\n    leaving: {\n        is: lifeCycleOwnIs,\n        compiled: true,\n        inited: true,\n        created: true,\n        attached: true,\n        leaving: true\n    },\n\n    detached: {\n        is: lifeCycleOwnIs,\n        compiled: true,\n        inited: true,\n        created: true,\n        detached: true\n    },\n\n    disposed: {\n        is: lifeCycleOwnIs,\n        disposed: true\n    }\n};\n/* eslint-enable fecs-valid-var-jsdoc */\n\n\n// exports = module.exports = LifeCycle;\n\n\n/**\n * @file 节点类型\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 节点类型\n *\n * @const\n * @type {Object}\n */\nvar NodeType = {\n    TEXT: 1,\n    IF: 2,\n    FOR: 3,\n    ELEM: 4,\n    CMPT: 5,\n    SLOT: 6,\n    TPL: 7\n};\n\n// exports = module.exports = NodeType;\n\n\n/**\n * @file 获取 ANode props 数组中相应 name 的项\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 获取 ANode props 数组中相应 name 的项\n *\n * @param {Object} aNode ANode对象\n * @param {string} name name属性匹配串\n * @return {Object}\n */\nfunction getANodeProp(aNode, name) {\n    var index = aNode.hotspot.props[name];\n    if (index != null) {\n        return aNode.props[index];\n    }\n}\n\n// exports = module.exports = getANodeProp;\n\n\n/**\n * @file 获取属性处理对象\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var contains = require('../util/contains');\n// var empty = require('../util/empty');\n// var svgTags = require('../browser/svg-tags');\n// var evalExpr = require('../runtime/eval-expr');\n// var getANodeProp = require('./get-a-node-prop');\n// var NodeType = require('./node-type');\n\n\n/**\n * HTML 属性和 DOM 操作属性的对照表\n *\n * @inner\n * @const\n * @type {Object}\n */\nvar HTML_ATTR_PROP_MAP = {\n    'readonly': 'readOnly',\n    'cellpadding': 'cellPadding',\n    'cellspacing': 'cellSpacing',\n    'colspan': 'colSpan',\n    'rowspan': 'rowSpan',\n    'valign': 'vAlign',\n    'usemap': 'useMap',\n    'frameborder': 'frameBorder',\n    'for': 'htmlFor'\n};\n\n/**\n * 默认的元素的属性设置的变换方法\n *\n * @inner\n * @type {Object}\n */\nvar defaultElementPropHandler = {\n    prop: function (el, value, name, element) {\n        var propName = HTML_ATTR_PROP_MAP[name] || name;\n\n        // input 的 type 是个特殊属性，其实也应该用 setAttribute\n        // 但是 type 不应该运行时动态改变，否则会有兼容性问题\n        // 所以这里直接就不管了\n        if (propName in el) {\n            el[propName] = value == null ? '' : value;\n        }\n        else {\n            el.setAttribute(name, value);\n        }\n\n        // attribute 绑定的是 text，所以不会出现 null 的情况，这里无需处理\n        // 换句话来说，san 是做不到 attribute 时有时无的\n        // if (value == null) {\n        //     el.removeAttribute(name);\n        // }\n    },\n\n    output: function (element, bindInfo, data) {\n        data.set(bindInfo.expr, element.el[bindInfo.name], {\n            target: {\n                id: element.id,\n                prop: bindInfo.name\n            }\n        });\n    }\n};\n\nvar svgPropHandler = {\n    prop: function (el, value, name) {\n        el.setAttribute(name, value);\n    }\n};\n\nvar boolPropHandler = {\n    prop: function (el, value, name, element, prop) {\n        var propName = HTML_ATTR_PROP_MAP[name] || name;\n        el[propName] = !!(prop && prop.raw === ''\n            || value && value !== 'false' && value !== '0');\n    }\n};\n\n/* eslint-disable fecs-properties-quote */\n/**\n * 默认的属性设置变换方法\n *\n * @inner\n * @type {Object}\n */\nvar defaultElementPropHandlers = {\n    style: {\n        prop: function (el, value) {\n            el.style.cssText = value;\n        }\n    },\n\n    'class': { // eslint-disable-line\n        prop: function (el, value) {\n            el.className = value;\n        }\n    },\n\n    slot: {\n        prop: empty\n    },\n\n    readonly: boolPropHandler,\n    disabled: boolPropHandler,\n    autofocus: boolPropHandler,\n    required: boolPropHandler,\n    draggable: boolPropHandler\n};\n/* eslint-enable fecs-properties-quote */\n\nvar analInputChecker = {\n    checkbox: contains,\n    radio: function (a, b) {\n        return a === b;\n    }\n};\n\nfunction analInputCheckedState(element, value, oper) {\n    var bindValue = getANodeProp(element.aNode, 'value');\n    var bindType = getANodeProp(element.aNode, 'type');\n\n    if (bindValue && bindType) {\n        var type = evalExpr(bindType.expr, element.scope, element.owner);\n\n        if (analInputChecker[type]) {\n            var bindChecked = getANodeProp(element.aNode, 'checked');\n            if (!bindChecked.hintExpr) {\n                bindChecked.hintExpr = bindValue.expr;\n            }\n\n            return !!analInputChecker[type](\n                value,\n                evalExpr(bindValue.expr, element.scope, element.owner)\n            );\n        }\n    }\n}\n\nvar elementPropHandlers = {\n    input: {\n        multiple: boolPropHandler,\n        checked: {\n            prop: function (el, value, name, element) {\n                var state = analInputCheckedState(element, value);\n\n                boolPropHandler.prop(\n                    el,\n                    state != null ? state : value,\n                    'checked',\n                    element\n                );\n            },\n\n            output: function (element, bindInfo, data) {\n                var el = element.el;\n                var bindValue = getANodeProp(element.aNode, 'value');\n                var bindType = getANodeProp(element.aNode, 'type') || {};\n\n                if (bindValue && bindType) {\n                    switch (bindType.raw) {\n                        case 'checkbox':\n                            data[el.checked ? 'push' : 'remove'](bindInfo.expr, el.value);\n                            return;\n\n                        case 'radio':\n                            el.checked && data.set(bindInfo.expr, el.value, {\n                                target: {\n                                    id: element.id,\n                                    prop: bindInfo.name\n                                }\n                            });\n                            return;\n                    }\n                }\n\n                defaultElementPropHandler.output(element, bindInfo, data);\n            }\n        }\n    },\n\n    option: {\n        value: {\n            prop: function (el, value, name, element) {\n                defaultElementPropHandler.prop(el, value, name, element);\n\n                if (isOptionSelected(element, value)) {\n                    el.selected = true;\n                }\n            }\n        }\n    },\n\n    select: {\n        value: {\n            prop: function (el, value) {\n                el.value = value || '';\n            },\n\n            output: defaultElementPropHandler.output\n        }\n    }\n};\n\nfunction isOptionSelected(element, value) {\n    var parentSelect = element.parent;\n    while (parentSelect) {\n        if (parentSelect.tagName === 'select') {\n            break;\n        }\n\n        parentSelect = parentSelect.parent;\n    }\n\n\n    if (parentSelect) {\n        var selectValue = null;\n        var prop;\n        var expr;\n\n        if ((prop = getANodeProp(parentSelect.aNode, 'value'))\n            && (expr = prop.expr)\n        ) {\n            selectValue = parentSelect.nodeType === NodeType.CMPT\n                ? evalExpr(expr, parentSelect.data, parentSelect)\n                : evalExpr(expr, parentSelect.scope, parentSelect.owner)\n                || '';\n        }\n\n        if (selectValue === value) {\n            return 1;\n        }\n    }\n}\n\n\n/**\n * 获取属性处理对象\n *\n * @param {string} tagName 元素tag\n * @param {string} attrName 属性名\n * @return {Object}\n */\nfunction getPropHandler(tagName, attrName) {\n    if (svgTags[tagName]) {\n        return svgPropHandler;\n    }\n\n    var tagPropHandlers = elementPropHandlers[tagName];\n    if (!tagPropHandlers) {\n        tagPropHandlers = elementPropHandlers[tagName] = {};\n    }\n\n    var propHandler = tagPropHandlers[attrName];\n    if (!propHandler) {\n        propHandler = defaultElementPropHandlers[attrName] || defaultElementPropHandler;\n        tagPropHandlers[attrName] = propHandler;\n    }\n\n    return propHandler;\n}\n\n// exports = module.exports = getPropHandler;\n\n\n/**\n * @file 判断变更是否来源于元素\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 判断变更是否来源于元素，来源于元素时，视图更新需要阻断\n *\n * @param {Object} change 变更对象\n * @param {Element} element 元素\n * @param {string?} propName 属性名，可选。需要精确判断是否来源于此属性时传入\n * @return {boolean}\n */\nfunction isDataChangeByElement(change, element, propName) {\n    var changeTarget = change.option.target;\n    return changeTarget && changeTarget.id === element.id\n        && (!propName || changeTarget.prop === propName);\n}\n\n// exports = module.exports = isDataChangeByElement;\n\n\n/**\n * @file 在对象上使用accessor表达式查找方法\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var evalExpr = require('../runtime/eval-expr');\n\n/**\n * 在对象上使用accessor表达式查找方法\n *\n * @param {Object} source 源对象\n * @param {Object} nameExpr 表达式\n * @param {Data} data 所属数据环境\n * @return {Function}\n */\nfunction findMethod(source, nameExpr, data) {\n    var method = source;\n\n    for (var i = 0; method != null && i < nameExpr.paths.length; i++) {\n        method = method[evalExpr(nameExpr.paths[i], data)];\n    }\n\n    return method;\n}\n\n// exports = module.exports = findMethod;\n\n\n/**\n * @file 数据类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('../parser/expr-type');\n// var evalExpr = require('./eval-expr');\n// var DataChangeType = require('./data-change-type');\n// var createAccessor = require('../parser/create-accessor');\n// var parseExpr = require('../parser/parse-expr');\n// var guid = require('../util/guid');\n// var dataCache = require('./data-cache');\n\n/**\n * 数据类\n *\n * @class\n * @param {Object?} data 初始数据\n * @param {Model?} parent 父级数据容器\n */\nfunction Data(data, parent) {\n    this.id = guid();\n    this.parent = parent;\n    this.raw = data || {};\n    this.listeners = [];\n}\n\n// #[begin] error\n// 以下两个函数只在开发模式下可用，在生产模式下不存在\n/**\n * DataTypes 检测\n */\nData.prototype.checkDataTypes = function () {\n    if (this.typeChecker) {\n        this.typeChecker(this.raw);\n    }\n};\n\n/**\n * 设置 type checker\n *\n * @param  {Function} typeChecker 类型校验器\n */\nData.prototype.setTypeChecker = function (typeChecker) {\n    this.typeChecker = typeChecker;\n};\n\n// #[end]\n\n/**\n * 添加数据变更的事件监听器\n *\n * @param {Function} listener 监听函数\n */\nData.prototype.listen = function (listener) {\n    if (typeof listener === 'function') {\n        this.listeners.push(listener);\n    }\n};\n\n/**\n * 移除数据变更的事件监听器\n *\n * @param {Function} listener 监听函数\n */\nData.prototype.unlisten = function (listener) {\n    var len = this.listeners.length;\n    while (len--) {\n        if (!listener || this.listeners[len] === listener) {\n            this.listeners.splice(len, 1);\n        }\n    }\n};\n\n/**\n * 触发数据变更\n *\n * @param {Object} change 变更信息对象\n */\nData.prototype.fire = function (change) {\n    if (change.option.silent || change.option.silence || change.option.quiet) {\n        return;\n    }\n\n    for (var i = 0; i < this.listeners.length; i++) {\n        this.listeners[i].call(this, change);\n    }\n};\n\n/**\n * 获取数据项\n *\n * @param {string|Object?} expr 数据项路径\n * @param {Data?} callee 当前数据获取的调用环境\n * @return {*}\n */\nData.prototype.get = function (expr, callee) {\n    var value = this.raw;\n    if (!expr) {\n        return value;\n    }\n\n    expr = parseExpr(expr);\n\n    var paths = expr.paths;\n    callee = callee || this;\n\n    value = value[paths[0].value];\n\n    if (value == null && this.parent) {\n        value = this.parent.get(expr, callee);\n    }\n    else {\n        for (var i = 1, l = paths.length; value != null && i < l; i++) {\n            value = value[paths[i].value || evalExpr(paths[i], callee)];\n        }\n    }\n\n    return value;\n};\n\n\n/**\n * 数据对象变更操作\n *\n * @inner\n * @param {Object|Array} source 要变更的源数据\n * @param {Array} exprPaths 属性路径\n * @param {*} value 变更属性值\n * @param {Data} data 对应的Data对象\n * @return {*} 变更后的新数据\n */\nfunction immutableSet(source, exprPaths, value, data) {\n    if (exprPaths.length === 0) {\n        return value;\n    }\n\n    var prop = evalExpr(exprPaths[0], data);\n    var result;\n\n    if (source instanceof Array) {\n        var index = +prop;\n\n        result = source.slice(0);\n        result[isNaN(index) ? prop : index] = immutableSet(source[index], exprPaths.slice(1), value, data);\n\n        return result;\n    }\n    else if (typeof source === 'object') {\n        result = {};\n\n        for (var key in source) {\n            if (key !== prop) {\n                result[key] = source[key];\n            }\n        }\n\n        result[prop] = immutableSet(source[prop] || {}, exprPaths.slice(1), value, data);\n\n        return result;\n    }\n\n    return source;\n}\n\n/**\n * 设置数据项\n *\n * @param {string|Object} expr 数据项路径\n * @param {*} value 数据值\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n */\nData.prototype.set = function (expr, value, option) {\n    option = option || {};\n\n    // #[begin] error\n    var exprRaw = expr;\n    // #[end]\n\n    expr = parseExpr(expr);\n\n    // #[begin] error\n    if (expr.type !== ExprType.ACCESSOR) {\n        throw new Error('[SAN ERROR] Invalid Expression in Data set: ' + exprRaw);\n    }\n    // #[end]\n\n    if (this.get(expr) === value && !option.force) {\n        return;\n    }\n\n    dataCache.clear();\n    this.raw = immutableSet(this.raw, expr.paths, value, this);\n    this.fire({\n        type: DataChangeType.SET,\n        expr: expr,\n        value: value,\n        option: option\n    });\n\n    // #[begin] error\n    this.checkDataTypes();\n    // #[end]\n\n};\n\n/**\n * 合并更新数据项\n *\n * @param {string|Object} expr 数据项路径\n * @param {Object} source 待合并的数据值\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n */\nData.prototype.merge = function (expr, source, option) {\n    option = option || {};\n\n    // #[begin] error\n    var exprRaw = expr;\n    // #[end]\n\n    expr = parseExpr(expr);\n\n    // #[begin] error\n    if (expr.type !== ExprType.ACCESSOR) {\n        throw new Error('[SAN ERROR] Invalid Expression in Data merge: ' + exprRaw);\n    }\n\n    if (typeof this.get(expr) !== 'object') {\n        throw new Error('[SAN ERROR] Merge Expects a Target of Type \\'object\\'; got ' + typeof oldValue);\n    }\n\n    if (typeof source !== 'object') {\n        throw new Error('[SAN ERROR] Merge Expects a Source of Type \\'object\\'; got ' + typeof source);\n    }\n    // #[end]\n\n    for (var key in source) { // eslint-disable-line\n        this.set(\n            createAccessor(\n                expr.paths.concat(\n                    [\n                        {\n                            type: ExprType.STRING,\n                            value: key\n                        }\n                    ]\n                )\n            ),\n            source[key],\n            option\n        );\n    }\n};\n\n/**\n * 基于更新函数更新数据项\n *\n * @param {string|Object} expr 数据项路径\n * @param {Function} fn 数据处理函数\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n */\nData.prototype.apply = function (expr, fn, option) {\n    // #[begin] error\n    var exprRaw = expr;\n    // #[end]\n\n    expr = parseExpr(expr);\n\n    // #[begin] error\n    if (expr.type !== ExprType.ACCESSOR) {\n        throw new Error('[SAN ERROR] Invalid Expression in Data apply: ' + exprRaw);\n    }\n    // #[end]\n\n    var oldValue = this.get(expr);\n\n    // #[begin] error\n    if (typeof fn !== 'function') {\n        throw new Error(\n            '[SAN ERROR] Invalid Argument\\'s Type in Data apply: '\n            + 'Expected Function but got ' + typeof fn\n        );\n    }\n    // #[end]\n\n    this.set(expr, fn(oldValue), option);\n};\n\n/**\n * 数组数据项splice操作\n *\n * @param {string|Object} expr 数据项路径\n * @param {Array} args splice 接受的参数列表，数组项与Array.prototype.splice的参数一致\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n * @return {Array} 新数组\n */\nData.prototype.splice = function (expr, args, option) {\n    option = option || {};\n    // #[begin] error\n    var exprRaw = expr;\n    // #[end]\n\n    expr = parseExpr(expr);\n\n    // #[begin] error\n    if (expr.type !== ExprType.ACCESSOR) {\n        throw new Error('[SAN ERROR] Invalid Expression in Data splice: ' + exprRaw);\n    }\n    // #[end]\n\n    var target = this.get(expr);\n    var returnValue = [];\n\n    if (target instanceof Array) {\n        var index = args[0];\n        if (index < 0 || index > target.length) {\n            return;\n        }\n\n        var newArray = target.slice(0);\n        returnValue = newArray.splice.apply(newArray, args);\n        dataCache.clear();\n        this.raw = immutableSet(this.raw, expr.paths, newArray, this);\n\n        this.fire({\n            expr: expr,\n            type: DataChangeType.SPLICE,\n            index: index,\n            deleteCount: returnValue.length,\n            value: returnValue,\n            insertions: args.slice(2),\n            option: option\n        });\n    }\n\n    // #[begin] error\n    this.checkDataTypes();\n    // #[end]\n\n    return returnValue;\n};\n\n/**\n * 数组数据项push操作\n *\n * @param {string|Object} expr 数据项路径\n * @param {*} item 要push的值\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n * @return {number} 新数组的length属性\n */\nData.prototype.push = function (expr, item, option) {\n    var target = this.get(expr);\n\n    if (target instanceof Array) {\n        this.splice(expr, [target.length, 0, item], option);\n        return target.length + 1;\n    }\n};\n\n/**\n * 数组数据项pop操作\n *\n * @param {string|Object} expr 数据项路径\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n * @return {*}\n */\nData.prototype.pop = function (expr, option) {\n    var target = this.get(expr);\n\n    if (target instanceof Array) {\n        var len = target.length;\n        if (len) {\n            return this.splice(expr, [len - 1, 1], option)[0];\n        }\n    }\n};\n\n/**\n * 数组数据项shift操作\n *\n * @param {string|Object} expr 数据项路径\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n * @return {*}\n */\nData.prototype.shift = function (expr, option) {\n    return this.splice(expr, [0, 1], option)[0];\n};\n\n/**\n * 数组数据项unshift操作\n *\n * @param {string|Object} expr 数据项路径\n * @param {*} item 要unshift的值\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n * @return {number} 新数组的length属性\n */\nData.prototype.unshift = function (expr, item, option) {\n    var target = this.get(expr);\n\n    if (target instanceof Array) {\n        this.splice(expr, [0, 0, item], option);\n        return target.length + 1;\n    }\n};\n\n/**\n * 数组数据项移除操作\n *\n * @param {string|Object} expr 数据项路径\n * @param {number} index 要移除项的索引\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n */\nData.prototype.removeAt = function (expr, index, option) {\n    this.splice(expr, [index, 1], option);\n};\n\n/**\n * 数组数据项移除操作\n *\n * @param {string|Object} expr 数据项路径\n * @param {*} value 要移除的项\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n */\nData.prototype.remove = function (expr, value, option) {\n    var target = this.get(expr);\n\n    if (target instanceof Array) {\n        var len = target.length;\n        while (len--) {\n            if (target[len] === value) {\n                this.splice(expr, [len, 1], option);\n                break;\n            }\n        }\n    }\n};\n\n// exports = module.exports = Data;\n\n\n/**\n * @file 声明式事件的监听函数\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var evalArgs = require('../runtime/eval-args');\n// var findMethod = require('../runtime/find-method');\n// var Data = require('../runtime/data');\n\n/**\n * 声明式事件的监听函数\n *\n * @param {Object} eventBind 绑定信息对象\n * @param {boolean} isComponentEvent 是否组件自定义事件\n * @param {Data} data 数据环境\n * @param {Event} e 事件对象\n */\nfunction eventDeclarationListener(eventBind, isComponentEvent, data, e) {\n    var method = findMethod(this, eventBind.expr.name, data);\n\n    if (typeof method === 'function') {\n        var scope = new Data(\n            {$event: isComponentEvent ? e : e || window.event},\n            data\n        );\n        method.apply(this, evalArgs(eventBind.expr.args, scope, this));\n    }\n}\n\n// exports = module.exports = eventDeclarationListener;\n\n\n/**\n * @file 自闭合标签表\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var splitStr2Obj = require('../util/split-str-2-obj');\n\n/**\n * 自闭合标签列表\n *\n * @type {Object}\n */\nvar hotTags = splitStr2Obj('div,span,input,button,textarea,form,label,dl,dt,dd,ul,ol,li,a,b,u,h1,h2,h3,h4,h5,h6');\n\n// exports = module.exports = hotTags;\n\n\n/**\n * @file 是否浏览器环境\n * @author errorrik(errorrik@gmail.com)\n */\n\nvar isBrowser = typeof window !== 'undefined';\n\n// exports = module.exports = isBrowser;\n\n\n/**\n * @file insertBefore 方法的兼容性封装\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * insertBefore 方法的兼容性封装\n *\n * @param {HTMLNode} targetEl 要插入的节点\n * @param {HTMLElement} parentEl 父元素\n * @param {HTMLElement?} beforeEl 在此元素之前插入\n */\nfunction insertBefore(targetEl, parentEl, beforeEl) {\n    if (parentEl) {\n        if (beforeEl) {\n            parentEl.insertBefore(targetEl, beforeEl);\n        }\n        else {\n            parentEl.appendChild(targetEl);\n        }\n    }\n}\n\n// exports = module.exports = insertBefore;\n\n\n/**\n * @file 判断元素是否不允许设置HTML\n * @author errorrik(errorrik@gmail.com)\n */\n\n// some html elements cannot set innerHTML in old ie\n// see: https://msdn.microsoft.com/en-us/library/ms533897(VS.85).aspx\n\n/**\n * 判断元素是否不允许设置HTML\n *\n * @param {HTMLElement} el 要判断的元素\n * @return {boolean}\n */\nfunction noSetHTML(el) {\n    return /^(col|colgroup|frameset|style|table|tbody|tfoot|thead|tr|select)$/i.test(el.tagName);\n}\n\n// exports = module.exports = noSetHTML;\n\n\n/**\n * @file  获取节点 stump 的 comment\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var noSetHTML = require('../browser/no-set-html');\n\n// #[begin] error\n/**\n * 获取节点 stump 的 comment\n *\n * @param {HTMLElement} el HTML元素\n */\nfunction warnSetHTML(el) {\n    // dont warn if not in browser runtime\n    if (!(typeof window !== 'undefined' && typeof navigator !== 'undefined' && window.document)) {\n        return;\n    }\n\n    // some html elements cannot set innerHTML in old ie\n    // see: https://msdn.microsoft.com/en-us/library/ms533897(VS.85).aspx\n    if (noSetHTML(el)) {\n        var message = '[SAN WARNING] set html for element \"' + el.tagName\n            + '\" may cause an error in old IE';\n        /* eslint-disable no-console */\n        if (typeof console === 'object' && console.warn) {\n            console.warn(message);\n        }\n        else {\n            throw new Error(message);\n        }\n        /* eslint-enable no-console */\n    }\n}\n// #[end]\n\n// exports = module.exports = warnSetHTML;\n\n\n/**\n * @file 判断是否结束桩\n * @author errorrik(errorrik@gmail.com)\n */\n\n// #[begin] reverse\n/**\n * 判断是否结束桩\n *\n * @param {HTMLElement|HTMLComment} target 要判断的元素\n * @param {string} type 桩类型\n * @return {boolean}\n */\nfunction isEndStump(target, type) {\n    return target.nodeType === 8 && target.data === '/s-' + type;\n}\n// #[end]\n\n// exports = module.exports = isEndStump;\n\n\n/**\n * @file 获取节点在组件树中的路径\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var NodeType = require('./node-type');\n\n// #[begin] reverse\n/**\n * 获取节点在组件树中的路径\n *\n * @param {Node} node 节点对象\n * @return {Array}\n */\nfunction getNodePath(node) {\n    var nodePaths = [];\n    var nodeParent = node;\n    while (nodeParent) {\n        switch (nodeParent.nodeType) {\n            case NodeType.ELEM:\n                nodePaths.unshift(nodeParent.tagName);\n                break;\n\n            case NodeType.IF:\n                nodePaths.unshift('if');\n                break;\n\n            case NodeType.FOR:\n                nodePaths.unshift('for[' + nodeParent.anode.directives['for'].raw + ']'); // eslint-disable-line dot-notation\n                break;\n\n            case NodeType.SLOT:\n                nodePaths.unshift('slot[' + (nodeParent.name || 'default') + ']');\n                break;\n\n            case NodeType.TPL:\n                nodePaths.unshift('template');\n                break;\n\n            case NodeType.CMPT:\n                nodePaths.unshift('component[' + (nodeParent.subTag || 'root') + ']');\n                break;\n\n            case NodeType.TEXT:\n                nodePaths.unshift('text');\n                break;\n        }\n\n        nodeParent = nodeParent.parent;\n    }\n\n    return nodePaths;\n}\n// #[end]\n\n// exports = module.exports = getNodePath;\n\n\n/**\n * @file text 节点类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var isBrowser = require('../browser/is-browser');\n// var removeEl = require('../browser/remove-el');\n// var insertBefore = require('../browser/insert-before');\n// var changeExprCompare = require('../runtime/change-expr-compare');\n// var evalExpr = require('../runtime/eval-expr');\n// var NodeType = require('./node-type');\n// var warnSetHTML = require('./warn-set-html');\n// var isEndStump = require('./is-end-stump');\n// var getNodePath = require('./get-node-path');\n\n\n/**\n * text 节点类\n *\n * @param {Object} aNode 抽象节点\n * @param {Component} owner 所属组件环境\n * @param {Model=} scope 所属数据环境\n * @param {Node} parent 父亲节点\n * @param {DOMChildrenWalker?} reverseWalker 子元素遍历对象\n */\nfunction TextNode(aNode, owner, scope, parent, reverseWalker) {\n    this.aNode = aNode;\n    this.owner = owner;\n    this.scope = scope;\n    this.parent = parent;\n\n    // #[begin] reverse\n    if (reverseWalker) {\n        var currentNode = reverseWalker.current;\n        if (currentNode) {\n            switch (currentNode.nodeType) {\n                case 8:\n                    if (currentNode.data === 's-text') {\n                        this.sel = currentNode;\n                        currentNode.data = this.id;\n                        reverseWalker.goNext();\n\n                        while (1) { // eslint-disable-line\n                            currentNode = reverseWalker.current;\n                            if (!currentNode) {\n                                throw new Error('[SAN REVERSE ERROR] Text end flag not found. \\nPaths: '\n                                    + getNodePath(this).join(' > '));\n                            }\n\n                            if (isEndStump(currentNode, 'text')) {\n                                this.el = currentNode;\n                                reverseWalker.goNext();\n                                currentNode.data = this.id;\n                                break;\n                            }\n\n                            reverseWalker.goNext();\n                        }\n                    }\n                    break;\n\n                case 3:\n                    reverseWalker.goNext();\n                    if (!this.aNode.textExpr.original) {\n                        this.el = currentNode;\n                    }\n                    break;\n            }\n        }\n        else {\n            this.el = document.createTextNode('');\n            insertBefore(this.el, reverseWalker.target, reverseWalker.current);\n        }\n    }\n    // #[end]\n}\n\nTextNode.prototype.nodeType = NodeType.TEXT;\n\n/**\n * 将text attach到页面\n *\n * @param {HTMLElement} parentEl 要添加到的父元素\n * @param {HTMLElement＝} beforeEl 要添加到哪个元素之前\n */\nTextNode.prototype.attach = function (parentEl, beforeEl) {\n    this.content = evalExpr(this.aNode.textExpr, this.scope, this.owner);\n\n    if (this.aNode.textExpr.original) {\n        this.sel = document.createComment(this.id);\n        insertBefore(this.sel, parentEl, beforeEl);\n\n        this.el = document.createComment(this.id);\n        insertBefore(this.el, parentEl, beforeEl);\n\n        var tempFlag = document.createElement('script');\n        parentEl.insertBefore(tempFlag, this.el);\n        tempFlag.insertAdjacentHTML('beforebegin', this.content);\n        parentEl.removeChild(tempFlag);\n    }\n    else {\n        this.el = document.createTextNode(this.content);\n        insertBefore(this.el, parentEl, beforeEl);\n    }\n};\n\n/**\n * 销毁 text 节点\n */\nTextNode.prototype.dispose = function () {\n    this._prev = null;\n    this.el = null;\n    this.sel = null;\n};\n\nvar textUpdateProp = isBrowser\n    && (typeof document.createTextNode('').textContent === 'string'\n        ? 'textContent'\n        : 'data');\n\n/**\n * 更新 text 节点的视图\n *\n * @param {Array} changes 数据变化信息\n */\nTextNode.prototype._update = function (changes) {\n    if (this.aNode.textExpr.value) {\n        return;\n    }\n\n    var len = changes ? changes.length : 0;\n    while (len--) {\n        if (changeExprCompare(changes[len].expr, this.aNode.textExpr, this.scope)) {\n            var text = evalExpr(this.aNode.textExpr, this.scope, this.owner);\n\n            if (text !== this.content) {\n                this.content = text;\n\n                if (this.aNode.textExpr.original) {\n                    var startRemoveEl = this.sel.nextSibling;\n                    var parentEl = this.el.parentNode;\n\n                    while (startRemoveEl !== this.el) {\n                        var removeTarget = startRemoveEl;\n                        startRemoveEl = startRemoveEl.nextSibling;\n                        removeEl(removeTarget);\n                    }\n\n                    // #[begin] error\n                    warnSetHTML(parentEl);\n                    // #[end]\n\n                    var tempFlag = document.createElement('script');\n                    parentEl.insertBefore(tempFlag, this.el);\n                    tempFlag.insertAdjacentHTML('beforebegin', text);\n                    parentEl.removeChild(tempFlag);\n                }\n                else {\n                    this.el[textUpdateProp] = text;\n                }\n            }\n\n            return;\n        }\n    }\n};\n\n// exports = module.exports = TextNode;\n\n\n/**\n * @file 判断变更数组是否影响到数据引用摘要\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n/**\n * 判断变更数组是否影响到数据引用摘要\n *\n * @param {Array} changes 变更数组\n * @param {Object} dataRef 数据引用摘要\n * @return {boolean}\n */\nfunction changesIsInDataRef(changes, dataRef) {\n    for (var i = 0; i < changes.length; i++) {\n        var change = changes[i];\n\n        if (!change.overview) {\n            var paths = change.expr.paths;\n            change.overview = paths[0].value;\n\n            if (paths.length > 1) {\n                change.extOverview = paths[0].value + '.' + paths[1].value;\n                change.wildOverview = paths[0].value + '.*';\n            }\n        }\n\n        if (dataRef[change.overview]\n            || change.wildOverview && dataRef[change.wildOverview]\n            || change.extOverview && dataRef[change.extOverview]\n        ) {\n            return true;\n        }\n    }\n}\n\n// exports = module.exports = changesIsInDataRef;\n\n\n/**\n * @file 元素子节点遍历操作类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var removeEl = require('../browser/remove-el');\n\n// #[begin] reverse\n/**\n * 元素子节点遍历操作类\n *\n * @inner\n * @class\n * @param {HTMLElement} el 要遍历的元素\n */\nfunction DOMChildrenWalker(el) {\n    this.raw = [];\n    this.index = 0;\n    this.target = el;\n\n    var child = el.firstChild;\n    var next;\n    while (child) {\n        next = child.nextSibling;\n\n        switch (child.nodeType) {\n            case 3:\n                if (/^\\s*$/.test(child.data || child.textContent)) {\n                    removeEl(child);\n                }\n                else {\n                    this.raw.push(child);\n                }\n                break;\n\n            case 1:\n            case 8:\n                this.raw.push(child);\n        }\n\n        child = next;\n    }\n\n    this.current = this.raw[this.index];\n    this.next = this.raw[this.index + 1];\n}\n\n/**\n * 往下走一个元素\n */\nDOMChildrenWalker.prototype.goNext = function () {\n    this.current = this.raw[++this.index];\n    this.next = this.raw[this.index + 1];\n};\n// #[end]\n\n// exports = module.exports = DOMChildrenWalker;\n\n\n/**\n * @file 元素节点类\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var each = require('../util/each');\n// var guid = require('../util/guid');\n// var removeEl = require('../browser/remove-el');\n// var changeExprCompare = require('../runtime/change-expr-compare');\n// var changesIsInDataRef = require('../runtime/changes-is-in-data-ref');\n// var evalExpr = require('../runtime/eval-expr');\n// var LifeCycle = require('./life-cycle');\n// var NodeType = require('./node-type');\n// var reverseElementChildren = require('./reverse-element-children');\n// var isDataChangeByElement = require('./is-data-change-by-element');\n// var elementUpdateChildren = require('./element-update-children');\n// var elementOwnCreate = require('./element-own-create');\n// var elementOwnAttach = require('./element-own-attach');\n// var elementOwnDetach = require('./element-own-detach');\n// var elementOwnDispose = require('./element-own-dispose');\n// var elementOwnOnEl = require('./element-own-on-el');\n// var elementOwnToPhase = require('./element-own-to-phase');\n// var elementOwnAttached = require('./element-own-attached');\n// var elementDispose = require('./element-dispose');\n// var elementInitTagName = require('./element-init-tag-name');\n// var handleProp = require('./handle-prop');\n// var warnSetHTML = require('./warn-set-html');\n// var getNodePath = require('./get-node-path');\n\n/**\n * 元素节点类\n *\n * @param {Object} aNode 抽象节点\n * @param {Component} owner 所属组件环境\n * @param {Model=} scope 所属数据环境\n * @param {Node} parent 父亲节点\n * @param {DOMChildrenWalker?} reverseWalker 子元素遍历对象\n */\nfunction Element(aNode, owner, scope, parent, reverseWalker) {\n    this.aNode = aNode;\n    this.owner = owner;\n    this.scope = scope;\n    this.parent = parent;\n\n    this.lifeCycle = LifeCycle.start;\n    this.children = [];\n    this._elFns = [];\n    this.parentComponent = parent.nodeType === NodeType.CMPT\n        ? parent\n        : parent.parentComponent;\n\n    this.id = guid();\n\n    elementInitTagName(this);\n\n    this._toPhase('inited');\n\n    // #[begin] reverse\n    if (reverseWalker) {\n        var currentNode = reverseWalker.current;\n\n        if (!currentNode) {\n            throw new Error('[SAN REVERSE ERROR] Element not found. \\nPaths: '\n                + getNodePath(this).join(' > '));\n        }\n\n        if (currentNode.nodeType !== 1) {\n            throw new Error('[SAN REVERSE ERROR] Element type not match, expect 1 but '\n                + currentNode.nodeType + '.\\nPaths: '\n                + getNodePath(this).join(' > '));\n        }\n\n        if (currentNode.tagName.toLowerCase() !== this.tagName) {\n            throw new Error('[SAN REVERSE ERROR] Element tagName not match, expect '\n                + this.tagName + ' but meat ' + currentNode.tagName.toLowerCase() + '.\\nPaths: '\n                + getNodePath(this).join(' > '));\n        }\n\n        this.el = currentNode;\n        reverseWalker.goNext();\n\n        reverseElementChildren(this);\n\n        this._attached();\n    }\n    // #[end]\n}\n\n\n\nElement.prototype.nodeType = NodeType.ELEM;\n\n\nElement.prototype.attach = elementOwnAttach;\nElement.prototype.detach = elementOwnDetach;\nElement.prototype.dispose = elementOwnDispose;\nElement.prototype._create = elementOwnCreate;\nElement.prototype._toPhase = elementOwnToPhase;\nElement.prototype._onEl = elementOwnOnEl;\n\nElement.prototype._doneLeave = function () {\n    if (this.leaveDispose) {\n        if (!this.lifeCycle.disposed) {\n            elementDispose(\n                this,\n                this.disposeNoDetach,\n                this.disposeNoTransition\n            );\n        }\n    }\n    else if (this.lifeCycle.attached) {\n        removeEl(this.el);\n        this._toPhase('detached');\n    }\n};\n\n/**\n * 视图更新\n *\n * @param {Array} changes 数据变化信息\n */\nElement.prototype._update = function (changes) {\n    if (!changesIsInDataRef(changes, this.aNode.hotspot.data)) {\n        return;\n    }\n\n    var me = this;\n\n    var dynamicProps = this.aNode.hotspot.dynamicProps;\n    for (var i = 0, l = dynamicProps.length; i < l; i++) {\n        var prop = dynamicProps[i];\n\n        for (var j = 0, changeLen = changes.length; j < changeLen; j++) {\n            var change = changes[j];\n\n            if (!isDataChangeByElement(change, this, prop.name)\n                && (\n                    changeExprCompare(change.expr, prop.expr, this.scope)\n                    || prop.hintExpr && changeExprCompare(change.expr, prop.hintExpr, this.scope)\n                )\n            ) {\n                handleProp(this, evalExpr(prop.expr, this.scope, this.owner), prop);\n                break;\n            }\n        }\n    }\n\n    var htmlDirective = this.aNode.directives.html;\n    if (htmlDirective) {\n        each(changes, function (change) {\n            if (changeExprCompare(change.expr, htmlDirective.value, me.scope)) {\n                // #[begin] error\n                warnSetHTML(me.el);\n                // #[end]\n                me.el.innerHTML = evalExpr(htmlDirective.value, me.scope, me.owner);\n                return false;\n            }\n        });\n    }\n    else {\n        elementUpdateChildren(this, changes);\n    }\n};\n\n/**\n * 执行完成attached状态的行为\n */\nElement.prototype._attached = elementOwnAttached;\n\n// exports = module.exports = Element;\n\n\n/**\n * @file 销毁节点，清空节点上的无用成员\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n/**\n * 销毁节点\n *\n * @param {Object} node 节点对象\n */\nfunction nodeDispose(node) {\n    node.el = null;\n    node.sel = null;\n    node.owner = null;\n    node.scope = null;\n    node.aNode = null;\n    node.parent = null;\n    node.parentComponent = null;\n    node.children = null;\n\n    if (node._toPhase) {\n        node._toPhase('disposed');\n    }\n\n    if (node._ondisposed) {\n        node._ondisposed();\n    }\n}\n\n// exports = module.exports = nodeDispose;\n\n\n/**\n * @file 通过组件反解创建节点的工厂方法\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var hotTags = require('../browser/hot-tags');\n// var NodeType = require('./node-type');\n// var TextNode = require('./text-node');\n// var Element = require('./element');\n// var SlotNode = require('./slot-node');\n// var ForNode = require('./for-node');\n// var IfNode = require('./if-node');\n// var TemplateNode = require('./template-node');\n\n// #[begin] reverse\n/**\n * 通过组件反解创建节点\n *\n * @param {ANode} aNode 抽象节点\n * @param {DOMChildrenWalker} reverseWalker 子元素遍历对象\n * @param {Node} parent 父亲节点\n * @param {Model=} scope 所属数据环境\n * @return {Node}\n */\nfunction createReverseNode(aNode, reverseWalker, parent, scope) {\n    var parentIsComponent = parent.nodeType === NodeType.CMPT;\n    var owner = parentIsComponent ? parent : (parent.childOwner || parent.owner);\n    scope = scope || (parentIsComponent ? parent.data : (parent.childScope || parent.scope));\n\n    if (aNode.textExpr) {\n        return new TextNode(aNode, owner, scope, parent, reverseWalker);\n    }\n\n    if (aNode.directives['if']) { // eslint-disable-line dot-notation\n        return new IfNode(aNode, owner, scope, parent, reverseWalker);\n    }\n\n    if (aNode.directives['for']) { // eslint-disable-line dot-notation\n        return new ForNode(aNode, owner, scope, parent, reverseWalker);\n    }\n\n    if (hotTags[aNode.tagName]) {\n        return new Element(aNode, owner, scope, parent, reverseWalker);\n    }\n\n    switch (aNode.tagName) {\n        case 'slot':\n            return new SlotNode(aNode, owner, scope, parent, reverseWalker);\n\n        case 'template':\n            return new TemplateNode(aNode, owner, scope, parent, reverseWalker);\n\n        default:\n            var ComponentType = owner.getComponentType(aNode);\n            if (ComponentType) {\n                return new ComponentType({\n                    aNode: aNode,\n                    owner: owner,\n                    scope: scope,\n                    parent: parent,\n                    subTag: aNode.tagName,\n                    reverseWalker: reverseWalker\n                });\n            }\n    }\n\n    return new Element(aNode, owner, scope, parent, reverseWalker);\n}\n// #[end]\n\n// exports = module.exports = createReverseNode;\n\n\n/**\n * @file 销毁释放元素的子元素\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 销毁释放元素的子元素\n *\n * @param {Object} element 元素节点\n * @param {boolean=} noDetach 是否不要把节点从dom移除\n * @param {boolean=} noTransition 是否不显示过渡动画效果\n */\nfunction elementDisposeChildren(element, noDetach, noTransition) {\n    var children = element.children;\n    var len = children && children.length;\n    while (len--) {\n        children[len].dispose(noDetach, noTransition);\n    }\n}\n\n// exports = module.exports = elementDisposeChildren;\n\n\n/**\n * @file 更新元素的子元素视图\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n/**\n * 更新元素的子元素视图\n *\n * @param {Object} element 要更新的元素\n * @param {Array} changes 数据变化信息\n */\nfunction elementUpdateChildren(element, changes) {\n    for (var i = 0, l = element.children.length; i < l; i++) {\n        element.children[i]._update(changes);\n    }\n}\n\n// exports = module.exports = elementUpdateChildren;\n\n\n/**\n * @file 使元素节点到达相应的生命周期\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var LifeCycle = require('./life-cycle');\n\n/**\n * 使元素节点到达相应的生命周期\n *\n * @param {string} name 生命周期名称\n */\nfunction elementOwnToPhase(name) {\n    this.lifeCycle = LifeCycle[name] || this.lifeCycle;\n}\n\n// exports = module.exports = elementOwnToPhase;\n\n\n/**\n * @file 创建节点的工厂方法\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var hotTags = require('../browser/hot-tags');\n// var NodeType = require('./node-type');\n// var TextNode = require('./text-node');\n// var Element = require('./element');\n// var SlotNode = require('./slot-node');\n// var ForNode = require('./for-node');\n// var IfNode = require('./if-node');\n// var TemplateNode = require('./template-node');\n\n\n/**\n * 创建节点\n *\n * @param {ANode} aNode 抽象节点\n * @param {Node} parent 父亲节点\n * @param {Model=} scope 所属数据环境\n * @return {Node}\n */\nfunction createNode(aNode, parent, scope) {\n    var parentIsComponent = parent.nodeType === NodeType.CMPT;\n    var owner = parentIsComponent ? parent : (parent.childOwner || parent.owner);\n    scope = scope || (parentIsComponent ? parent.data : (parent.childScope || parent.scope));\n\n\n    if (aNode.textExpr) {\n        return new TextNode(aNode, owner, scope, parent);\n    }\n\n    if (aNode.directives['if']) { // eslint-disable-line dot-notation\n        return new IfNode(aNode, owner, scope, parent);\n    }\n\n    if (aNode.directives['for']) { // eslint-disable-line dot-notation\n        return new ForNode(aNode, owner, scope, parent);\n    }\n\n    if (hotTags[aNode.tagName]) {\n        return new Element(aNode, owner, scope, parent);\n    }\n\n\n\n    switch (aNode.tagName) {\n        case 'slot':\n            return new SlotNode(aNode, owner, scope, parent);\n\n        case 'template':\n            return new TemplateNode(aNode, owner, scope, parent);\n\n        default:\n            var ComponentType = owner.getComponentType(aNode);\n            if (ComponentType) {\n                return new ComponentType({\n                    aNode: aNode,\n                    owner: owner,\n                    scope: scope,\n                    parent: parent,\n                    subTag: aNode.tagName\n                });\n            }\n    }\n\n    return new Element(aNode, owner, scope, parent);\n}\n\n// exports = module.exports = createNode;\n\n\n/**\n * @file 生成子元素\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var createNode = require('./create-node');\n\n/**\n * 生成子元素\n *\n * @param {Element} element 元素\n * @param {HTMLElement} parentEl 要添加到的父元素\n * @param {HTMLElement＝} beforeEl 要添加到哪个元素之前\n */\nfunction genElementChildren(element, parentEl, beforeEl) {\n    parentEl = parentEl || element.el;\n\n    var aNodeChildren = element.aNode.children;\n    for (var i = 0; i < aNodeChildren.length; i++) {\n        var child = createNode(aNodeChildren[i], element);\n        element.children.push(child);\n        child.attach(parentEl, beforeEl);\n    }\n}\n\n// exports = module.exports = genElementChildren;\n\n\n/**\n * @file 将没有 root 只有 children 的元素 attach 到页面\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var insertBefore = require('../browser/insert-before');\n// var genElementChildren = require('./gen-element-children');\n\n\n/**\n * 将没有 root 只有 children 的元素 attach 到页面\n * 主要用于 slot 和 template\n *\n * @param {HTMLElement} parentEl 要添加到的父元素\n * @param {HTMLElement＝} beforeEl 要添加到哪个元素之前\n */\nfunction nodeOwnOnlyChildrenAttach(parentEl, beforeEl) {\n    this.sel = document.createComment(this.id);\n    insertBefore(this.sel, parentEl, beforeEl);\n\n    genElementChildren(this, parentEl, beforeEl);\n\n    this.el = document.createComment(this.id);\n    insertBefore(this.el, parentEl, beforeEl);\n\n    this._toPhase('attached');\n}\n\n// exports = module.exports = nodeOwnOnlyChildrenAttach;\n\n\n/**\n * @file slot 节点类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var each = require('../util/each');\n// var guid = require('../util/guid');\n// var createANode = require('../parser/create-a-node');\n// var ExprType = require('../parser/expr-type');\n// var createAccessor = require('../parser/create-accessor');\n// var evalExpr = require('../runtime/eval-expr');\n// var Data = require('../runtime/data');\n// var DataChangeType = require('../runtime/data-change-type');\n// var changeExprCompare = require('../runtime/change-expr-compare');\n// var insertBefore = require('../browser/insert-before');\n// var NodeType = require('./node-type');\n// var LifeCycle = require('./life-cycle');\n// var getANodeProp = require('./get-a-node-prop');\n// var nodeDispose = require('./node-dispose');\n// var createReverseNode = require('./create-reverse-node');\n// var elementDisposeChildren = require('./element-dispose-children');\n// var elementUpdateChildren = require('./element-update-children');\n// var elementOwnToPhase = require('./element-own-to-phase');\n// var nodeOwnOnlyChildrenAttach = require('./node-own-only-children-attach');\n\n\n/**\n * slot 节点类\n *\n * @param {Object} aNode 抽象节点\n * @param {Component} owner 所属组件环境\n * @param {Model=} scope 所属数据环境\n * @param {Node} parent 父亲节点\n * @param {DOMChildrenWalker?} reverseWalker 子元素遍历对象\n */\nfunction SlotNode(aNode, owner, scope, parent, reverseWalker) {\n    var realANode = createANode();\n    this.aNode = realANode;\n    this.owner = owner;\n    this.scope = scope;\n    this.parent = parent;\n    this.parentComponent = parent.nodeType === NodeType.CMPT\n        ? parent\n        : parent.parentComponent;\n\n    this.id = guid();\n\n    this.lifeCycle = LifeCycle.start;\n    this.children = [];\n\n    // calc slot name\n    this.nameBind = getANodeProp(aNode, 'name');\n    if (this.nameBind) {\n        this.isNamed = true;\n        this.name = evalExpr(this.nameBind.expr, this.scope, this.owner);\n    }\n\n    // calc aNode children\n    var givenSlots = owner.givenSlots;\n    var givenChildren;\n    if (givenSlots) {\n        givenChildren = this.isNamed ? givenSlots.named[this.name] : givenSlots.noname;\n    }\n\n    if (givenChildren) {\n        this.isInserted = true;\n    }\n\n    realANode.children = givenChildren || aNode.children.slice(0);\n\n    var me = this;\n\n    // calc scoped slot vars\n    realANode.vars = aNode.vars;\n    var initData = {};\n    each(realANode.vars, function (varItem) {\n        me.isScoped = true;\n        initData[varItem.name] = evalExpr(varItem.expr, scope, owner);\n    });\n\n    // child owner & child scope\n    if (this.isInserted) {\n        this.childOwner = owner.owner;\n        this.childScope = owner.scope;\n    }\n\n    if (this.isScoped) {\n        this.childScope = new Data(initData, this.childScope || this.scope);\n    }\n\n\n    owner.slotChildren.push(this);\n\n    // #[begin] reverse\n    if (reverseWalker) {\n\n        this.sel = document.createComment(this.id);\n        insertBefore(this.sel, reverseWalker.target, reverseWalker.current);\n\n        each(this.aNode.children, function (aNodeChild) {\n            me.children.push(createReverseNode(aNodeChild, reverseWalker, me));\n        });\n\n        this.el = document.createComment(this.id);\n        insertBefore(this.el, reverseWalker.target, reverseWalker.current);\n\n        this._toPhase('attached');\n    }\n    // #[end]\n}\n\nSlotNode.prototype.nodeType = NodeType.SLOT;\n\n/**\n * 销毁释放 slot\n *\n * @param {boolean=} noDetach 是否不要把节点从dom移除\n * @param {boolean=} noTransition 是否不显示过渡动画效果\n */\nSlotNode.prototype.dispose = function (noDetach, noTransition) {\n    this.childOwner = null;\n    this.childScope = null;\n\n    elementDisposeChildren(this, noDetach, noTransition);\n    nodeDispose(this);\n};\n\nSlotNode.prototype.attach = nodeOwnOnlyChildrenAttach;\nSlotNode.prototype._toPhase = elementOwnToPhase;\n\n/**\n * 视图更新函数\n *\n * @param {Array} changes 数据变化信息\n * @param {boolean=} isFromOuter 变化信息是否来源于父组件之外的组件\n * @return {boolean}\n */\nSlotNode.prototype._update = function (changes, isFromOuter) {\n    var me = this;\n\n    if (this.nameBind && evalExpr(this.nameBind.expr, this.scope, this.owner) !== me.name) {\n        this.owner._notifyNeedReload();\n        return false;\n    }\n\n    if (isFromOuter) {\n        if (this.isInserted) {\n            elementUpdateChildren(this, changes);\n        }\n    }\n    else {\n        if (this.isScoped) {\n            each(this.aNode.vars, function (varItem) {\n                me.childScope.set(varItem.name, evalExpr(varItem.expr, me.scope, me.owner));\n            });\n\n\n            var scopedChanges = [];\n            each(changes, function (change) {\n                if (!me.isInserted) {\n                    scopedChanges.push(change);\n                }\n\n                each(me.aNode.vars, function (varItem) {\n                    var name = varItem.name;\n                    var relation = changeExprCompare(change.expr, varItem.expr, me.scope);\n\n                    if (relation < 1) {\n                        return;\n                    }\n\n                    if (change.type !== DataChangeType.SPLICE) {\n                        scopedChanges.push({\n                            type: DataChangeType.SET,\n                            expr: createAccessor([\n                                {type: ExprType.STRING, value: name}\n                            ]),\n                            value: me.childScope.get(name),\n                            option: change.option\n                        });\n                    }\n                    else if (relation === 2) {\n                        scopedChanges.push({\n                            expr: createAccessor([\n                                {type: ExprType.STRING, value: name}\n                            ]),\n                            type: DataChangeType.SPLICE,\n                            index: change.index,\n                            deleteCount: change.deleteCount,\n                            value: change.value,\n                            insertions: change.insertions,\n                            option: change.option\n                        });\n                    }\n                });\n            });\n\n            elementUpdateChildren(this, scopedChanges);\n        }\n        else if (!this.isInserted) {\n            elementUpdateChildren(this, changes);\n        }\n    }\n};\n\n// exports = module.exports = SlotNode;\n\n\n/**\n * @file 复制指令集合对象\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 复制指令集合对象\n *\n * @param {Object} source 要复制的指令集合对象\n * @param {Object=} excludes 需要排除的key集合\n * @return {Object}\n */\nfunction cloneDirectives(source, excludes) {\n    var result = {};\n    excludes = excludes || {};\n\n    for (var key in source) {\n        if (!excludes[key]) {\n            result[key] = source[key];\n        }\n    }\n\n    return result;\n}\n\n// exports = module.exports = cloneDirectives;\n\n\n/**\n * @file 简单执行销毁节点的行为\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var removeEl = require('../browser/remove-el');\n// var nodeDispose = require('./node-dispose');\n// var elementDisposeChildren = require('./element-dispose-children');\n\n/**\n * 简单执行销毁节点的行为\n *\n * @param {boolean=} noDetach 是否不要把节点从dom移除\n */\nfunction nodeOwnSimpleDispose(noDetach) {\n    elementDisposeChildren(this, noDetach, 1);\n\n    if (!noDetach) {\n        removeEl(this.el);\n    }\n\n    nodeDispose(this);\n}\n\n// exports = module.exports = nodeOwnSimpleDispose;\n\n\n/**\n * @file 创建节点对应的 stump comment 元素\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n\n/**\n * 创建节点对应的 stump comment 主元素\n */\nfunction nodeOwnCreateStump() {\n    this.el = this.el || document.createComment(this.id);\n}\n\n// exports = module.exports = nodeOwnCreateStump;\n\n\n/**\n * @file for 指令节点类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var inherits = require('../util/inherits');\n// var each = require('../util/each');\n// var guid = require('../util/guid');\n// var createANode = require('../parser/create-a-node');\n// var ExprType = require('../parser/expr-type');\n// var parseExpr = require('../parser/parse-expr');\n// var createAccessor = require('../parser/create-accessor');\n// var cloneDirectives = require('../parser/clone-directives');\n// var Data = require('../runtime/data');\n// var DataChangeType = require('../runtime/data-change-type');\n// var changeExprCompare = require('../runtime/change-expr-compare');\n// var evalExpr = require('../runtime/eval-expr');\n// var changesIsInDataRef = require('../runtime/changes-is-in-data-ref');\n// var removeEl = require('../browser/remove-el');\n// var insertBefore = require('../browser/insert-before');\n// var LifeCycle = require('./life-cycle');\n// var NodeType = require('./node-type');\n// var createNode = require('./create-node');\n// var createReverseNode = require('./create-reverse-node');\n// var nodeOwnSimpleDispose = require('./node-own-simple-dispose');\n// var nodeOwnCreateStump = require('./node-own-create-stump');\n// var elementDisposeChildren = require('./element-dispose-children');\n// var dataCache = require('../runtime/data-cache');\n\n\n/**\n * 循环项的数据容器类\n *\n * @inner\n * @class\n * @param {Object} forElement for元素对象\n * @param {*} item 当前项的数据\n * @param {number} index 当前项的索引\n */\nfunction ForItemData(forElement, item, index) {\n    this.id = guid();\n    this.parent = forElement.scope;\n    this.raw = {};\n    this.listeners = [];\n\n    this.directive = forElement.aNode.directives['for']; // eslint-disable-line dot-notation\n    this.raw[this.directive.item.raw] = item;\n    this.raw[this.directive.index.raw] = index;\n}\n\n/**\n * 将数据操作的表达式，转换成为对parent数据操作的表达式\n * 主要是对item和index进行处理\n *\n * @param {Object} expr 表达式\n * @return {Object}\n */\nForItemData.prototype.exprResolve = function (expr) {\n    var directive = this.directive;\n    var me = this;\n\n    function resolveItem(expr) {\n        if (expr.type === ExprType.ACCESSOR\n            && expr.paths[0].value === directive.item.paths[0].value\n        ) {\n            return createAccessor(\n                directive.value.paths.concat(\n                    {\n                        type: ExprType.NUMBER,\n                        value: me.get(directive.index)\n                    },\n                    expr.paths.slice(1)\n                )\n            );\n        }\n\n        return expr;\n    }\n\n    expr = resolveItem(expr);\n\n    var resolvedPaths = [];\n\n    each(expr.paths, function (item) {\n        resolvedPaths.push(\n            item.type === ExprType.ACCESSOR\n                && item.paths[0].value === directive.index.paths[0].value\n            ? {\n                type: ExprType.NUMBER,\n                value: me.get(directive.index)\n            }\n            : resolveItem(item)\n        );\n    });\n\n    return createAccessor(resolvedPaths);\n};\n\n// 代理数据操作方法\ninherits(ForItemData, Data);\neach(\n    ['set', 'remove', 'unshift', 'shift', 'push', 'pop', 'splice'],\n    function (method) {\n        ForItemData.prototype['_' + method] = Data.prototype[method];\n        ForItemData.prototype[method] = function (expr) {\n            expr = this.exprResolve(parseExpr(expr));\n            dataCache.clear();\n            this.parent[method].apply(\n                this.parent,\n                [expr].concat(Array.prototype.slice.call(arguments, 1))\n            );\n        };\n    }\n);\n\n/**\n * 创建 for 指令元素的子元素\n *\n * @inner\n * @param {ForDirective} forElement for 指令元素对象\n * @param {*} item 子元素对应数据\n * @param {number} index 子元素对应序号\n * @return {Element}\n */\nfunction createForDirectiveChild(forElement, item, index) {\n    var itemScope = new ForItemData(forElement, item, index);\n    return createNode(forElement.itemANode, forElement, itemScope);\n}\n\n/**\n * for 指令节点类\n *\n * @param {Object} aNode 抽象节点\n * @param {Component} owner 所属组件环境\n * @param {Model=} scope 所属数据环境\n * @param {Node} parent 父亲节点\n * @param {DOMChildrenWalker?} reverseWalker 子元素遍历对象\n */\nfunction ForNode(aNode, owner, scope, parent, reverseWalker) {\n    this.aNode = aNode;\n    this.owner = owner;\n    this.scope = scope;\n    this.parent = parent;\n    this.parentComponent = parent.nodeType === NodeType.CMPT\n        ? parent\n        : parent.parentComponent;\n\n    this.id = guid();\n    this.children = [];\n\n    this.itemANode = createANode({\n        children: aNode.children,\n        props: aNode.props,\n        events: aNode.events,\n        tagName: aNode.tagName,\n        vars: aNode.vars,\n        hotspot: aNode.hotspot,\n        directives: cloneDirectives(aNode.directives, {\n            'for': 1\n        })\n    });\n\n    this.param = aNode.directives['for']; // eslint-disable-line dot-notation\n\n    // #[begin] reverse\n    if (reverseWalker) {\n        var me = this;\n        each(\n            evalExpr(this.param.value, this.scope, this.owner),\n            function (item, i) {\n                var itemScope = new ForItemData(me, item, i);\n                var child = createReverseNode(me.itemANode, reverseWalker, me, itemScope);\n                me.children.push(child);\n            }\n        );\n\n        this._create();\n        insertBefore(this.el, reverseWalker.target, reverseWalker.current);\n    }\n    // #[end]\n}\n\n\nForNode.prototype.nodeType = NodeType.FOR;\nForNode.prototype._create = nodeOwnCreateStump;\nForNode.prototype.dispose = nodeOwnSimpleDispose;\n\n/**\n * 将元素attach到页面的行为\n *\n * @param {HTMLElement} parentEl 要添加到的父元素\n * @param {HTMLElement＝} beforeEl 要添加到哪个元素之前\n */\nForNode.prototype.attach = function (parentEl, beforeEl) {\n    this._create();\n    insertBefore(this.el, parentEl, beforeEl);\n\n    // paint list\n    var el = this.el || parentEl.firstChild;\n    var data = evalExpr(this.param.value, this.scope, this.owner);\n    var len = data && data.length || 0;\n    for (var i = 0; i < len; i++) {\n        var child = createForDirectiveChild(this, data[i], i);\n        this.children.push(child);\n        child.attach(parentEl, el);\n    }\n};\n\n/**\n * 将元素从页面上移除的行为\n */\nForNode.prototype.detach = function () {\n    if (this.lifeCycle.attached) {\n        elementDisposeChildren(this);\n        this.children = [];\n        removeEl(this.el);\n        this.lifeCycle = LifeCycle.detached;\n    }\n};\n\n/* eslint-disable fecs-max-statements */\n\n/**\n * 视图更新函数\n *\n * @param {Array} changes 数据变化信息\n */\nForNode.prototype._update = function (changes) {\n\n    var me = this;\n    // 控制列表更新策略是否原样更新的变量\n    var originalUpdate = this.aNode.directives.transition;\n\n\n    var oldChildrenLen = this.children.length;\n    var childrenChanges = new Array(oldChildrenLen);\n\n    function pushToChildrenChanges(change) {\n        for (var i = 0, l = childrenChanges.length; i < l; i++) {\n            (childrenChanges[i] = childrenChanges[i] || []).push(change);\n        }\n    }\n\n    var disposeChildren = [];\n\n\n    // 判断列表是否父元素下唯一的元素\n    // 如果是的话，可以做一些更新优化\n    var parentEl = this.el.parentNode;\n    var parentFirstChild = parentEl.firstChild;\n    var parentLastChild = parentEl.lastChild;\n    var isOnlyParentChild = oldChildrenLen > 0 // 有孩子时\n            && parentFirstChild === this.children[0].el\n            && (parentLastChild === this.el || parentLastChild === this.children[oldChildrenLen - 1].el)\n        || oldChildrenLen === 0 // 无孩子时\n            && parentFirstChild === this.el\n            && parentLastChild === this.el;\n\n    // 控制列表是否整体更新的变量\n    var isChildrenRebuild;\n\n    var newList = evalExpr(this.param.value, this.scope, this.owner);\n    var newLen = newList && newList.length || 0;\n\n    /* eslint-disable no-redeclare */\n    for (var cIndex = 0, cLen = changes.length; cIndex < cLen; cIndex++) {\n        var change = changes[cIndex];\n        var relation = changeExprCompare(change.expr, this.param.value, this.scope);\n\n        if (!relation) {\n            // 无关时，直接传递给子元素更新，列表本身不需要动\n            pushToChildrenChanges(change);\n        }\n        else if (relation > 2) {\n            // 变更表达式是list绑定表达式的子项\n            // 只需要对相应的子项进行更新\n            var changePaths = change.expr.paths;\n            var forLen = this.param.value.paths.length;\n            var changeIndex = +evalExpr(changePaths[forLen], this.scope, this.owner);\n\n            if (isNaN(changeIndex)) {\n                pushToChildrenChanges(change);\n            }\n            else {\n                change = {\n                    type: change.type,\n                    expr: createAccessor(\n                        this.param.item.paths.concat(changePaths.slice(forLen + 1))\n                    ),\n                    value: change.value,\n                    index: change.index,\n                    deleteCount: change.deleteCount,\n                    insertions: change.insertions,\n                    option: change.option\n                };\n\n                (childrenChanges[changeIndex] = childrenChanges[changeIndex] || [])\n                    .push(change);\n\n                if (this.children[changeIndex]) {\n                    if (change.type === DataChangeType.SPLICE) {\n                        this.children[changeIndex].scope._splice(\n                            change.expr,\n                            [].concat(change.index, change.deleteCount, change.insertions),\n                            { silent: 1 }\n                        );\n                    }\n                    else {\n                        this.children[changeIndex].scope._set(\n                            change.expr,\n                            change.value,\n                            { silent: 1 }\n                        );\n                    }\n                }\n            }\n        }\n        else if (change.type !== DataChangeType.SPLICE) {\n            // 变更表达式是list绑定表达式本身或母项的重新设值\n            // 此时需要更新整个列表\n\n\n            // 老的比新的多的部分，标记需要dispose\n            if (oldChildrenLen > newLen) {\n                disposeChildren = disposeChildren.concat(this.children.slice(newLen));\n\n                childrenChanges = childrenChanges.slice(0, newLen);\n                this.children = this.children.slice(0, newLen);\n            }\n\n            // 整项变更\n            for (var i = 0; i < newLen; i++) {\n                (childrenChanges[i] = childrenChanges[i] || []).push({\n                    type: DataChangeType.SET,\n                    option: change.option,\n                    expr: createAccessor(this.param.item.paths.slice(0)),\n                    value: newList[i]\n                });\n\n                // 对list更上级数据的直接设置\n                if (relation < 2) {\n                    childrenChanges[i].push(change);\n                }\n\n                if (this.children[i]) {\n                    this.children[i].scope._set(\n                        this.param.item,\n                        newList[i],\n                        {silent: 1}\n                    );\n                }\n                else {\n                    this.children[i] = 0;\n                }\n            }\n\n            isChildrenRebuild = 1;\n        }\n        else if (relation === 2 && change.type === DataChangeType.SPLICE && !isChildrenRebuild) {\n            // 变更表达式是list绑定表达式本身数组的splice操作\n            // 此时需要删除部分项，创建部分项\n            var changeStart = change.index;\n            var deleteCount = change.deleteCount;\n            var insertionsLen = change.insertions.length;\n            var newCount = insertionsLen - deleteCount;\n\n            if (newCount) {\n                var indexChange = {\n                    type: DataChangeType.SET,\n                    option: change.option,\n                    expr: this.param.index\n                };\n\n                for (var i = changeStart + deleteCount; i < this.children.length; i++) {\n                    (childrenChanges[i] = childrenChanges[i] || []).push(indexChange);\n                    this.children[i] && this.children[i].scope._set(\n                        indexChange.expr,\n                        i - deleteCount + insertionsLen,\n                        {silent: 1}\n                    );\n                }\n            }\n\n            var deleteLen = deleteCount;\n            while (deleteLen--) {\n                if (deleteLen < insertionsLen) {\n                    var i = changeStart + deleteLen;\n                    // update\n                    (childrenChanges[i] = childrenChanges[i] || []).push({\n                        type: DataChangeType.SET,\n                        option: change.option,\n                        expr: createAccessor(this.param.item.paths.slice(0)),\n                        value: change.insertions[deleteLen]\n                    });\n                    if (this.children[i]) {\n                        this.children[i].scope._set(\n                            this.param.item,\n                            change.insertions[deleteLen],\n                            {silent: 1}\n                        );\n                    }\n                }\n            }\n\n            if (newCount < 0) {\n                disposeChildren = disposeChildren.concat(this.children.splice(changeStart + insertionsLen, -newCount));\n                childrenChanges.splice(changeStart + insertionsLen, -newCount);\n            }\n            else if (newCount > 0) {\n                var spliceArgs = [changeStart + deleteCount, 0].concat(new Array(newCount));\n                this.children.splice.apply(this.children, spliceArgs);\n                childrenChanges.splice.apply(childrenChanges, spliceArgs);\n            }\n        }\n    }\n\n    var newChildrenLen = this.children.length;\n\n    // 标记 length 是否发生变化\n    if (newChildrenLen !== oldChildrenLen) {\n        var lengthChange = {\n            type: DataChangeType.SET,\n            option: {},\n            expr: createAccessor(\n                this.param.value.paths.concat({\n                    type: ExprType.STRING,\n                    value: 'length'\n                })\n            )\n        };\n\n        if (changesIsInDataRef([lengthChange], this.aNode.hotspot.data)) {\n            pushToChildrenChanges(lengthChange);\n        }\n    }\n\n    // 清除应该干掉的 child\n    this._doCreateAndUpdate = doCreateAndUpdate;\n\n    // 这里不用getTransition，getTransition和scope相关，for和forItem的scope是不同的\n    // 所以getTransition结果本身也是不一致的。不如直接判断指令是否存在，如果存在就不进入暴力清除模式\n    // var violentClear = isOnlyParentChild && newChildrenLen === 0 && !elementGetTransition(me);\n    var violentClear = !originalUpdate && isOnlyParentChild && newChildrenLen === 0;\n\n    var disposedChildCount = 0;\n    for (var i = 0; i < disposeChildren.length; i++) {\n        var disposeChild = disposeChildren[i];\n        if (disposeChild) {\n            disposeChild._ondisposed = childDisposed;\n            disposeChild.dispose(violentClear, violentClear);\n        }\n        else {\n            childDisposed();\n        }\n    }\n\n    if (violentClear) {\n        // cloneNode + replaceChild is faster\n        // parentEl.innerHTML = '';\n        var replaceNode = parentEl.cloneNode(false);\n        parentEl.parentNode.replaceChild(replaceNode, parentEl);\n        this.el = document.createComment(this.id);\n        replaceNode.appendChild(this.el);\n    }\n\n    if (disposeChildren.length === 0) {\n        doCreateAndUpdate();\n    }\n\n\n    function childDisposed() {\n        disposedChildCount++;\n        if (disposedChildCount === disposeChildren.length\n            && doCreateAndUpdate === me._doCreateAndUpdate\n        ) {\n            doCreateAndUpdate();\n        }\n    }\n\n    function doCreateAndUpdate() {\n        me._doCreateAndUpdate = null;\n        if (violentClear) {\n            return;\n        }\n\n\n        var beforeEl = me.el;\n\n        // 对相应的项进行更新\n        if (oldChildrenLen === 0 && isOnlyParentChild) {\n            for (var i = 0; i < newChildrenLen; i++) {\n                me.children[i] = createForDirectiveChild(me, newList[i], i);\n                me.children[i].attach(parentEl, beforeEl);\n            }\n        }\n        else {\n            // 如果不attached则直接创建，如果存在则调用更新函数\n            var j = -1;\n            for (var i = 0; i < newChildrenLen; i++) {\n                var child = me.children[i];\n\n                if (child) {\n                    childrenChanges[i] && child._update(childrenChanges[i]);\n                }\n                else {\n                    if (j < i) {\n                        j = i + 1;\n                        beforeEl = null;\n                        while (j < newChildrenLen) {\n                            var nextChild = me.children[j];\n                            if (nextChild) {\n                                beforeEl = nextChild.sel || nextChild.el;\n                                break;\n                            }\n                            j++;\n                        }\n                    }\n\n                    me.children[i] = createForDirectiveChild(me, newList[i], i);\n                    me.children[i].attach(parentEl, beforeEl || me.el);\n                }\n            }\n        }\n    }\n};\n\n\n// exports = module.exports = ForNode;\n\n\n/**\n * @file 清洗条件 aNode\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var createANode = require('../parser/create-a-node');\n// var cloneDirectives = require('../parser/clone-directives');\n\n\n/**\n * 清洗条件 aNode，返回纯净无条件指令的 aNode\n *\n * @param {ANode} aNode 条件节点对象\n * @return {ANode}\n */\nfunction rinseCondANode(aNode) {\n    var clearANode = createANode({\n        children: aNode.children,\n        props: aNode.props,\n        events: aNode.events,\n        tagName: aNode.tagName,\n        vars: aNode.vars,\n        hotspot: aNode.hotspot,\n        directives: cloneDirectives(aNode.directives, {\n            'if': 1,\n            'else': 1,\n            'elif': 1\n        })\n    });\n\n    return clearANode;\n}\n\n// exports = module.exports = rinseCondANode;\n\n\n/**\n * @file if 指令节点类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var each = require('../util/each');\n// var guid = require('../util/guid');\n// var insertBefore = require('../browser/insert-before');\n// var evalExpr = require('../runtime/eval-expr');\n// var NodeType = require('./node-type');\n// var rinseCondANode = require('./rinse-cond-anode');\n// var createNode = require('./create-node');\n// var createReverseNode = require('./create-reverse-node');\n// var nodeOwnCreateStump = require('./node-own-create-stump');\n// var elementUpdateChildren = require('./element-update-children');\n// var nodeOwnSimpleDispose = require('./node-own-simple-dispose');\n\n/**\n * if 指令节点类\n *\n * @param {Object} aNode 抽象节点\n * @param {Component} owner 所属组件环境\n * @param {Model=} scope 所属数据环境\n * @param {Node} parent 父亲节点\n * @param {DOMChildrenWalker?} reverseWalker 子元素遍历对象\n */\nfunction IfNode(aNode, owner, scope, parent, reverseWalker) {\n    this.aNode = aNode;\n    this.owner = owner;\n    this.scope = scope;\n    this.parent = parent;\n    this.parentComponent = parent.nodeType === NodeType.CMPT\n        ? parent\n        : parent.parentComponent;\n\n    this.id = guid();\n    this.children = [];\n\n    this.cond = this.aNode.directives['if'].value; // eslint-disable-line dot-notation\n\n    // #[begin] reverse\n    if (reverseWalker) {\n        if (evalExpr(this.cond, this.scope, this.owner)) {\n            this.elseIndex = -1;\n            this.children[0] = createReverseNode(\n                rinseCondANode(aNode),\n                reverseWalker,\n                this\n            );\n        }\n        else {\n            var me = this;\n            each(aNode.elses, function (elseANode, index) {\n                var elif = elseANode.directives.elif;\n\n                if (!elif || elif && evalExpr(elif.value, me.scope, me.owner)) {\n                    me.elseIndex = index;\n                    me.children[0] = createReverseNode(\n                        rinseCondANode(elseANode),\n                        reverseWalker,\n                        me\n                    );\n                    return false;\n                }\n            });\n        }\n\n        this._create();\n        insertBefore(this.el, reverseWalker.target, reverseWalker.current);\n    }\n    // #[end]\n}\n\nIfNode.prototype.nodeType = NodeType.IF;\n\nIfNode.prototype._create = nodeOwnCreateStump;\nIfNode.prototype.dispose = nodeOwnSimpleDispose;\n\nIfNode.prototype.attach = function (parentEl, beforeEl) {\n    var me = this;\n    var elseIndex;\n    var child;\n\n    if (evalExpr(this.cond, this.scope, this.owner)) {\n        child = createNode(rinseCondANode(me.aNode), me);\n        elseIndex = -1;\n    }\n    else {\n        each(me.aNode.elses, function (elseANode, index) {\n            var elif = elseANode.directives.elif;\n\n            if (!elif || elif && evalExpr(elif.value, me.scope, me.owner)) {\n                child = createNode(rinseCondANode(elseANode), me);\n                elseIndex = index;\n                return false;\n            }\n        });\n    }\n\n    if (child) {\n        me.children[0] = child;\n        child.attach(parentEl, beforeEl);\n        me.elseIndex = elseIndex;\n    }\n\n\n    this._create();\n    insertBefore(this.el, parentEl, beforeEl);\n};\n\n\n/**\n * 视图更新函数\n *\n * @param {Array} changes 数据变化信息\n */\nIfNode.prototype._update = function (changes) {\n    var me = this;\n    var childANode = me.aNode;\n    var elseIndex;\n\n    if (evalExpr(this.cond, this.scope, this.owner)) {\n        elseIndex = -1;\n    }\n    else {\n        each(me.aNode.elses, function (elseANode, index) {\n            var elif = elseANode.directives.elif;\n\n            if (elif && evalExpr(elif.value, me.scope, me.owner) || !elif) {\n                elseIndex = index;\n                childANode = elseANode;\n                return false;\n            }\n        });\n    }\n\n    if (elseIndex === me.elseIndex) {\n        elementUpdateChildren(me, changes);\n    }\n    else {\n        var child = me.children[0];\n        me.children = [];\n        if (child) {\n            child._ondisposed = newChild;\n            child.dispose();\n        }\n        else {\n            newChild();\n        }\n\n        me.elseIndex = elseIndex;\n    }\n\n    function newChild() {\n        if (typeof elseIndex !== 'undefined') {\n            var child = createNode(rinseCondANode(childANode), me);\n            // var parentEl = getNodeStumpParent(me);\n            child.attach(me.el.parentNode, me.el);\n\n            me.children[0] = child;\n        }\n    }\n};\n\n// exports = module.exports = IfNode;\n\n\n/**\n * @file template 节点类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var each = require('../util/each');\n// var guid = require('../util/guid');\n// var insertBefore = require('../browser/insert-before');\n// var NodeType = require('./node-type');\n// var LifeCycle = require('./life-cycle');\n// var nodeDispose = require('./node-dispose');\n// var createReverseNode = require('./create-reverse-node');\n// var elementDisposeChildren = require('./element-dispose-children');\n// var elementOwnToPhase = require('./element-own-to-phase');\n// var elementUpdateChildren = require('./element-update-children');\n// var nodeOwnOnlyChildrenAttach = require('./node-own-only-children-attach');\n\n/**\n * template 节点类\n *\n * @param {Object} aNode 抽象节点\n * @param {Component} owner 所属组件环境\n * @param {Model=} scope 所属数据环境\n * @param {Node} parent 父亲节点\n * @param {DOMChildrenWalker?} reverseWalker 子元素遍历对象\n */\nfunction TemplateNode(aNode, owner, scope, parent, reverseWalker) {\n    this.aNode = aNode;\n    this.owner = owner;\n    this.scope = scope;\n    this.parent = parent;\n    this.parentComponent = parent.nodeType === NodeType.CMPT\n        ? parent\n        : parent.parentComponent;\n\n    this.id = guid();\n    this.lifeCycle = LifeCycle.start;\n    this.children = [];\n\n    // #[begin] reverse\n    if (reverseWalker) {\n        this.sel = document.createComment(this.id);\n        insertBefore(this.sel, reverseWalker.target, reverseWalker.current);\n\n        var me = this;\n        each(this.aNode.children, function (aNodeChild) {\n            me.children.push(createReverseNode(aNodeChild, reverseWalker, me));\n        });\n\n        this.el = document.createComment(this.id);\n        insertBefore(this.el, reverseWalker.target, reverseWalker.current);\n\n        this._toPhase('attached');\n    }\n    // #[end]\n}\n\n\n\nTemplateNode.prototype.nodeType = NodeType.TPL;\n\nTemplateNode.prototype.attach = nodeOwnOnlyChildrenAttach;\n\n/**\n * 销毁释放\n *\n * @param {boolean=} noDetach 是否不要把节点从dom移除\n * @param {boolean=} noTransition 是否不显示过渡动画效果\n */\nTemplateNode.prototype.dispose = function (noDetach, noTransition) {\n    elementDisposeChildren(this, noDetach, noTransition);\n    nodeDispose(this);\n};\n\n\nTemplateNode.prototype._toPhase = elementOwnToPhase;\n\n/**\n * 视图更新函数\n *\n * @param {Array} changes 数据变化信息\n */\nTemplateNode.prototype._update = function (changes) {\n    elementUpdateChildren(this, changes);\n};\n\n// exports = module.exports = TemplateNode;\n\n\n/**\n * @file 对元素的子节点进行反解\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var each = require('../util/each');\n// var DOMChildrenWalker = require('./dom-children-walker');\n// var createReverseNode = require('./create-reverse-node');\n\n// #[begin] reverse\n\n/**\n * 对元素的子节点进行反解\n *\n * @param {Object} element 元素\n */\nfunction reverseElementChildren(element) {\n    var htmlDirective = element.aNode.directives.html;\n\n    if (!htmlDirective) {\n        var reverseWalker = new DOMChildrenWalker(element.el);\n\n        each(element.aNode.children, function (aNodeChild) {\n            element.children.push(createReverseNode(aNodeChild, reverseWalker, element));\n        });\n    }\n}\n// #[end]\n\n// exports = module.exports = reverseElementChildren;\n\n\n/**\n * @file 处理元素的属性操作\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var getPropHandler = require('./get-prop-handler');\n\n/**\n * 处理元素属性操作\n *\n * @param {Object} element 元素对象\n * @param {*} value 属性值\n * @param {Object} prop 属性信息对象\n */\nfunction handleProp(element, value, prop) {\n    var name = prop.name;\n    getPropHandler(element.tagName, name).prop(element.el, value, name, element, prop);\n}\n\n// exports = module.exports = handleProp;\n\n\n/**\n * @file 创建节点对应的 HTMLElement 主元素\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var evalExpr = require('../runtime/eval-expr');\n// var createEl = require('../browser/create-el');\n// var handleProp = require('./handle-prop');\n// var LifeCycle = require('./life-cycle');\n// var NodeType = require('./node-type');\n\nvar emptyPropWhenCreate = {\n    'class': 1,\n    'style': 1,\n    'id': 1\n};\n\n/**\n * 创建节点对应的 HTMLElement 主元素\n */\nfunction elementOwnCreate() {\n    if (!this.lifeCycle.created) {\n        this.lifeCycle = LifeCycle.painting;\n\n        var isComponent = this.nodeType === NodeType.CMPT;\n        var sourceNode = this.aNode.hotspot.sourceNode;\n        var props = this.aNode.props;\n\n        if (sourceNode) {\n            this.el = sourceNode.cloneNode();\n            props = this.aNode.hotspot.dynamicProps;\n        }\n        else {\n            this.el = createEl(this.tagName);\n        }\n\n        for (var i = 0, l = props.length; i < l; i++) {\n            var prop = props[i];\n            var value = isComponent\n                ? evalExpr(prop.expr, this.data, this)\n                : evalExpr(prop.expr, this.scope, this.owner);\n\n            if (value || !emptyPropWhenCreate[prop.name]) {\n                handleProp(this, value, prop);\n            }\n        }\n\n        this._toPhase('created');\n    }\n}\n\n// exports = module.exports = elementOwnCreate;\n\n\n/**\n * @file 将元素attach到页面\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var createNode = require('./create-node');\n// var evalExpr = require('../runtime/eval-expr');\n// var insertBefore = require('../browser/insert-before');\n\n/**\n * 将元素attach到页面\n *\n * @param {Object} element 元素节点\n * @param {HTMLElement} parentEl 要添加到的父元素\n * @param {HTMLElement＝} beforeEl 要添加到哪个元素之前\n */\nfunction elementAttach(element, parentEl, beforeEl) {\n    element._create();\n    insertBefore(element.el, parentEl, beforeEl);\n\n    if (!element._contentReady) {\n        var htmlDirective = element.aNode.directives.html;\n\n        if (htmlDirective) {\n            element.el.innerHTML = evalExpr(htmlDirective.value, element.scope, element.owner);\n        }\n        else {\n            var aNodeChildren = element.aNode.children;\n            for (var i = 0; i < aNodeChildren.length; i++) {\n                var child = createNode(aNodeChildren[i], element);\n                element.children.push(child);\n                child.attach(element.el);\n            }\n        }\n\n        element._contentReady = 1;\n    }\n}\n\n\n// exports = module.exports = elementAttach;\n\n\n/**\n * @file 将元素attach到页面\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var elementAttach = require('./element-attach');\n\n/**\n * 将元素attach到页面\n *\n * @param {HTMLElement} parentEl 要添加到的父元素\n * @param {HTMLElement＝} beforeEl 要添加到哪个元素之前\n */\nfunction elementOwnAttach(parentEl, beforeEl) {\n    if (!this.lifeCycle.attached) {\n        elementAttach(this, parentEl, beforeEl);\n        this._attached();\n    }\n}\n\n// exports = module.exports = elementOwnAttach;\n\n\n/**\n * @file 获取 element 的 transition 控制对象\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var evalArgs = require('../runtime/eval-args');\n// var findMethod = require('../runtime/find-method');\n// var NodeType = require('./node-type');\n\n/**\n * 获取 element 的 transition 控制对象\n *\n * @param {Object} element 元素\n * @return {Object?}\n */\nfunction elementGetTransition(element) {\n    var aNode = element.nodeType === NodeType.CMPT ? element.givenANode : element.aNode;\n    var directive = aNode && aNode.directives.transition;\n    var owner = element.owner;\n\n    var transition;\n    if (directive && owner) {\n        transition = findMethod(owner, directive.value.name);\n\n        if (typeof transition === 'function') {\n            transition = transition.apply(\n                owner,\n                evalArgs(directive.value.args, element.scope, owner)\n            );\n        }\n    }\n\n    return transition || element.transition;\n}\n\n// exports = module.exports = elementGetTransition;\n\n\n/**\n * @file 元素节点执行leave行为\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var elementGetTransition = require('./element-get-transition');\n\n\n/**\n * 元素节点执行leave行为\n *\n * @param {Object} element 元素\n */\nfunction elementLeave(element) {\n    var lifeCycle = element.lifeCycle;\n    if (lifeCycle.leaving) {\n        return;\n    }\n\n    if (element.disposeNoTransition) {\n        element._doneLeave();\n    }\n    else {\n        var transition = elementGetTransition(element);\n\n        if (transition && transition.leave) {\n            element._toPhase('leaving');\n            transition.leave(element.el, function () {\n                element._doneLeave();\n            });\n        }\n        else {\n            element._doneLeave();\n        }\n    }\n}\n\n// exports = module.exports = elementLeave;\n\n\n/**\n * @file 将元素从页面上移除\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var elementLeave = require('./element-leave');\n\n/**\n * 将元素从页面上移除\n */\nfunction elementOwnDetach() {\n    elementLeave(this);\n}\n\n\n// exports = module.exports = elementOwnDetach;\n\n\n/**\n * @file 销毁释放元素\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var elementLeave = require('./element-leave');\n\n/**\n * 销毁释放元素\n *\n * @param {boolean=} noDetach 是否不要把节点从dom移除\n * @param {boolean=} noTransition 是否不显示过渡动画效果\n */\nfunction elementOwnDispose(noDetach, noTransition) {\n    this.leaveDispose = 1;\n    this.disposeNoDetach = noDetach;\n    this.disposeNoTransition = noTransition;\n\n    elementLeave(this);\n}\n\n// exports = module.exports = elementOwnDispose;\n\n\n/**\n * @file 为元素的 el 绑定事件\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var on = require('../browser/on');\n\n/**\n * 为元素的 el 绑定事件\n *\n * @param {string} name 事件名\n * @param {Function} listener 监听器\n * @param {boolean} capture 是否是捕获阶段触发\n */\nfunction elementOwnOnEl(name, listener, capture) {\n    if (typeof listener === 'function') {\n        capture = !!capture;\n        this._elFns.push([name, listener, capture]);\n        on(this.el, name, listener, capture);\n    }\n}\n\n// exports = module.exports = elementOwnOnEl;\n\n\n/**\n * @file  事件绑定不存在的 warning\n * @author varsha(wangshuonpu@gmail.com)\n */\n\n// var each = require('../util/each');\n\n// #[begin] error\n/**\n * 事件绑定不存在的 warning\n *\n * @param {Object} eventBind 事件绑定对象\n * @param {Component} owner 所属的组件对象\n */\nfunction warnEventListenMethod(eventBind, owner) {\n    var valid = true;\n    var method = owner;\n    each(eventBind.expr.name.paths, function (path) {\n        if (!path.value) {\n            return false;\n        }\n\n        method = method[path.value];\n        valid = !!method;\n        return valid;\n    });\n\n    if (!valid) {\n        var paths = [];\n        each(eventBind.expr.name.paths, function (path) {\n            paths.push(path.value);\n        });\n        var message = '[SAN WARNING] ' + eventBind.name + ' listen fail,\"' + paths.join('.') + '\" not exist';\n\n        /* eslint-disable no-console */\n        if (typeof console === 'object' && console.warn) {\n            console.warn(message);\n        }\n        else {\n            throw new Error(message);\n        }\n        /* eslint-enable no-console */\n    }\n}\n// #[end]\n\n// exports = module.exports = warnEventListenMethod;\n\n\n/**\n * @file 完成元素 attached 后的行为\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var bind = require('../util/bind');\n// var empty = require('../util/empty');\n// var isBrowser = require('../browser/is-browser');\n// var trigger = require('../browser/trigger');\n// var NodeType = require('./node-type');\n// var elementGetTransition = require('./element-get-transition');\n// var eventDeclarationListener = require('./event-declaration-listener');\n// var getPropHandler = require('./get-prop-handler');\n// var warnEventListenMethod = require('./warn-event-listen-method');\n\n/**\n * 双绑输入框CompositionEnd事件监听函数\n *\n * @inner\n */\nfunction inputOnCompositionEnd() {\n    if (!this.composing) {\n        return;\n    }\n\n    this.composing = 0;\n\n    trigger(this, 'input');\n}\n\n/**\n * 双绑输入框CompositionStart事件监听函数\n *\n * @inner\n */\nfunction inputOnCompositionStart() {\n    this.composing = 1;\n}\n\nfunction xPropOutputer(xProp, data) {\n    getPropHandler(this.tagName, xProp.name).output(this, xProp, data);\n}\n\nfunction inputXPropOutputer(element, xProp, data) {\n    var outputer = bind(xPropOutputer, element, xProp, data);\n    return function (e) {\n        if (!this.composing) {\n            outputer(e);\n        }\n    };\n}\n\n/**\n * 完成元素 attached 后的行为\n *\n * @param {Object} element 元素节点\n */\nfunction elementOwnAttached() {\n    this._toPhase('created');\n\n    var isComponent = this.nodeType === NodeType.CMPT;\n    var data = isComponent ? this.data : this.scope;\n\n    /* eslint-disable no-redeclare */\n\n    // 处理自身变化时双向绑定的逻辑\n    var xProps = this.aNode.hotspot.xProps;\n    for (var i = 0, l = xProps.length; i < l; i++) {\n        var xProp = xProps[i];\n\n        switch (xProp.name) {\n            case 'value':\n                switch (this.tagName) {\n                    case 'input':\n                    case 'textarea':\n                        if (isBrowser && window.CompositionEvent) {\n                            this._onEl('change', inputOnCompositionEnd);\n                            this._onEl('compositionstart', inputOnCompositionStart);\n                            this._onEl('compositionend', inputOnCompositionEnd);\n                        }\n\n                        this._onEl(\n                            ('oninput' in this.el) ? 'input' : 'propertychange',\n                            inputXPropOutputer(this, xProp, data)\n                        );\n\n                        break;\n\n                    case 'select':\n                        this._onEl('change', bind(xPropOutputer, this, xProp, data));\n                        break;\n                }\n                break;\n\n            case 'checked':\n                switch (this.tagName) {\n                    case 'input':\n                        switch (this.el.type) {\n                            case 'checkbox':\n                            case 'radio':\n                                this._onEl('click', bind(xPropOutputer, this, xProp, data));\n                        }\n                }\n                break;\n        }\n    }\n\n    // bind events\n    var events = isComponent\n        ? this.aNode.events.concat(this.nativeEvents)\n        : this.aNode.events;\n\n    for (var i = 0, l = events.length; i < l; i++) {\n        var eventBind = events[i];\n        var owner = isComponent ? this : this.owner;\n\n        // 判断是否是nativeEvent，下面的warn方法和事件绑定都需要\n        // 依此指定eventBind.expr.name位于owner还是owner.owner上\n        if (eventBind.modifier.native) {\n            owner = owner.owner;\n            data = this.scope || owner.data;\n        }\n\n        // #[begin] error\n        warnEventListenMethod(eventBind, owner);\n        // #[end]\n\n        this._onEl(\n            eventBind.name,\n            bind(\n                eventDeclarationListener,\n                owner,\n                eventBind,\n                0,\n                data\n            ),\n            eventBind.modifier.capture\n        );\n    }\n\n    this._toPhase('attached');\n\n\n    if (this._isInitFromEl) {\n        this._isInitFromEl = false;\n    }\n    else {\n        var transition = elementGetTransition(this);\n        if (transition && transition.enter) {\n            transition.enter(this.el, empty);\n        }\n    }\n}\n\n// exports = module.exports = elementOwnAttached;\n\n\n/**\n * @file 销毁元素节点\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var un = require('../browser/un');\n// var removeEl = require('../browser/remove-el');\n// var elementDisposeChildren = require('./element-dispose-children');\n// var nodeDispose = require('./node-dispose');\n\n/**\n * 销毁元素节点\n *\n * @param {Object} element 要销毁的元素节点\n * @param {Object=} options 销毁行为的参数\n */\nfunction elementDispose(element) {\n    elementDisposeChildren(element, 1, 1);\n\n    // el 事件解绑\n    var len = element._elFns.length;\n    while (len--) {\n        var fn = element._elFns[len];\n        un(element.el, fn[0], fn[1], fn[2]);\n    }\n    element._elFns = null;\n\n\n    // 如果没有parent，说明是一个root component，一定要从dom树中remove\n    if (!element.disposeNoDetach || !element.parent) {\n        removeEl(element.el);\n    }\n\n    if (element._toPhase) {\n        element._toPhase('detached');\n    }\n\n    nodeDispose(element);\n}\n\n\n// exports = module.exports = elementDispose;\n\n\n/**\n * @file 初始化 element 节点的 tagName 处理\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ieOldThan9 = require('../browser/ie-old-than-9');\n\n/**\n * 初始化 element 节点的 tagName 处理\n *\n * @param {Object} node 节点对象\n */\nfunction elementInitTagName(node) {\n    node.tagName = node.tagName || node.aNode.tagName || 'div';\n\n    // #[begin] allua\n    // ie8- 不支持innerHTML输出自定义标签\n    if (ieOldThan9 && node.tagName.indexOf('-') > 0) {\n        node.tagName = 'div';\n    }\n    // #[end]\n}\n\n\n// exports = module.exports = elementInitTagName;\n\n\n/**\n * @file 给 devtool 发通知消息\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var isBrowser = require('../browser/is-browser');\n\n// #[begin] devtool\nvar san4devtool;\n\n/**\n * 给 devtool 发通知消息\n *\n * @param {string} name 消息名称\n * @param {*} arg 消息参数\n */\nfunction emitDevtool(name, arg) {\n    if (isBrowser && san4devtool && san4devtool.debug && window.__san_devtool__) {\n        window.__san_devtool__.emit(name, arg);\n    }\n}\n\nemitDevtool.start = function (main) {\n    san4devtool = main;\n    emitDevtool('san', main);\n};\n// #[end]\n\n// exports = module.exports = emitDevtool;\n\n\n/**\n * @file 组件类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var bind = require('../util/bind');\n// var each = require('../util/each');\n// var guid = require('../util/guid');\n// var extend = require('../util/extend');\n// var nextTick = require('../util/next-tick');\n// var emitDevtool = require('../util/emit-devtool');\n// var ExprType = require('../parser/expr-type');\n// var parseExpr = require('../parser/parse-expr');\n// var createAccessor = require('../parser/create-accessor');\n// var postProp = require('../parser/post-prop');\n// var removeEl = require('../browser/remove-el');\n// var Data = require('../runtime/data');\n// var evalExpr = require('../runtime/eval-expr');\n// var changeExprCompare = require('../runtime/change-expr-compare');\n// var compileComponent = require('./compile-component');\n// var componentPreheat = require('./component-preheat');\n// var LifeCycle = require('./life-cycle');\n// var getANodeProp = require('./get-a-node-prop');\n// var isDataChangeByElement = require('./is-data-change-by-element');\n// var eventDeclarationListener = require('./event-declaration-listener');\n// var reverseElementChildren = require('./reverse-element-children');\n// var camelComponentBinds = require('./camel-component-binds');\n// var NodeType = require('./node-type');\n// var elementInitTagName = require('./element-init-tag-name');\n// var elementOwnAttached = require('./element-own-attached');\n// var elementDispose = require('./element-dispose');\n// var elementUpdateChildren = require('./element-update-children');\n// var elementOwnOnEl = require('./element-own-on-el');\n// var elementOwnCreate = require('./element-own-create');\n// var elementOwnAttach = require('./element-own-attach');\n// var elementOwnDetach = require('./element-own-detach');\n// var elementOwnDispose = require('./element-own-dispose');\n// var warnEventListenMethod = require('./warn-event-listen-method');\n// var elementDisposeChildren = require('./element-dispose-children');\n// var elementAttach = require('./element-attach');\n// var handleProp = require('./handle-prop');\n// var createDataTypesChecker = require('../util/create-data-types-checker');\n\n\n\n/**\n * 组件类\n *\n * @class\n * @param {Object} options 初始化参数\n */\nfunction Component(options) { // eslint-disable-line\n    options = options || {};\n\n    this.lifeCycle = LifeCycle.start;\n    this.children = [];\n    this._elFns = [];\n    this.listeners = {};\n    this.slotChildren = [];\n\n    var clazz = this.constructor;\n\n    this.filters = this.filters || clazz.filters || {};\n    this.computed = this.computed || clazz.computed || {};\n    this.messages = this.messages || clazz.messages || {};\n    this.subTag = options.subTag;\n\n    // compile\n    compileComponent(clazz);\n    componentPreheat(clazz);\n\n    var me = this;\n    var protoANode = clazz.prototype.aNode;\n\n    me.givenANode = options.aNode;\n    me.givenNamedSlotBinds = [];\n    me.givenSlots = {\n        named: {}\n    };\n\n    this.owner = options.owner;\n    this.scope = options.scope;\n    this.el = options.el;\n\n    var parent = options.parent;\n    if (parent) {\n        this.parent = parent;\n        this.parentComponent = parent.nodeType === NodeType.CMPT\n            ? parent\n            : parent && parent.parentComponent;\n    }\n\n    this.id = guid();\n\n    // #[begin] reverse\n    if (this.el) {\n        var firstChild = this.el.firstChild;\n        if (firstChild && firstChild.nodeType === 8) {\n            var stumpMatch = firstChild.data.match(/^\\s*s-data:([\\s\\S]+)?$/);\n            if (stumpMatch) {\n                var stumpText = stumpMatch[1];\n\n                // fill component data\n                options.data = (new Function(\n                    'return ' + stumpText.replace(/^[\\s\\n]*/, '')\n                ))();\n\n                removeEl(firstChild);\n            }\n        }\n    }\n    // #[end]\n\n    // native事件数组\n    this.nativeEvents = [];\n\n    if (this.givenANode) {\n        // 组件运行时传入的结构，做slot解析\n        this._createGivenSlots();\n\n        each(this.givenANode.events, function (eventBind) {\n            // 保存当前实例的native事件，下面创建aNode时候做合并\n            if (eventBind.modifier.native) {\n                me.nativeEvents.push(eventBind);\n                return;\n            }\n\n            // #[begin] error\n            warnEventListenMethod(eventBind, options.owner);\n            // #[end]\n\n            me.on(\n                eventBind.name,\n                bind(eventDeclarationListener, options.owner, eventBind, 1, options.scope),\n                eventBind\n            );\n        });\n\n        this.tagName = protoANode.tagName || me.givenANode.tagName;\n        this.binds = camelComponentBinds(this.givenANode.props);\n    }\n\n    this._toPhase('compiled');\n\n    // init data\n    this.data = new Data(\n        extend(\n            typeof this.initData === 'function' && this.initData() || {},\n            options.data\n        )\n    );\n\n    elementInitTagName(this);\n\n    each(this.binds, function (bind) {\n        postProp(bind);\n\n        if (me.scope) {\n            var value = evalExpr(bind.expr, me.scope, me.owner);\n            if (typeof value !== 'undefined') {\n                // See: https://github.com/ecomfe/san/issues/191\n                me.data.set(bind.name, value);\n            }\n        }\n    });\n\n    // #[begin] error\n    // 在初始化 + 数据绑定后，开始数据校验\n    // NOTE: 只在开发版本中进行属性校验\n    var dataTypes = this.dataTypes || clazz.dataTypes;\n    if (dataTypes) {\n        var dataTypeChecker = createDataTypesChecker(\n            dataTypes,\n            this.subTag || this.name || clazz.name\n        );\n        this.data.setTypeChecker(dataTypeChecker);\n        this.data.checkDataTypes();\n    }\n    // #[end]\n\n    this.computedDeps = {};\n    /* eslint-disable guard-for-in */\n    for (var expr in this.computed) {\n        if (!this.computedDeps[expr]) {\n            this._calcComputed(expr);\n        }\n    }\n    /* eslint-enable guard-for-in */\n\n    if (!this.dataChanger) {\n        this.dataChanger = bind(this._dataChanger, this);\n        this.data.listen(this.dataChanger);\n    }\n    this._toPhase('inited');\n\n    // #[begin] reverse\n    if (this.el) {\n        reverseElementChildren(this);\n        this._attached();\n    }\n\n    var walker = options.reverseWalker;\n    if (walker) {\n        var currentNode = walker.current;\n        if (currentNode && currentNode.nodeType === 1) {\n            this.el = currentNode;\n            walker.goNext();\n        }\n\n        reverseElementChildren(this);\n\n        this._attached();\n    }\n    // #[end]\n}\n\n\n\nComponent.prototype.getComponentType = function (aNode) {\n    return this.components[aNode.tagName];\n};\n\n/**\n * 初始化创建组件外部传入的插槽对象\n *\n * @protected\n */\nComponent.prototype._createGivenSlots = function () {\n    var me = this;\n    me.givenSlots.named = {};\n\n    // 组件运行时传入的结构，做slot解析\n    me.givenANode && me.scope && each(me.givenANode.children, function (child) {\n        var target;\n\n        var slotBind = !child.textExpr && getANodeProp(child, 'slot');\n        if (slotBind) {\n            !me.givenSlotInited && me.givenNamedSlotBinds.push(slotBind);\n\n            var slotName = evalExpr(slotBind.expr, me.scope, me.owner);\n            target = me.givenSlots.named[slotName];\n            if (!target) {\n                target = me.givenSlots.named[slotName] = [];\n            }\n        }\n        else if (!me.givenSlotInited) {\n            target = me.givenSlots.noname;\n            if (!target) {\n                target = me.givenSlots.noname = [];\n            }\n        }\n\n        target && target.push(child);\n    });\n\n    me.givenSlotInited = true;\n};\n\n/**\n * 类型标识\n *\n * @type {string}\n */\nComponent.prototype.nodeType = NodeType.CMPT;\n\n/**\n * 在下一个更新周期运行函数\n *\n * @param {Function} fn 要运行的函数\n */\nComponent.prototype.nextTick = nextTick;\n\n/* eslint-disable operator-linebreak */\n/**\n * 使节点到达相应的生命周期\n *\n * @protected\n * @param {string} name 生命周期名称\n */\nComponent.prototype._callHook =\nComponent.prototype._toPhase = function (name) {\n    if (!this.lifeCycle[name]) {\n        this.lifeCycle = LifeCycle[name] || this.lifeCycle;\n        if (typeof this[name] === 'function') {\n            this[name]();\n        }\n\n        // 通知devtool\n        // #[begin] devtool\n        emitDevtool('comp-' + name, this);\n        // #[end]\n    }\n};\n/* eslint-enable operator-linebreak */\n\n\n/**\n * 添加事件监听器\n *\n * @param {string} name 事件名\n * @param {Function} listener 监听器\n * @param {string?} declaration 声明式\n */\nComponent.prototype.on = function (name, listener, declaration) {\n    if (typeof listener === 'function') {\n        if (!this.listeners[name]) {\n            this.listeners[name] = [];\n        }\n        this.listeners[name].push({fn: listener, declaration: declaration});\n    }\n};\n\n/**\n * 移除事件监听器\n *\n * @param {string} name 事件名\n * @param {Function=} listener 监听器\n */\nComponent.prototype.un = function (name, listener) {\n    var nameListeners = this.listeners[name];\n    var len = nameListeners && nameListeners.length;\n\n    while (len--) {\n        if (!listener || listener === nameListeners[len].fn) {\n            nameListeners.splice(len, 1);\n        }\n    }\n};\n\n\n/**\n * 派发事件\n *\n * @param {string} name 事件名\n * @param {Object} event 事件对象\n */\nComponent.prototype.fire = function (name, event) {\n    var me = this;\n    each(this.listeners[name], function (listener) {\n        listener.fn.call(me, event);\n    });\n};\n\n/**\n * 计算 computed 属性的值\n *\n * @private\n * @param {string} computedExpr computed表达式串\n */\nComponent.prototype._calcComputed = function (computedExpr) {\n    var computedDeps = this.computedDeps[computedExpr];\n    if (!computedDeps) {\n        computedDeps = this.computedDeps[computedExpr] = {};\n    }\n\n    this.data.set(computedExpr, this.computed[computedExpr].call({\n        data: {\n            get: bind(function (expr) {\n                // #[begin] error\n                if (!expr) {\n                    throw new Error('[SAN ERROR] call get method in computed need argument');\n                }\n                // #[end]\n\n                if (!computedDeps[expr]) {\n                    computedDeps[expr] = 1;\n\n                    if (this.computed[expr]) {\n                        this._calcComputed(expr);\n                    }\n\n                    this.watch(expr, function () {\n                        this._calcComputed(computedExpr);\n                    });\n                }\n\n                return this.data.get(expr);\n            }, this)\n        }\n    }));\n};\n\n/**\n * 派发消息\n * 组件可以派发消息，消息将沿着组件树向上传递，直到遇上第一个处理消息的组件\n *\n * @param {string} name 消息名称\n * @param {*?} value 消息值\n */\nComponent.prototype.dispatch = function (name, value) {\n    var parentComponent = this.parentComponent;\n\n    while (parentComponent) {\n        var receiver = parentComponent.messages[name] || parentComponent.messages['*'];\n        if (typeof receiver === 'function') {\n            receiver.call(\n                parentComponent,\n                {target: this, value: value, name: name}\n            );\n            break;\n        }\n\n        parentComponent = parentComponent.parentComponent;\n    }\n};\n\n/**\n * 获取组件内部的 slot\n *\n * @param {string=} name slot名称，空为default slot\n * @return {Array}\n */\nComponent.prototype.slot = function (name) {\n    var result = [];\n    var me = this;\n\n    function childrenTraversal(children) {\n        each(children, function (child) {\n            if (child.nodeType === NodeType.SLOT && child.owner === me) {\n                if (child.isNamed && child.name === name\n                    || !child.isNamed && !name\n                ) {\n                    result.push(child);\n                }\n            }\n            else {\n                childrenTraversal(child.children);\n            }\n        });\n    }\n\n    childrenTraversal(this.children);\n    return result;\n};\n\n/**\n * 获取带有 san-ref 指令的子组件引用\n *\n * @param {string} name 子组件的引用名\n * @return {Component}\n */\nComponent.prototype.ref = function (name) {\n    var refTarget;\n    var owner = this;\n\n    function childrenTraversal(children) {\n        each(children, function (child) {\n            elementTraversal(child);\n            return !refTarget;\n        });\n    }\n\n    function elementTraversal(element) {\n        var nodeType = element.nodeType;\n        if (nodeType === NodeType.TEXT) {\n            return;\n        }\n\n        if (element.owner === owner) {\n            var ref;\n            switch (element.nodeType) {\n                case NodeType.ELEM:\n                    ref = element.aNode.directives.ref;\n                    if (ref && evalExpr(ref.value, element.scope, owner) === name) {\n                        refTarget = element.el;\n                    }\n                    break;\n\n                case NodeType.CMPT:\n                    ref = element.givenANode.directives.ref;\n                    if (ref && evalExpr(ref.value, element.scope, owner) === name) {\n                        refTarget = element;\n                    }\n            }\n\n            !refTarget && childrenTraversal(element.slotChildren);\n        }\n\n        !refTarget && childrenTraversal(element.children);\n    }\n\n    childrenTraversal(this.children);\n\n    return refTarget;\n};\n\n\n/**\n * 视图更新函数\n *\n * @param {Array?} changes 数据变化信息\n */\nComponent.prototype._update = function (changes) {\n    if (this.lifeCycle.disposed) {\n        return;\n    }\n\n    var me = this;\n\n\n    var needReloadForSlot = false;\n    this._notifyNeedReload = function () {\n        needReloadForSlot = true;\n    };\n\n    if (changes) {\n        each(changes, function (change) {\n            var changeExpr = change.expr;\n\n            each(me.binds, function (bindItem) {\n                var relation;\n                var setExpr = bindItem.name;\n                var updateExpr = bindItem.expr;\n\n                if (!isDataChangeByElement(change, me, setExpr)\n                    && (relation = changeExprCompare(changeExpr, updateExpr, me.scope))\n                ) {\n                    if (relation > 2) {\n                        setExpr = createAccessor(\n                            [\n                                {\n                                    type: ExprType.STRING,\n                                    value: setExpr\n                                }\n                            ].concat(changeExpr.paths.slice(updateExpr.paths.length))\n                        );\n\n                        updateExpr = changeExpr;\n                    }\n\n                    me.data.set(setExpr, evalExpr(updateExpr, me.scope, me.owner), {\n                        target: {\n                            id: me.owner.id\n                        }\n                    });\n                }\n            });\n\n            each(me.givenNamedSlotBinds, function (bindItem) {\n                needReloadForSlot = needReloadForSlot || changeExprCompare(changeExpr, bindItem.expr, me.scope);\n                return !needReloadForSlot;\n            });\n        });\n\n        if (needReloadForSlot) {\n            this._createGivenSlots();\n            this._repaintChildren();\n        }\n        else {\n            var slotChildrenLen = this.slotChildren.length;\n            while (slotChildrenLen--) {\n                var slotChild = this.slotChildren[slotChildrenLen];\n\n                if (slotChild.lifeCycle.disposed) {\n                    this.slotChildren.splice(slotChildrenLen, 1);\n                }\n                else if (slotChild.isInserted) {\n                    slotChild._update(changes, 1);\n                }\n            }\n        }\n    }\n\n    var dataChanges = this.dataChanges;\n    if (dataChanges) {\n        this.dataChanges = null;\n        each(this.aNode.hotspot.dynamicProps, function (prop) {\n            each(dataChanges, function (change) {\n                if (changeExprCompare(change.expr, prop.expr, me.data)\n                    || prop.hintExpr && changeExprCompare(change.expr, prop.hintExpr, me.data)\n                ) {\n                    handleProp(me, evalExpr(prop.expr, me.data, me), prop);\n                    return false;\n                }\n            });\n        });\n\n        elementUpdateChildren(this, dataChanges);\n        if (needReloadForSlot) {\n            this._createGivenSlots();\n            this._repaintChildren();\n        }\n\n        this._toPhase('updated');\n\n        if (this.owner) {\n            this._updateBindxOwner(dataChanges);\n            this.owner._update();\n        }\n    }\n\n    this._notifyNeedReload = null;\n};\n\nComponent.prototype._updateBindxOwner = function (dataChanges) {\n    var me = this;\n\n    if (this.owner) {\n        each(dataChanges, function (change) {\n            each(me.binds, function (bindItem) {\n                var changeExpr = change.expr;\n                if (bindItem.x\n                    && !isDataChangeByElement(change, me.owner)\n                    && changeExprCompare(changeExpr, parseExpr(bindItem.name), me.data)\n                ) {\n                    var updateScopeExpr = bindItem.expr;\n                    if (changeExpr.paths.length > 1) {\n                        updateScopeExpr = createAccessor(\n                            bindItem.expr.paths.concat(changeExpr.paths.slice(1))\n                        );\n                    }\n\n                    me.scope.set(\n                        updateScopeExpr,\n                        evalExpr(changeExpr, me.data, me),\n                        {\n                            target: {\n                                id: me.id,\n                                prop: bindItem.name\n                            }\n                        }\n                    );\n                }\n            });\n        });\n    }\n};\n\n/**\n * 重新绘制组件的内容\n * 当 dynamic slot name 发生变更或 slot 匹配发生变化时，重新绘制\n * 在组件级别重绘有点粗暴，但是能保证视图结果正确性\n */\nComponent.prototype._repaintChildren = function () {\n    elementDisposeChildren(this, 0, 1);\n    this.children = [];\n\n    this._contentReady = 0;\n    this.slotChildren = [];\n    elementAttach(this);\n};\n\n\n/**\n * 组件内部监听数据变化的函数\n *\n * @private\n * @param {Object} change 数据变化信息\n */\nComponent.prototype._dataChanger = function (change) {\n    if (this.lifeCycle.painting || this.lifeCycle.created) {\n        if (!this.dataChanges) {\n            nextTick(this._update, this);\n            this.dataChanges = [];\n        }\n\n        this.dataChanges.push(change);\n    }\n    else if (this.lifeCycle.inited && this.owner) {\n        this._updateBindxOwner([change]);\n    }\n};\n\n\n/**\n * 监听组件的数据变化\n *\n * @param {string} dataName 变化的数据项\n * @param {Function} listener 监听函数\n */\nComponent.prototype.watch = function (dataName, listener) {\n    var dataExpr = parseExpr(dataName);\n\n    this.data.listen(bind(function (change) {\n        if (changeExprCompare(change.expr, dataExpr, this.data)) {\n            listener.call(this, evalExpr(dataExpr, this.data, this), change);\n        }\n    }, this));\n};\n\n/**\n * 组件销毁的行为\n *\n * @param {Object} options 销毁行为的参数\n */\nComponent.prototype.dispose = elementOwnDispose;\n\nComponent.prototype._doneLeave = function () {\n    if (this.leaveDispose) {\n        if (!this.lifeCycle.disposed) {\n            // 这里不用挨个调用 dispose 了，因为 children 释放链会调用的\n            this.slotChildren = null;\n\n            this.data.unlisten();\n            this.dataChanger = null;\n            this.dataChanges = null;\n\n            elementDispose(\n                this,\n                this.disposeNoDetach,\n                this.disposeNoTransition\n            );\n            this.listeners = null;\n\n            this.givenANode = null;\n            this.givenSlots = null;\n            this.givenNamedSlotBinds = null;\n        }\n    }\n    else if (this.lifeCycle.attached) {\n        removeEl(this.el);\n        this._toPhase('detached');\n    }\n};\n\n/**\n * 完成组件 attached 后的行为\n *\n * @param {Object} element 元素节点\n */\nComponent.prototype._attached = elementOwnAttached;\n\nComponent.prototype.attach = elementOwnAttach;\nComponent.prototype.detach = elementOwnDetach;\nComponent.prototype._create = elementOwnCreate;\nComponent.prototype._onEl = elementOwnOnEl;\n\n\n// exports = module.exports = Component;\n\n\n/**\n * @file 创建组件类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var Component = require('./component');\n// var inherits = require('../util/inherits');\n\n/**\n * 创建组件类\n *\n * @param {Object} proto 组件类的方法表\n * @return {Function}\n */\nfunction defineComponent(proto) {\n    // 如果传入一个不是 san component 的 constructor，直接返回不是组件构造函数\n    // 这种场景导致的错误 san 不予考虑\n    if (typeof proto === 'function') {\n        return proto;\n    }\n\n    // #[begin] error\n    if (typeof proto !== 'object') {\n        throw new Error('[SAN FATAL] param must be a plain object.');\n    }\n    // #[end]\n\n    function ComponentClass(option) { // eslint-disable-line\n        Component.call(this, option);\n    }\n\n    ComponentClass.prototype = proto;\n    inherits(ComponentClass, Component);\n\n    return ComponentClass;\n}\n\n// exports = module.exports = defineComponent;\n\n\n/**\n * @file 编译组件类\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var createANode = require('../parser/create-a-node');\n// var parseTemplate = require('../parser/parse-template');\n// var parseText = require('../parser/parse-text');\n// var defineComponent = require('./define-component');\n\n\n/**\n * 编译组件类。预解析template和components\n *\n * @param {Function} ComponentClass 组件类\n */\nfunction compileComponent(ComponentClass) {\n    var proto = ComponentClass.prototype;\n\n    // pre define components class\n    if (!proto.hasOwnProperty('_cmptReady')) {\n        proto.components = ComponentClass.components || proto.components || {};\n        var components = proto.components;\n\n        for (var key in components) { // eslint-disable-line\n            var componentClass = components[key];\n\n            if (typeof componentClass === 'object') {\n                components[key] = defineComponent(componentClass);\n            }\n            else if (componentClass === 'self') {\n                components[key] = ComponentClass;\n            }\n        }\n\n        proto._cmptReady = 1;\n    }\n\n\n    // pre compile template\n    if (!proto.hasOwnProperty('aNode')) {\n        proto.aNode = createANode();\n\n        var tpl = ComponentClass.template || proto.template;\n        if (tpl) {\n            var aNode = parseTemplate(tpl, {\n                trimWhitespace: proto.trimWhitespace || ComponentClass.trimWhitespace,\n                delimiters: proto.delimiters || ComponentClass.delimiters\n            });\n            var firstChild = aNode.children[0];\n\n            // #[begin] error\n            if (aNode.children.length !== 1 || firstChild.textExpr) {\n                throw new Error('[SAN FATAL] template must have a root element.');\n            }\n            // #[end]\n\n            proto.aNode = firstChild;\n            if (firstChild.tagName === 'template') {\n                firstChild.tagName = null;\n            }\n\n            var componentPropExtra = {\n                'class': {name: 'class', expr: parseText('{{class | _class | _sep(\" \")}}')},\n                'style': {name: 'style', expr: parseText('{{style | _style | _sep(\";\")}}')},\n                'id': {name: 'id', expr: parseText('{{id}}')}\n            };\n\n            var len = firstChild.props.length;\n            while (len--) {\n                var prop = firstChild.props[len];\n                var extra = componentPropExtra[prop.name];\n\n                if (extra) {\n                    firstChild.props.splice(len, 1);\n                    componentPropExtra[prop.name] = prop;\n\n                    if (prop.name !== 'id') {\n                        prop.expr.segs.push(extra.expr.segs[0]);\n                        prop.expr.value = null;\n                    }\n                }\n            }\n\n            firstChild.props.push(\n                componentPropExtra['class'], // eslint-disable-line dot-notation\n                componentPropExtra.style,\n                componentPropExtra.id\n            );\n        }\n    }\n}\n\n// exports = module.exports = compileComponent;\n\n\n/**\n * @file 组件预热\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('../parser/expr-type');\n// var each = require('../util/each');\n// var createEl = require('../browser/create-el');\n// var getPropHandler = require('./get-prop-handler');\n// var getANodeProp = require('./get-a-node-prop');\n// var isBrowser = require('../browser/is-browser');\n\n/**\n * 组件预热，分析组件aNode的数据引用等信息\n *\n * @param {Function} ComponentClass 组件类\n */\nfunction componentPreheat(ComponentClass) {\n    var stack = [];\n\n    function recordHotspotData(refs, notContentData) {\n        var len = stack.length;\n        each(stack, function (aNode, index) {\n            if (!notContentData || index !== len - 1) {\n                each(refs, function (ref) {\n                    aNode.hotspot.data[ref] = 1;\n                });\n            }\n        });\n    }\n\n\n    function analyseANodeHotspot(aNode) {\n        if (!aNode.hotspot) {\n            stack.push(aNode);\n\n\n            if (aNode.textExpr) {\n                aNode.hotspot = {data: {}};\n                recordHotspotData(analyseExprDataHotspot(aNode.textExpr));\n            }\n            else {\n                var sourceNode;\n                if (isBrowser && aNode.tagName && !/^(template|slot|select|input|option)$/i.test(aNode.tagName)) {\n                    sourceNode = createEl(aNode.tagName);\n                }\n\n                aNode.hotspot = {\n                    data: {},\n                    dynamicProps: [],\n                    xProps: [],\n                    props: {},\n                    sourceNode: sourceNode\n                };\n\n\n                // === analyse hotspot data: start\n                each(aNode.vars, function (varItem) {\n                    recordHotspotData(analyseExprDataHotspot(varItem.expr));\n                });\n\n                each(aNode.props, function (prop) {\n                    recordHotspotData(analyseExprDataHotspot(prop.expr));\n                });\n\n                /* eslint-disable guard-for-in */\n                for (var key in aNode.directives) {\n                    var directive = aNode.directives[key];\n                    recordHotspotData(analyseExprDataHotspot(directive.value), key !== 'html');\n                }\n                /* eslint-enable guard-for-in */\n\n                each(aNode.elses, function (child) {\n                    analyseANodeHotspot(child);\n                });\n\n                each(aNode.children, function (child) {\n                    analyseANodeHotspot(child);\n                });\n                // === analyse hotspot data: end\n\n\n                // === analyse hotspot props: start\n                each(aNode.props, function (prop, index) {\n                    aNode.hotspot.props[prop.name] = index;\n\n                    if (prop.name === 'id') {\n                        prop.id = true;\n                        aNode.hotspot.idProp = prop;\n                        aNode.hotspot.dynamicProps.push(prop);\n                    }\n                    else if (prop.expr.value != null) {\n                        if (sourceNode) {\n                            getPropHandler(aNode.tagName, prop.name)\n                                .prop(sourceNode, prop.expr.value, prop.name, aNode);\n                        }\n                    }\n                    else {\n                        if (prop.x) {\n                            aNode.hotspot.xProps.push(prop);\n                        }\n                        aNode.hotspot.dynamicProps.push(prop);\n                    }\n                });\n\n                // ie 下，如果 option 没有 value 属性，select.value = xx 操作不会选中 option\n                // 所以没有设置 value 时，默认把 option 的内容作为 value\n                if (aNode.tagName === 'option'\n                    && !getANodeProp(aNode, 'value')\n                    && aNode.children[0]\n                ) {\n                    var valueProp = {\n                        name: 'value',\n                        expr: aNode.children[0].textExpr\n                    };\n                    aNode.props.push(valueProp);\n                    aNode.hotspot.dynamicProps.push(valueProp);\n                    aNode.hotspot.props.value = aNode.props.length - 1;\n                }\n                // === analyse hotspot props: end\n            }\n\n            stack.pop();\n        }\n    }\n\n    analyseANodeHotspot(ComponentClass.prototype.aNode);\n}\n\n/**\n * 分析表达式的数据引用\n *\n * @param {Object} expr 要分析的表达式\n * @return {Array}\n */\nfunction analyseExprDataHotspot(expr) {\n    var refs = [];\n\n    function analyseExprs(exprs) {\n        each(exprs, function (expr) {\n            refs = refs.concat(analyseExprDataHotspot(expr));\n        });\n    }\n\n    switch (expr.type) {\n        case ExprType.ACCESSOR:\n            var paths = expr.paths;\n            refs.push(paths[0].value);\n\n            if (paths.length > 1) {\n                refs.push(paths[0].value + '.' + (paths[1].value || '*'));\n            }\n\n            analyseExprs(paths.slice(1));\n            break;\n\n        case ExprType.UNARY:\n            return analyseExprDataHotspot(expr.expr);\n\n        case ExprType.TEXT:\n        case ExprType.BINARY:\n        case ExprType.TERTIARY:\n            analyseExprs(expr.segs);\n            break;\n\n        case ExprType.INTERP:\n            refs = analyseExprDataHotspot(expr.expr);\n\n            each(expr.filters, function (filter) {\n                analyseExprs(filter.name.paths);\n                analyseExprs(filter.args);\n            });\n\n            break;\n\n    }\n\n    return refs;\n}\n\n// exports = module.exports = componentPreheat;\n\n\n/**\n * @file 将 binds 的 name 从 kebabcase 转换成 camelcase\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var kebab2camel = require('../util/kebab2camel');\n// var each = require('../util/each');\n\n/**\n * 将 binds 的 name 从 kebabcase 转换成 camelcase\n *\n * @param {Array} binds binds集合\n * @return {Array}\n */\nfunction camelComponentBinds(binds) {\n    var result = [];\n    each(binds, function (bind) {\n        result.push({\n            name: kebab2camel(bind.name),\n            expr: bind.expr,\n            x: bind.x,\n            raw: bind.raw\n        });\n    });\n\n    return result;\n}\n\n// exports = module.exports = camelComponentBinds;\n\n\n/**\n * @file 编译源码的 helper 方法集合\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var each = require('../util/each');\n// var ExprType = require('../parser/expr-type');\n\n// #[begin] ssr\n// \n// /**\n//  * 编译源码的 helper 方法集合对象\n//  */\n// var compileExprSource = {\n// \n//     /**\n//      * 字符串字面化\n//      *\n//      * @param {string} source 需要字面化的字符串\n//      * @return {string} 字符串字面化结果\n//      */\n//     stringLiteralize: function (source) {\n//         return '\"'\n//             + source\n//                 .replace(/\\x5C/g, '\\\\\\\\')\n//                 .replace(/\"/g, '\\\\\"')\n//                 .replace(/\\x0A/g, '\\\\n')\n//                 .replace(/\\x09/g, '\\\\t')\n//                 .replace(/\\x0D/g, '\\\\r')\n//                 // .replace( /\\x08/g, '\\\\b' )\n//                 // .replace( /\\x0C/g, '\\\\f' )\n//             + '\"';\n//     },\n// \n//     /**\n//      * 生成数据访问表达式代码\n//      *\n//      * @param {Object?} accessorExpr accessor表达式对象\n//      * @return {string}\n//      */\n//     dataAccess: function (accessorExpr) {\n//         var code = 'componentCtx.data';\n//         if (accessorExpr) {\n//             each(accessorExpr.paths, function (path) {\n//                 if (path.type === ExprType.ACCESSOR) {\n//                     code += '[' + compileExprSource.dataAccess(path) + ']';\n//                     return;\n//                 }\n// \n//                 switch (typeof path.value) {\n//                     case 'string':\n//                         code += '.' + path.value;\n//                         break;\n// \n//                     case 'number':\n//                         code += '[' + path.value + ']';\n//                         break;\n//                 }\n//             });\n//         }\n// \n//         return code;\n//     },\n// \n//     /**\n//      * 生成插值代码\n//      *\n//      * @param {Object} interpExpr 插值表达式对象\n//      * @return {string}\n//      */\n//     interp: function (interpExpr) {\n//         var code = compileExprSource.expr(interpExpr.expr);\n// \n// \n//         each(interpExpr.filters, function (filter) {\n//             code = 'componentCtx.callFilter(\"' + filter.name.paths[0].value + '\", [' + code;\n//             each(filter.args, function (arg) {\n//                 code += ', ' + compileExprSource.expr(arg);\n//             });\n//             code += '])';\n//         });\n// \n//         if (!interpExpr.original) {\n//             return 'escapeHTML(' + code + ')';\n//         }\n// \n//         return code;\n//     },\n// \n//     /**\n//      * 生成文本片段代码\n//      *\n//      * @param {Object} textExpr 文本片段表达式对象\n//      * @return {string}\n//      */\n//     text: function (textExpr) {\n//         if (textExpr.segs.length === 0) {\n//             return '\"\"';\n//         }\n// \n//         var code = '';\n// \n//         each(textExpr.segs, function (seg) {\n//             var segCode = compileExprSource.expr(seg);\n//             code += code ? ' + ' + segCode : segCode;\n//         });\n// \n//         return code;\n//     },\n// \n//     /**\n//      * 二元表达式操作符映射表\n//      *\n//      * @type {Object}\n//      */\n//     binaryOp: {\n//         /* eslint-disable */\n//         43: '+',\n//         45: '-',\n//         42: '*',\n//         47: '/',\n//         60: '<',\n//         62: '>',\n//         76: '&&',\n//         94: '!=',\n//         121: '<=',\n//         122: '==',\n//         123: '>=',\n//         155: '!==',\n//         183: '===',\n//         248: '||'\n//         /* eslint-enable */\n//     },\n// \n//     /**\n//      * 生成表达式代码\n//      *\n//      * @param {Object} expr 表达式对象\n//      * @return {string}\n//      */\n//     expr: function (expr) {\n//         switch (expr.type) {\n//             case ExprType.UNARY:\n//                 return '!' + compileExprSource.expr(expr.expr);\n// \n//             case ExprType.BINARY:\n//                 return compileExprSource.expr(expr.segs[0])\n//                     + compileExprSource.binaryOp[expr.operator]\n//                     + compileExprSource.expr(expr.segs[1]);\n// \n//             case ExprType.TERTIARY:\n//                 return compileExprSource.expr(expr.segs[0])\n//                     + '?' + compileExprSource.expr(expr.segs[1])\n//                     + ':' + compileExprSource.expr(expr.segs[2]);\n// \n//             case ExprType.STRING:\n//                 return compileExprSource.stringLiteralize(expr.value);\n// \n//             case ExprType.NUMBER:\n//                 return expr.value;\n// \n//             case ExprType.BOOL:\n//                 return expr.value ? 'true' : 'false';\n// \n//             case ExprType.ACCESSOR:\n//                 return compileExprSource.dataAccess(expr);\n// \n//             case ExprType.INTERP:\n//                 return compileExprSource.interp(expr);\n// \n//             case ExprType.TEXT:\n//                 return compileExprSource.text(expr);\n//         }\n//     }\n// };\n// #[end]\n\n// exports = module.exports = compileExprSource;\n\n\n/**\n * @file 编译源码的中间buffer类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var each = require('../util/each');\n// var compileExprSource = require('./compile-expr-source');\n\n\n// #[begin] ssr\n// /**\n//  * 编译源码的中间buffer类\n//  *\n//  * @class\n//  */\n// function CompileSourceBuffer() {\n//     this.segs = [];\n// }\n// \n// /**\n//  * 添加原始代码，将原封不动输出\n//  *\n//  * @param {string} code 原始代码\n//  */\n// CompileSourceBuffer.prototype.addRaw = function (code) {\n//     this.segs.push({\n//         type: 'RAW',\n//         code: code\n//     });\n// };\n// \n// /**\n//  * 添加被拼接为html的原始代码\n//  *\n//  * @param {string} code 原始代码\n//  */\n// CompileSourceBuffer.prototype.joinRaw = function (code) {\n//     this.segs.push({\n//         type: 'JOIN_RAW',\n//         code: code\n//     });\n// };\n// \n// /**\n//  * 添加renderer方法的起始源码\n//  */\n// CompileSourceBuffer.prototype.addRendererStart = function () {\n//     this.addRaw('function (data, parentCtx, givenSlots) {');\n//     this.addRaw('var html = \"\";');\n// };\n// \n// /**\n//  * 添加renderer方法的结束源码\n//  */\n// CompileSourceBuffer.prototype.addRendererEnd = function () {\n//     this.addRaw('return html;');\n//     this.addRaw('}');\n// };\n// \n// /**\n//  * 添加被拼接为html的静态字符串\n//  *\n//  * @param {string} str 被拼接的字符串\n//  */\n// CompileSourceBuffer.prototype.joinString = function (str) {\n//     this.segs.push({\n//         str: str,\n//         type: 'JOIN_STRING'\n//     });\n// };\n// \n// /**\n//  * 添加被拼接为html的数据访问\n//  *\n//  * @param {Object?} accessor 数据访问表达式对象\n//  */\n// CompileSourceBuffer.prototype.joinDataStringify = function () {\n//     this.segs.push({\n//         type: 'JOIN_DATA_STRINGIFY'\n//     });\n// };\n// \n// /**\n//  * 添加被拼接为html的表达式\n//  *\n//  * @param {Object} expr 表达式对象\n//  */\n// CompileSourceBuffer.prototype.joinExpr = function (expr) {\n//     this.segs.push({\n//         expr: expr,\n//         type: 'JOIN_EXPR'\n//     });\n// };\n// \n// /**\n//  * 生成编译后代码\n//  *\n//  * @return {string}\n//  */\n// CompileSourceBuffer.prototype.toCode = function () {\n//     var code = [];\n//     var temp = '';\n// \n//     function genStrLiteral() {\n//         if (temp) {\n//             code.push('html += ' + compileExprSource.stringLiteralize(temp) + ';');\n//         }\n// \n//         temp = '';\n//     }\n// \n//     each(this.segs, function (seg) {\n//         if (seg.type === 'JOIN_STRING') {\n//             temp += seg.str;\n//             return;\n//         }\n// \n//         genStrLiteral();\n//         switch (seg.type) {\n//             case 'JOIN_DATA_STRINGIFY':\n//                 code.push('html += stringifier.any(' + compileExprSource.dataAccess() + ');');\n//                 break;\n// \n//             case 'JOIN_EXPR':\n//                 code.push('html += ' + compileExprSource.expr(seg.expr) + ';');\n//                 break;\n// \n//             case 'JOIN_RAW':\n//                 code.push('html += ' + seg.code + ';');\n//                 break;\n// \n//             case 'RAW':\n//                 code.push(seg.code);\n//                 break;\n// \n//         }\n//     });\n// \n//     genStrLiteral();\n// \n//     return code.join('\\n');\n// };\n// \n// #[end]\n\n// exports = module.exports = CompileSourceBuffer;\n\n\n/**\n * @file 将组件编译成 render 方法的 js 源码\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var each = require('../util/each');\n// var guid = require('../util/guid');\n// var parseExpr = require('../parser/parse-expr');\n// var createANode = require('../parser/create-a-node');\n// var cloneDirectives = require('../parser/clone-directives');\n// var autoCloseTags = require('../browser/auto-close-tags');\n// var CompileSourceBuffer = require('./compile-source-buffer');\n// var compileExprSource = require('./compile-expr-source');\n// var rinseCondANode = require('./rinse-cond-anode');\n// var getANodeProp = require('./get-a-node-prop');\n\n// #[begin] ssr\n// \n// /**\n//  * 生成序列化时起始桩的html\n//  *\n//  * @param {string} type 桩类型标识\n//  * @param {string?} content 桩内的内容\n//  * @return {string}\n//  */\n// function serializeStump(type, content) {\n//     return '<!--s-' + type + (content ? ':' + content : '') + '-->';\n// }\n// \n// /**\n//  * 生成序列化时结束桩的html\n//  *\n//  * @param {string} type 桩类型标识\n//  * @return {string}\n//  */\n// function serializeStumpEnd(type) {\n//     return '<!--/s-' + type + '-->';\n// }\n// \n// /**\n//  * element 的编译方法集合对象\n//  *\n//  * @inner\n//  */\n// var elementSourceCompiler = {\n// \n//     /* eslint-disable max-params */\n//     /**\n//      * 编译元素标签头\n//      *\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {string} tagName 标签名\n//      * @param {Array} props 属性列表\n//      * @param {string?} extraProp 额外的属性串\n//      * @param {boolean?} isClose 是否闭合\n//      */\n//     tagStart: function (sourceBuffer, tagName, props, extraProp, isClose) {\n//         sourceBuffer.joinString('<' + tagName);\n//         sourceBuffer.joinString(extraProp || '');\n// \n//         // index list\n//         var propsIndex = {};\n//         each(props, function (prop) {\n//             propsIndex[prop.name] = prop;\n//         });\n// \n//         each(props, function (prop) {\n//             if (prop.name === 'slot') {\n//                 return;\n//             }\n// \n//             if (prop.name === 'value') {\n//                 switch (tagName) {\n//                     case 'textarea':\n//                         return;\n// \n//                     case 'select':\n//                         sourceBuffer.addRaw('$selectValue = '\n//                             + compileExprSource.expr(prop.expr)\n//                             + ' || \"\";'\n//                         );\n//                         return;\n// \n//                     case 'option':\n//                         sourceBuffer.addRaw('$optionValue = '\n//                             + compileExprSource.expr(prop.expr)\n//                             + ';'\n//                         );\n//                         // value\n//                         sourceBuffer.addRaw('if ($optionValue != null) {');\n//                         sourceBuffer.joinRaw('\" value=\\\\\"\" + $optionValue + \"\\\\\"\"');\n//                         sourceBuffer.addRaw('}');\n// \n//                         // selected\n//                         sourceBuffer.addRaw('if ($optionValue === $selectValue) {');\n//                         sourceBuffer.joinString(' selected');\n//                         sourceBuffer.addRaw('}');\n//                         return;\n//                 }\n//             }\n// \n//             switch (prop.name) {\n//                 case 'readonly':\n//                 case 'disabled':\n//                 case 'multiple':\n//                     if (prop.raw === '') {\n//                         sourceBuffer.joinString(' ' + prop.name);\n//                     }\n//                     else {\n//                         sourceBuffer.joinRaw('boolAttrFilter(\"' + prop.name + '\", '\n//                             + compileExprSource.expr(prop.expr)\n//                             + ')'\n//                         );\n//                     }\n//                     break;\n// \n//                 case 'checked':\n//                     if (tagName === 'input') {\n//                         var valueProp = propsIndex.value;\n//                         var valueCode = compileExprSource.expr(valueProp.expr);\n// \n//                         if (valueProp) {\n//                             switch (propsIndex.type.raw) {\n//                                 case 'checkbox':\n//                                     sourceBuffer.addRaw('if (contains('\n//                                         + compileExprSource.expr(prop.expr)\n//                                         + ', '\n//                                         + valueCode\n//                                         + ')) {'\n//                                     );\n//                                     sourceBuffer.joinString(' checked');\n//                                     sourceBuffer.addRaw('}');\n//                                     break;\n// \n//                                 case 'radio':\n//                                     sourceBuffer.addRaw('if ('\n//                                         + compileExprSource.expr(prop.expr)\n//                                         + ' === '\n//                                         + valueCode\n//                                         + ') {'\n//                                     );\n//                                     sourceBuffer.joinString(' checked');\n//                                     sourceBuffer.addRaw('}');\n//                                     break;\n//                             }\n//                         }\n//                     }\n//                     break;\n// \n//                 default:\n//                     if (prop.attr) {\n//                         sourceBuffer.joinString(' ' + prop.attr);\n//                     }\n//                     else {\n//                         sourceBuffer.joinRaw('attrFilter(\"' + prop.name + '\", '\n//                             + (prop.x ? 'escapeHTML(' : '')\n//                             + compileExprSource.expr(prop.expr)\n//                             + (prop.x ? ')' : '')\n//                             + ')'\n//                         );\n//                     }\n//                     break;\n//             }\n//         });\n// \n//         sourceBuffer.joinString(isClose ? '/>' : '>');\n//     },\n//     /* eslint-enable max-params */\n// \n//     /**\n//      * 编译元素闭合\n//      *\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {string} tagName 标签名\n//      */\n//     tagEnd: function (sourceBuffer, tagName) {\n//         if (!autoCloseTags[tagName]) {\n//             sourceBuffer.joinString('</' + tagName + '>');\n//         }\n// \n//         if (tagName === 'select') {\n//             sourceBuffer.addRaw('$selectValue = null;');\n//         }\n// \n//         if (tagName === 'option') {\n//             sourceBuffer.addRaw('$optionValue = null;');\n//         }\n//     },\n// \n//     /**\n//      * 编译元素内容\n//      *\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {ANode} aNode 元素的抽象节点信息\n//      * @param {Component} owner 所属组件实例环境\n//      */\n//     inner: function (sourceBuffer, aNode, owner) {\n//         // inner content\n//         if (aNode.tagName === 'textarea') {\n//             var valueProp = getANodeProp(aNode, 'value');\n//             if (valueProp) {\n//                 sourceBuffer.joinRaw('escapeHTML('\n//                     + compileExprSource.expr(valueProp.expr)\n//                     + ')'\n//                 );\n//             }\n// \n//             return;\n//         }\n// \n//         var htmlDirective = aNode.directives.html;\n//         if (htmlDirective) {\n//             sourceBuffer.joinExpr(htmlDirective.value);\n//         }\n//         else {\n//             /* eslint-disable no-use-before-define */\n//             each(aNode.children, function (aNodeChild) {\n//                 sourceBuffer.addRaw(aNodeCompiler.compile(aNodeChild, sourceBuffer, owner));\n//             });\n//             /* eslint-enable no-use-before-define */\n//         }\n//     }\n// };\n// \n// /**\n//  * ANode 的编译方法集合对象\n//  *\n//  * @inner\n//  */\n// var aNodeCompiler = {\n// \n//     /**\n//      * 编译节点\n//      *\n//      * @param {ANode} aNode 抽象节点\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {Component} owner 所属组件实例环境\n//      * @param {Object} extra 编译所需的一些额外信息\n//      */\n//     compile: function (aNode, sourceBuffer, owner, extra) {\n//         extra = extra || {};\n//         var compileMethod = 'compileElement';\n// \n//         if (aNode.textExpr) {\n//             compileMethod = 'compileText';\n//         }\n//         else if (aNode.directives['if']) { // eslint-disable-line dot-notation\n//             compileMethod = 'compileIf';\n//         }\n//         else if (aNode.directives['for']) { // eslint-disable-line dot-notation\n//             compileMethod = 'compileFor';\n//         }\n//         else if (aNode.tagName === 'slot') {\n//             compileMethod = 'compileSlot';\n//         }\n//         else if (aNode.tagName === 'template') {\n//             compileMethod = 'compileTemplate';\n//         }\n//         else {\n//             var ComponentType = owner.getComponentType(aNode);\n//             if (ComponentType) {\n//                 compileMethod = 'compileComponent';\n//                 extra.ComponentClass = ComponentType;\n//             }\n//         }\n// \n//         aNodeCompiler[compileMethod](aNode, sourceBuffer, owner, extra);\n//     },\n// \n//     /**\n//      * 编译文本节点\n//      *\n//      * @param {ANode} aNode 节点对象\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      */\n//     compileText: function (aNode, sourceBuffer) {\n//         if (aNode.textExpr.original) {\n//             sourceBuffer.joinString(serializeStump('text'));\n//         }\n// \n//         var value = aNode.textExpr.value;\n//         if (value == null) {\n//             sourceBuffer.joinExpr(aNode.textExpr);\n//         }\n//         else {\n//             sourceBuffer.joinString(value);\n//         }\n// \n//         if (aNode.textExpr.original) {\n//             sourceBuffer.joinString(serializeStumpEnd('text'));\n//         }\n//     },\n// \n//     /**\n//      * 编译template节点\n//      *\n//      * @param {ANode} aNode 节点对象\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {Component} owner 所属组件实例环境\n//      */\n//     compileTemplate: function (aNode, sourceBuffer, owner) {\n//         elementSourceCompiler.inner(sourceBuffer, aNode, owner);\n//     },\n// \n//     /**\n//      * 编译 if 节点\n//      *\n//      * @param {ANode} aNode 节点对象\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {Component} owner 所属组件实例环境\n//      */\n//     compileIf: function (aNode, sourceBuffer, owner) {\n//         sourceBuffer.addRaw('(function () {');\n// \n//         sourceBuffer.addRaw('var ifIndex = null;');\n// \n//         // output main if\n//         var ifDirective = aNode.directives['if']; // eslint-disable-line dot-notation\n//         sourceBuffer.addRaw('if (' + compileExprSource.expr(ifDirective.value) + ') {');\n//         sourceBuffer.addRaw(\n//             aNodeCompiler.compile(\n//                 rinseCondANode(aNode),\n//                 sourceBuffer,\n//                 owner\n//             )\n//         );\n//         sourceBuffer.addRaw('}');\n// \n//         // output elif and else\n//         each(aNode.elses, function (elseANode, index) {\n//             var elifDirective = elseANode.directives.elif;\n//             if (elifDirective) {\n//                 sourceBuffer.addRaw('else if (' + compileExprSource.expr(elifDirective.value) + ') {');\n//             }\n//             else {\n//                 sourceBuffer.addRaw('else {');\n//             }\n// \n//             sourceBuffer.addRaw(\n//                 aNodeCompiler.compile(\n//                     rinseCondANode(elseANode),\n//                     sourceBuffer,\n//                     owner\n//                 )\n//             );\n//             sourceBuffer.addRaw('}');\n//         });\n// \n//         sourceBuffer.addRaw('})();');\n//     },\n// \n//     /**\n//      * 编译 for 节点\n//      *\n//      * @param {ANode} aNode 节点对象\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {Component} owner 所属组件实例环境\n//      */\n//     compileFor: function (aNode, sourceBuffer, owner) {\n//         var forElementANode = createANode({\n//             children: aNode.children,\n//             props: aNode.props,\n//             events: aNode.events,\n//             tagName: aNode.tagName,\n//             directives: cloneDirectives(aNode.directives, {\n//                 'for': 1\n//             }),\n//             hotspot: aNode.hotspot\n//         });\n// \n//         var forDirective = aNode.directives['for']; // eslint-disable-line dot-notation\n//         var itemName = forDirective.item.raw;\n//         var indexName = forDirective.index.raw;\n//         var listName = compileExprSource.dataAccess(forDirective.value);\n// \n//         if (indexName === '$index') {\n//             indexName = guid();\n//         }\n// \n//         sourceBuffer.addRaw('for ('\n//             + 'var ' + indexName + ' = 0; '\n//             + indexName + ' < ' + listName + '.length; '\n//             + indexName + '++) {'\n//         );\n//         sourceBuffer.addRaw('componentCtx.data.' + indexName + '=' + indexName + ';');\n//         sourceBuffer.addRaw('componentCtx.data.' + itemName + '= ' + listName + '[' + indexName + '];');\n//         sourceBuffer.addRaw(\n//             aNodeCompiler.compile(\n//                 forElementANode,\n//                 sourceBuffer,\n//                 owner\n//             )\n//         );\n//         sourceBuffer.addRaw('}');\n//     },\n// \n//     /**\n//      * 编译 slot 节点\n//      *\n//      * @param {ANode} aNode 节点对象\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {Component} owner 所属组件实例环境\n//      */\n//     compileSlot: function (aNode, sourceBuffer, owner) {\n//         sourceBuffer.addRaw('(function () {');\n// \n//         sourceBuffer.addRaw('function $defaultSlotRender(componentCtx) {');\n//         sourceBuffer.addRaw('  var html = \"\";');\n//         each(aNode.children, function (aNodeChild) {\n//             sourceBuffer.addRaw(aNodeCompiler.compile(aNodeChild, sourceBuffer, owner));\n//         });\n//         sourceBuffer.addRaw('  return html;');\n//         sourceBuffer.addRaw('}');\n// \n//         sourceBuffer.addRaw('  var $givenSlot = [];');\n// \n//         var nameProp = getANodeProp(aNode, 'name');\n//         if (nameProp) {\n//             sourceBuffer.addRaw('var $slotName = ' + compileExprSource.expr(nameProp.expr) + ';');\n//         }\n//         else {\n//             sourceBuffer.addRaw('var $slotName = null;');\n//         }\n// \n//         sourceBuffer.addRaw('var $ctxGivenSlots = componentCtx.givenSlots;');\n//         sourceBuffer.addRaw('for (var $i = 0; $i < $ctxGivenSlots.length; $i++) {');\n//         sourceBuffer.addRaw('  if ($ctxGivenSlots[$i][1] == $slotName) {');\n//         sourceBuffer.addRaw('    $givenSlot.push($ctxGivenSlots[$i][0]);');\n//         sourceBuffer.addRaw('  }');\n//         sourceBuffer.addRaw('}');\n// \n// \n//         sourceBuffer.addRaw('var $isInserted = $givenSlot.length > 0;');\n//         sourceBuffer.addRaw('if (!$isInserted) { $givenSlot.push($defaultSlotRender); }');\n// \n//         sourceBuffer.addRaw('var $slotCtx = $isInserted ? componentCtx.owner : componentCtx;');\n//         if (aNode.vars) {\n//             sourceBuffer.addRaw('$slotCtx = {data: extend({}, $slotCtx.data), filters: $slotCtx.filters, callFilter: $slotCtx.callFilter};'); // eslint-disable-line\n//             each(aNode.vars, function (varItem) {\n//                 sourceBuffer.addRaw(\n//                     '$slotCtx.data[\"' + varItem.name + '\"] = '\n//                     + compileExprSource.expr(varItem.expr)\n//                     + ';'\n//                 );\n//             });\n//         }\n// \n//         sourceBuffer.addRaw('for (var $renderIndex = 0; $renderIndex < $givenSlot.length; $renderIndex++) {');\n//         sourceBuffer.addRaw('  html += $givenSlot[$renderIndex]($slotCtx);');\n//         sourceBuffer.addRaw('}');\n// \n//         sourceBuffer.addRaw('})();');\n//     },\n// \n//     /**\n//      * 编译普通节点\n//      *\n//      * @param {ANode} aNode 节点对象\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {Component} owner 所属组件实例环境\n//      * @param {Object} extra 编译所需的一些额外信息\n//      */\n//     compileElement: function (aNode, sourceBuffer, owner, extra) {\n//         extra = extra || {};\n//         // if (aNode.tagName === 'option'\n//         //     && !getANodeProp(aNode, 'value')\n//         //     && aNode.children[0]\n//         // ) {\n//         //     aNode.props.push({\n//         //         name: 'value',\n//         //         expr: aNode.children[0].textExpr\n//         //     });\n//         // }\n// \n//         elementSourceCompiler.tagStart(\n//             sourceBuffer,\n//             aNode.tagName,\n//             aNode.props,\n//             extra.prop\n//         );\n// \n//         elementSourceCompiler.inner(sourceBuffer, aNode, owner);\n//         elementSourceCompiler.tagEnd(sourceBuffer, aNode.tagName);\n//     },\n// \n//     /**\n//      * 编译组件节点\n//      *\n//      * @param {ANode} aNode 节点对象\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {Component} owner 所属组件实例环境\n//      * @param {Object} extra 编译所需的一些额外信息\n//      * @param {Function} extra.ComponentClass 对应组件类\n//      */\n//     compileComponent: function (aNode, sourceBuffer, owner, extra) {\n//         if (aNode) {\n//             sourceBuffer.addRaw('var $slotName = null;');\n//             sourceBuffer.addRaw('var $givenSlots = [];');\n//             each(aNode.children, function (child) {\n//                 var slotBind = !child.textExpr && getANodeProp(child, 'slot');\n//                 if (slotBind) {\n//                     sourceBuffer.addRaw('$slotName = ' + compileExprSource.expr(slotBind.expr) + ';');\n//                     sourceBuffer.addRaw('$givenSlots.push([function (componentCtx) {');\n//                     sourceBuffer.addRaw('  var html = \"\";');\n//                     sourceBuffer.addRaw(aNodeCompiler.compile(child, sourceBuffer, owner));\n//                     sourceBuffer.addRaw('  return html;');\n//                     sourceBuffer.addRaw('}, $slotName]);');\n//                 }\n//                 else {\n//                     sourceBuffer.addRaw('$givenSlots.push([function (componentCtx) {');\n//                     sourceBuffer.addRaw('  var html = \"\";');\n//                     sourceBuffer.addRaw(aNodeCompiler.compile(child, sourceBuffer, owner));\n//                     sourceBuffer.addRaw('  return html;');\n//                     sourceBuffer.addRaw('}]);');\n//                 }\n//             });\n//         }\n// \n//         var ComponentClass = extra.ComponentClass;\n//         var component = new ComponentClass({\n//             aNode: aNode,\n//             owner: owner,\n//             subTag: aNode.tagName\n//         });\n// \n//         var givenData = [];\n// \n//         each(component.binds, function (prop) {\n//             givenData.push(\n//                 compileExprSource.stringLiteralize(prop.name)\n//                 + ':'\n//                 + compileExprSource.expr(prop.expr)\n//             );\n//         });\n// \n//         sourceBuffer.addRaw('html += (');\n//         sourceBuffer.addRendererStart();\n//         compileComponentSource(sourceBuffer, component, extra && extra.prop);\n//         sourceBuffer.addRendererEnd();\n//         sourceBuffer.addRaw(')({' + givenData.join(',\\n') + '}, componentCtx, $givenSlots);');\n//         sourceBuffer.addRaw('$givenSlots = null;');\n//     }\n// };\n// /* eslint-disable guard-for-in */\n// \n// /**\n//  * 生成组件 renderer 时 ctx 对象构建的代码\n//  *\n//  * @inner\n//  * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//  * @param {Object} component 组件实例\n//  * @param {string?} extraProp 额外的属性串\n//  */\n// function compileComponentSource(sourceBuffer, component, extraProp) {\n//     sourceBuffer.addRaw(genComponentContextCode(component));\n//     sourceBuffer.addRaw('componentCtx.owner = parentCtx;');\n//     sourceBuffer.addRaw('componentCtx.givenSlots = givenSlots;');\n// \n// \n//     sourceBuffer.addRaw('data = extend(componentCtx.data, data);');\n//     sourceBuffer.addRaw('for (var $i = 0; $i < componentCtx.computedNames.length; $i++) {');\n//     sourceBuffer.addRaw('  var $computedName = componentCtx.computedNames[$i];');\n//     sourceBuffer.addRaw('  data[$computedName] = componentCtx.computed[$computedName]();');\n//     sourceBuffer.addRaw('}');\n// \n//     extraProp = extraProp || '';\n// \n//     var eventDeclarations = [];\n//     for (var key in component.listeners) {\n//         each(component.listeners[key], function (listener) {\n//             if (listener.declaration) {\n//                 eventDeclarations.push(listener.declaration);\n//             }\n//         });\n//     }\n// \n//     elementSourceCompiler.tagStart(\n//         sourceBuffer,\n//         component.tagName,\n//         component.aNode.props,\n//         extraProp\n//     );\n// \n//     if (!component.owner) {\n//         sourceBuffer.joinString('<!--s-data:');\n//         sourceBuffer.joinDataStringify();\n//         sourceBuffer.joinString('-->');\n//     }\n// \n// \n// \n//     elementSourceCompiler.inner(sourceBuffer, component.aNode, component);\n//     elementSourceCompiler.tagEnd(sourceBuffer, component.tagName);\n// }\n// \n// var stringifier = {\n//     obj: function (source) {\n//         var prefixComma;\n//         var result = '{';\n// \n//         for (var key in source) {\n//             if (typeof source[key] === 'undefined') {\n//                 continue;\n//             }\n// \n//             if (prefixComma) {\n//                 result += ',';\n//             }\n//             prefixComma = 1;\n// \n//             result += compileExprSource.stringLiteralize(key) + ':' + stringifier.any(source[key]);\n//         }\n// \n//         return result + '}';\n//     },\n// \n//     arr: function (source) {\n//         var prefixComma;\n//         var result = '[';\n// \n//         each(source, function (value) {\n//             if (prefixComma) {\n//                 result += ',';\n//             }\n//             prefixComma = 1;\n// \n//             result += stringifier.any(value);\n//         });\n// \n//         return result + ']';\n//     },\n// \n//     str: function (source) {\n//         return compileExprSource.stringLiteralize(source);\n//     },\n// \n//     date: function (source) {\n//         return 'new Date(' + source.getTime() + ')';\n//     },\n// \n//     any: function (source) {\n//         switch (typeof source) {\n//             case 'string':\n//                 return stringifier.str(source);\n// \n//             case 'number':\n//                 return '' + source;\n// \n//             case 'boolean':\n//                 return source ? 'true' : 'false';\n// \n//             case 'object':\n//                 if (!source) {\n//                     return null;\n//                 }\n// \n//                 if (source instanceof Array) {\n//                     return stringifier.arr(source);\n//                 }\n// \n//                 if (source instanceof Date) {\n//                     return stringifier.date(source);\n//                 }\n// \n//                 return stringifier.obj(source);\n//         }\n// \n//         throw new Error('Cannot Stringify:' + source);\n//     }\n// };\n// \n// /**\n//  * 生成组件 renderer 时 ctx 对象构建的代码\n//  *\n//  * @inner\n//  * @param {Object} component 组件实例\n//  * @return {string}\n//  */\n// function genComponentContextCode(component) {\n//     var code = ['var componentCtx = {'];\n// \n//     // given anode\n//     code.push('givenSlots: [],');\n// \n//     // filters\n//     code.push('filters: {');\n//     var filterCode = [];\n//     for (var key in component.filters) {\n//         var filter = component.filters[key];\n// \n//         if (typeof filter === 'function') {\n//             filterCode.push(key + ': ' + filter.toString());\n//         }\n//     }\n//     code.push(filterCode.join(','));\n//     code.push('},');\n// \n//     code.push(\n//         'callFilter: function (name, args) {',\n//         '    var filter = this.filters[name] || DEFAULT_FILTERS[name];',\n//         '    if (typeof filter === \"function\") {',\n//         '        return filter.apply(this, args);',\n//         '    }',\n//         '},'\n//     );\n// \n//     /* eslint-disable no-redeclare */\n//     // computed obj\n//     code.push('computed: {');\n//     var computedCode = [];\n//     for (var key in component.computed) {\n//         var computed = component.computed[key];\n// \n//         if (typeof computed === 'function') {\n//             computedCode.push(key + ': '\n//                 + computed.toString().replace(\n//                     /this.data.get\\(([^\\)]+)\\)/g,\n//                     function (match, exprLiteral) {\n//                         var exprStr = (new Function('return ' + exprLiteral))();\n//                         var expr = parseExpr(exprStr);\n// \n//                         return compileExprSource.expr(expr);\n//                     })\n//             );\n//         }\n//     }\n//     code.push(computedCode.join(','));\n//     code.push('},');\n// \n//     // computed names\n//     code.push('computedNames: [');\n//     computedCode = [];\n//     for (var key in component.computed) {\n//         var computed = component.computed[key];\n// \n//         if (typeof computed === 'function') {\n//             computedCode.push('\"' + key + '\"');\n//         }\n//     }\n//     code.push(computedCode.join(','));\n//     code.push('],');\n//     /* eslint-enable no-redeclare */\n// \n//     // data\n//     code.push('data: ' + stringifier.any(component.data.get()) + ',');\n// \n//     // tagName\n//     code.push('tagName: \"' + component.tagName + '\"');\n//     code.push('};');\n// \n//     return code.join('\\n');\n// }\n// \n// /* eslint-enable guard-for-in */\n// \n// /* eslint-disable no-unused-vars */\n// /* eslint-disable fecs-camelcase */\n// \n// /**\n//  * 组件编译的模板函数\n//  *\n//  * @inner\n//  */\n// function componentCompilePreCode() {\n//     var $version = '3.5.6';\n// \n//     function extend(target, source) {\n//         if (source) {\n//             Object.keys(source).forEach(function (key) {\n//                 let value = source[key];\n//                 if (typeof value !== 'undefined') {\n//                     target[key] = value;\n//                 }\n//             });\n//         }\n// \n//         return target;\n//     }\n// \n//     function each(array, iterator) {\n//         if (array && array.length > 0) {\n//             for (var i = 0, l = array.length; i < l; i++) {\n//                 if (iterator(array[i], i) === false) {\n//                     break;\n//                 }\n//             }\n//         }\n//     }\n// \n//     function contains(array, value) {\n//         var result;\n//         each(array, function (item) {\n//             result = item === value;\n//             return !result;\n//         });\n// \n//         return result;\n//     }\n// \n//     var HTML_ENTITY = {\n//         /* jshint ignore:start */\n//         '&': '&amp;',\n//         '<': '&lt;',\n//         '>': '&gt;',\n//         '\"': '&quot;',\n//         /* eslint-disable quotes */\n//         \"'\": '&#39;'\n//         /* eslint-enable quotes */\n//         /* jshint ignore:end */\n//     };\n// \n//     function htmlFilterReplacer(c) {\n//         return HTML_ENTITY[c];\n//     }\n// \n//     function escapeHTML(source) {\n//         if (source == null) {\n//             return '';\n//         }\n// \n//         return String(source).replace(/[&<>\"']/g, htmlFilterReplacer);\n//     }\n// \n//     var DEFAULT_FILTERS = {\n//         url: encodeURIComponent,\n//         _class: function (source) {\n//             if (source instanceof Array) {\n//                 return source.join(' ');\n//             }\n// \n//             return source;\n//         },\n//         _style: function (source) {\n//             if (typeof source === 'object') {\n//                 var result = '';\n//                 if (source) {\n//                     Object.keys(source).forEach(function (key) {\n//                         result += key + ':' + source[key] + ';';\n//                     });\n//                 }\n// \n//                 return result;\n//             }\n// \n//             return source || '';\n//         },\n//         _sep: function (source, sep) {\n//             return source ? sep + source : '';\n//         }\n//     };\n// \n//     function attrFilter(name, value) {\n//         if (value) {\n//             return ' ' + name + '=\"' + value + '\"';\n//         }\n// \n//         return '';\n//     }\n// \n//     function boolAttrFilter(name, value) {\n//         if (value && value !== 'false' && value !== '0') {\n//             return ' ' + name;\n//         }\n// \n//         return '';\n//     }\n// \n//     function stringLiteralize(source) {\n//         return '\"'\n//             + source\n//                 .replace(/\\x5C/g, '\\\\\\\\')\n//                 .replace(/\"/g, '\\\\\"')\n//                 .replace(/\\x0A/g, '\\\\n')\n//                 .replace(/\\x09/g, '\\\\t')\n//                 .replace(/\\x0D/g, '\\\\r')\n//             + '\"';\n//     }\n// \n//     var stringifier = {\n//         obj: function (source) {\n//             var prefixComma;\n//             var result = '{';\n// \n//             Object.keys(source).forEach(function (key) {\n//                 if (typeof source[key] === 'undefined') {\n//                     return;\n//                 }\n// \n//                 if (prefixComma) {\n//                     result += ',';\n//                 }\n//                 prefixComma = 1;\n// \n//                 result += stringLiteralize(key) + ':' + stringifier.any(source[key]);\n//             });\n// \n//             return result + '}';\n//         },\n// \n//         arr: function (source) {\n//             var prefixComma;\n//             var result = '[';\n// \n//             each(source, function (value) {\n//                 if (prefixComma) {\n//                     result += ',';\n//                 }\n//                 prefixComma = 1;\n// \n//                 result += stringifier.any(value);\n//             });\n// \n//             return result + ']';\n//         },\n// \n//         str: function (source) {\n//             return stringLiteralize(source);\n//         },\n// \n//         date: function (source) {\n//             return 'new Date(' + source.getTime() + ')';\n//         },\n// \n//         any: function (source) {\n//             switch (typeof source) {\n//                 case 'string':\n//                     return stringifier.str(source);\n// \n//                 case 'number':\n//                     return '' + source;\n// \n//                 case 'boolean':\n//                     return source ? 'true' : 'false';\n// \n//                 case 'object':\n//                     if (!source) {\n//                         return null;\n//                     }\n// \n//                     if (source instanceof Array) {\n//                         return stringifier.arr(source);\n//                     }\n// \n//                     if (source instanceof Date) {\n//                         return stringifier.date(source);\n//                     }\n// \n//                     return stringifier.obj(source);\n//             }\n// \n//             throw new Error('Cannot Stringify:' + source);\n//         }\n//     };\n// }\n// /* eslint-enable no-unused-vars */\n// /* eslint-enable fecs-camelcase */\n// \n// /**\n//  * 将组件编译成 render 方法的 js 源码\n//  *\n//  * @param {Function} ComponentClass 组件类\n//  * @return {string}\n//  */\n// function compileJSSource(ComponentClass) {\n//     var sourceBuffer = new CompileSourceBuffer();\n// \n//     sourceBuffer.addRendererStart();\n//     sourceBuffer.addRaw(\n//         componentCompilePreCode.toString()\n//             .split('\\n')\n//             .slice(1)\n//             .join('\\n')\n//             .replace(/\\}\\s*$/, '')\n//     );\n// \n//     // 先初始化个实例，让模板编译成 ANode，并且能获得初始化数据\n//     var component = new ComponentClass();\n// \n//     compileComponentSource(sourceBuffer, component);\n//     sourceBuffer.addRendererEnd();\n//     return sourceBuffer.toCode();\n// }\n// #[end]\n\n// exports = module.exports = compileJSSource;\n\n    /* eslint-disable no-unused-vars */\n//     var nextTick = require('./util/next-tick');\n//     var inherits = require('./util/inherits');\n//     var parseTemplate = require('./parser/parse-template');\n//     var parseExpr = require('./parser/parse-expr');\n//     var ExprType = require('./parser/expr-type');\n//     var LifeCycle = require('./view/life-cycle');\n//     var NodeType = require('./view/node-type');\n//     var Component = require('./view/component');\n//     var compileComponent = require('./view/compile-component');\n//     var defineComponent = require('./view/define-component');\n//     var emitDevtool = require('./util/emit-devtool');\n//     var compileJSSource = require('./view/compile-js-source');\n//     var Data = require('./runtime/data');\n//     var evalExpr = require('./runtime/eval-expr');\n//     var DataTypes = require('./util/data-types');\n\n\n    var san = {\n        /**\n         * san版本号\n         *\n         * @type {string}\n         */\n        version: '3.5.6',\n\n        // #[begin] devtool\n        /**\n         * 是否开启调试。开启调试时 devtool 会工作\n         *\n         * @type {boolean}\n         */\n        debug: true,\n        // #[end]\n\n        // #[begin] ssr\n//         /**\n//          * 将组件类编译成 renderer 方法\n//          *\n//          * @param {Function} ComponentClass 组件类\n//          * @return {function(Object):string}\n//          */\n//         compileToRenderer: function (ComponentClass) {\n//             var renderer = ComponentClass.__ssrRenderer;\n// \n//             if (!renderer) {\n//                 var code = compileJSSource(ComponentClass);\n//                 renderer = (new Function('return ' + code))();\n//                 ComponentClass.__ssrRenderer = renderer;\n//             }\n// \n//             return renderer;\n//         },\n// \n//         /**\n//          * 将组件类编译成 renderer 方法的源文件\n//          *\n//          * @param {Function} ComponentClass 组件类\n//          * @return {string}\n//          */\n//         compileToSource: compileJSSource,\n        // #[end]\n\n        /**\n         * 组件基类\n         *\n         * @type {Function}\n         */\n        Component: Component,\n\n        /**\n         * 创建组件类\n         *\n         * @param {Object} proto 组件类的方法表\n         * @return {Function}\n         */\n        defineComponent: defineComponent,\n\n        /**\n         * 编译组件类。预解析template和components\n         *\n         * @param {Function} ComponentClass 组件类\n         */\n        compileComponent: compileComponent,\n\n        /**\n         * 解析 template\n         *\n         * @inner\n         * @param {string} source template 源码\n         * @return {ANode}\n         */\n        parseTemplate: parseTemplate,\n\n        /**\n         * 解析表达式\n         *\n         * @param {string} source 源码\n         * @return {Object}\n         */\n        parseExpr: parseExpr,\n\n        /**\n         * 表达式类型枚举\n         *\n         * @const\n         * @type {Object}\n         */\n        ExprType: ExprType,\n\n        /**\n         * 生命周期\n         */\n        LifeCycle: LifeCycle,\n\n        /**\n         * 节点类型\n         *\n         * @const\n         * @type {Object}\n         */\n        NodeType: NodeType,\n\n        /**\n         * 在下一个更新周期运行函数\n         *\n         * @param {Function} fn 要运行的函数\n         */\n        nextTick: nextTick,\n\n        /**\n         * 数据类\n         *\n         * @class\n         * @param {Object?} data 初始数据\n         * @param {Data?} parent 父级数据对象\n         */\n        Data: Data,\n\n        /**\n         * 计算表达式的值\n         *\n         * @param {Object} expr 表达式对象\n         * @param {Data} data 数据对象\n         * @param {Component=} owner 组件对象，用于表达式中filter的执行\n         * @return {*}\n         */\n        evalExpr: evalExpr,\n\n        /**\n         * 构建类之间的继承关系\n         *\n         * @param {Function} subClass 子类函数\n         * @param {Function} superClass 父类函数\n         */\n        inherits: inherits,\n\n        /**\n         * DataTypes\n         *\n         * @type {Object}\n         */\n        DataTypes: DataTypes\n    };\n\n    // export\n    if (typeof exports === 'object' && typeof module === 'object') {\n        // For CommonJS\n        exports = module.exports = san;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        // For AMD\n        define('san', [], san);\n    }\n    else {\n        // For <script src=\"...\"\n        root.san = san;\n    }\n\n    // #[begin] devtool\n    emitDevtool.start(san);\n    // #[end]\n})(this);\n","(function (global, factory) {\n    if (typeof define === \"function\" && define.amd) {\n        define(['exports', 'san', './TR', '../babelHelpers'], factory);\n    } else if (typeof exports !== \"undefined\") {\n        factory(exports, require('san'), require('./TR'), require('../babelHelpers'));\n    } else {\n        var mod = {\n            exports: {}\n        };\n        factory(mod.exports, global.san, global.TR, global.babelHelpers);\n        global.TBody = mod.exports;\n    }\n})(this, function (exports, _san, _TR, babelHelpers) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n\n    var _san2 = babelHelpers.interopRequireDefault(_san);\n\n    var _TR2 = babelHelpers.interopRequireDefault(_TR);\n\n    var TBody = function (_san$Component) {\n        babelHelpers.inherits(TBody, _san$Component);\n\n        function TBody() {\n            babelHelpers.classCallCheck(this, TBody);\n            return babelHelpers.possibleConstructorReturn(this, (TBody.__proto__ || Object.getPrototypeOf(TBody)).apply(this, arguments));\n        }\n\n        babelHelpers.createClass(TBody, [{\n            key: 'inited',\n            value: function inited() {\n                this.dispatch('UI:tbody-inited');\n            }\n        }, {\n            key: 'eachItem',\n            value: function eachItem(iterator) {\n                var _this2 = this;\n\n                this.findChildrenTRs().forEach(function (child, index) {\n                    iterator.call(_this2, child, index);\n                    index++;\n                });\n            }\n        }, {\n            key: 'findChildrenTRs',\n            value: function findChildrenTRs() {\n                var result = [];\n\n                function find(node) {\n                    if (node instanceof _TR2.default) {\n                        result.push(node);\n                    } else if (node.children) {\n                        node.children.forEach(function (child) {\n                            find(child);\n                        });\n                    }\n                }\n\n                find(this);\n\n                return result;\n            }\n        }]);\n        return TBody;\n    }(_san2.default.Component);\n\n    TBody.template = '\\n        <tbody>\\n            <slot></slot>\\n        </tbody>\\n    ';\n    TBody.messages = {\n        'UI:tr-inited': function UITrInited(e) {\n            var tr = e.target;\n            tr.data.set('pos', 'tbody');\n            tr.data.set('tableSelectable', this.data.get('tableSelectable'));\n        },\n        'UI:table-select-item': function UITableSelectItem(e) {\n            var selectable = this.data.get('tableSelectable');\n            var selected = void 0;\n\n            switch (selectable) {\n                case 'single':\n                    this.eachItem(function (tr, index) {\n                        var isSelected = tr === e.target;\n\n                        tr.data.set('selected', isSelected);\n                        if (isSelected) {\n                            selected = index;\n                        }\n                    });\n                    break;\n                case 'multi':\n                    selected = [];\n                    this.eachItem(function (tr, index) {\n                        if (tr.data.get('selected')) {\n                            selected.push(index);\n                        }\n                    });\n                    break;\n            }\n\n            this.dispatch('UI:table-select-body', selected);\n        }\n    };\n    exports.default = TBody;\n});\n//# sourceMappingURL=TBody.js.map\n","(function (global, factory) {\n    if (typeof define === \"function\" && define.amd) {\n        define(['exports', 'san', '../common/util/cx', '../common/help', '../babelHelpers'], factory);\n    } else if (typeof exports !== \"undefined\") {\n        factory(exports, require('san'), require('../common/util/cx'), require('../common/help'), require('../babelHelpers'));\n    } else {\n        var mod = {\n            exports: {}\n        };\n        factory(mod.exports, global.san, global.cx, global.help, global.babelHelpers);\n        global.Ripple = mod.exports;\n    }\n})(this, function (exports, _san, _cx, _help, babelHelpers) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n\n    var _san2 = babelHelpers.interopRequireDefault(_san);\n\n    var cx = (0, _cx.create)('ripple');\n\n    function getTimingValue(_ref, progress) {\n        var _ref2 = babelHelpers.slicedToArray(_ref, 2),\n            start = _ref2[0],\n            stop = _ref2[1];\n\n        return start + (stop - start) * progress;\n    }\n\n    exports.default = _san2.default.defineComponent({\n\n        template: '\\n        <div>\\n            <div class=\"' + cx.getPartClassName() + '\" style=\"{{style}}\" s-transition=\"opacityTrans\"></div>\\n        <div>\\n    ',\n\n        initData: function initData() {\n            return {\n                step: 0,\n                steps: 40,\n                opacity: [0.1, 0],\n                scale: [0, 2],\n                animating: false,\n                color: null\n            };\n        },\n        opacityTrans: function opacityTrans() {\n            var _this = this;\n\n            return {\n                enter: function enter(el, done) {\n                    var opacity = _this.data.get('opacity');\n                    var scale = _this.data.get('scale');\n                    var step = _this.data.get('step');\n                    var steps = _this.data.get('steps');\n                    var top = _this.data.get('top');\n                    var left = _this.data.get('left');\n                    var width = _this.data.get('width');\n                    var height = _this.data.get('height');\n                    var color = _this.data.get('color');\n                    var radius = Math.max(width, height);\n\n                    el.style.top = top - radius + 'px';\n                    el.style.left = left - radius + 'px';\n                    el.style.width = radius * 2 + 'px';\n                    el.style.height = radius * 2 + 'px';\n                    el.style.backgroundColor = color;\n\n                    var goStep = function goStep() {\n                        if (step >= steps) {\n                            _this.fire('animate-end');\n                            done();\n                            return;\n                        }\n\n                        var progress = step++ / steps;\n                        var curOpacity = getTimingValue(opacity, progress);\n                        var curScale = getTimingValue(scale, progress);\n                        el.style.opacity = curOpacity;\n                        el.style.transform = 'scale(' + curScale + ', ' + curScale + ')';\n                        _this.requestAnimationId = (0, _help.requestAnimationFrame)(goStep);\n                    };\n\n                    _this.fire('animate-start');\n                    goStep();\n                }\n            };\n        },\n        stopAnimation: function stopAnimation() {\n            if (this.requestAnimationId) {\n                (0, _help.cancelAnimationFrame)(this.requestAnimationId);\n            }\n        },\n        detached: function detached() {\n            this.stopAnimation();\n        },\n        disposed: function disposed() {\n            this.requestAnimationId = null;\n        }\n    });\n});\n//# sourceMappingURL=Ripple.js.map\n","(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(['exports', './TouchRipple', './CenterRipple', './FocusRipple', '../babelHelpers'], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports, require('./TouchRipple'), require('./CenterRipple'), require('./FocusRipple'), require('../babelHelpers'));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports, global.TouchRipple, global.CenterRipple, global.FocusRipple, global.babelHelpers);\n    global.index = mod.exports;\n  }\n})(this, function (exports, _TouchRipple, _CenterRipple, _FocusRipple, babelHelpers) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.FocusRipple = exports.TouchRipple = exports.CenterRipple = undefined;\n\n  var _TouchRipple2 = babelHelpers.interopRequireDefault(_TouchRipple);\n\n  var _CenterRipple2 = babelHelpers.interopRequireDefault(_CenterRipple);\n\n  var _FocusRipple2 = babelHelpers.interopRequireDefault(_FocusRipple);\n\n  exports.CenterRipple = _CenterRipple2.default;\n  exports.TouchRipple = _TouchRipple2.default;\n  exports.FocusRipple = _FocusRipple2.default;\n});\n//# sourceMappingURL=index.js.map\n","(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(['exports', './Icon', '../babelHelpers'], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports, require('./Icon'), require('../babelHelpers'));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports, global.Icon, global.babelHelpers);\n    global.index = mod.exports;\n  }\n})(this, function (exports, _Icon, babelHelpers) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _Icon2 = babelHelpers.interopRequireDefault(_Icon);\n\n  exports.default = _Icon2.default;\n});\n//# sourceMappingURL=index.js.map\n","(function (global, factory) {\n    if (typeof define === \"function\" && define.amd) {\n        define(['exports', 'san', '../babelHelpers'], factory);\n    } else if (typeof exports !== \"undefined\") {\n        factory(exports, require('san'), require('../babelHelpers'));\n    } else {\n        var mod = {\n            exports: {}\n        };\n        factory(mod.exports, global.san, global.babelHelpers);\n        global.THead = mod.exports;\n    }\n})(this, function (exports, _san, babelHelpers) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n\n    var _san2 = babelHelpers.interopRequireDefault(_san);\n\n    var THead = function (_san$Component) {\n        babelHelpers.inherits(THead, _san$Component);\n\n        function THead() {\n            babelHelpers.classCallCheck(this, THead);\n            return babelHelpers.possibleConstructorReturn(this, (THead.__proto__ || Object.getPrototypeOf(THead)).apply(this, arguments));\n        }\n\n        babelHelpers.createClass(THead, [{\n            key: 'inited',\n            value: function inited() {\n                this.dispatch('UI:thead-inited');\n            }\n        }, {\n            key: 'disposed',\n            value: function disposed() {\n                this.tr = null;\n            }\n        }, {\n            key: 'updateSelectedState',\n            value: function updateSelectedState(type) {\n                if (!this.tr) {\n                    return;\n                }\n                switch (type) {\n                    case 'all':\n                        this.tr.data.set('selected', true);\n                        this.tr.data.set('indeterminate', false);\n                        break;\n                    case 'indeterminate':\n                        this.tr.data.set('selected', false);\n                        this.tr.data.set('indeterminate', true);\n                        break;\n                    case 'none':\n                        this.tr.data.set('selected', false);\n                        this.tr.data.set('indeterminate', false);\n                        break;\n                }\n            }\n        }]);\n        return THead;\n    }(_san2.default.Component);\n\n    THead.template = '\\n        <thead><slot></slot></thead>\\n    ';\n    THead.messages = {\n        'UI:tr-inited': function UITrInited(e) {\n            var tr = e.target;\n            tr.data.set('pos', 'thead');\n            tr.data.set('tableSelectable', this.data.get('tableSelectable'));\n            this.tr = tr;\n        }\n    };\n    exports.default = THead;\n});\n//# sourceMappingURL=THead.js.map\n","(function (global, factory) {\n    if (typeof define === \"function\" && define.amd) {\n        define(['exports', 'san', '../common/util/cx', '../babelHelpers'], factory);\n    } else if (typeof exports !== \"undefined\") {\n        factory(exports, require('san'), require('../common/util/cx'), require('../babelHelpers'));\n    } else {\n        var mod = {\n            exports: {}\n        };\n        factory(mod.exports, global.san, global.cx, global.babelHelpers);\n        global.Table = mod.exports;\n    }\n})(this, function (exports, _san, _cx, babelHelpers) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n\n    var _san2 = babelHelpers.interopRequireDefault(_san);\n\n    var cx = (0, _cx.create)('table');\n\n    var Table = function (_san$Component) {\n        babelHelpers.inherits(Table, _san$Component);\n\n        function Table() {\n            babelHelpers.classCallCheck(this, Table);\n            return babelHelpers.possibleConstructorReturn(this, (Table.__proto__ || Object.getPrototypeOf(Table)).apply(this, arguments));\n        }\n\n        babelHelpers.createClass(Table, [{\n            key: 'initData',\n            value: function initData() {\n                return {\n                    selectable: false,\n                    data: []\n                };\n            }\n        }, {\n            key: 'attached',\n            value: function attached() {\n                var _this2 = this;\n\n                var _data$get = this.data.get(),\n                    selectable = _data$get.selectable,\n                    data = _data$get.data;\n\n                if (!selectable) {\n                    return;\n                }\n\n                if (this.thead && data) {\n                    var type = this.checkTHeadState(data);\n                    this.thead.updateSelectedState(type);\n                }\n\n                this.watch('data', function (val) {\n                    var type = _this2.checkTHeadState(val);\n                    _this2.thead.updateSelectedState(type);\n                });\n            }\n        }, {\n            key: 'checkTHeadState',\n            value: function checkTHeadState(val) {\n                var total = val.filter(function (item) {\n                    return !item.disabled;\n                });\n                var selected = val.filter(function (item) {\n                    return !item.disabled && item.selected;\n                });\n                var type = void 0;\n                if (selected.length === 0) {\n                    type = 'none';\n                } else if (selected.length === total.length) {\n                    type = 'all';\n                } else {\n                    type = 'indeterminate';\n                }\n\n                return type;\n            }\n        }, {\n            key: 'disposed',\n            value: function disposed() {\n                this.tbody = this.thead = this.tfoot = null;\n            }\n        }]);\n        return Table;\n    }(_san2.default.Component);\n\n    Table.template = '\\n        <table class=\"{{className}}\">\\n            <slot name=\"header\"></slot>\\n            <slot></slot>\\n            <slot name=\"footer\"></slot>\\n        </table>\\n    ';\n    Table.messages = {\n        'UI:tbody-inited': function UITbodyInited(e) {\n            this.tbody = e.target;\n            e.target.data.set('tableSelectable', this.data.get('selectable'));\n        },\n        'UI:thead-inited': function UITheadInited(e) {\n            this.thead = e.target;\n            e.target.data.set('tableSelectable', this.data.get('selectable'));\n        },\n        'UI:table-select-head': function UITableSelectHead(e) {\n            var selected = [];\n            var selectAll = e.value;\n            this.tbody.eachItem(function (tr, index) {\n                var trDisabled = tr.data.get('disabled');\n                if (!trDisabled) {\n                    tr.data.set('selected', selectAll);\n                    if (selectAll) {\n                        selected.push(index);\n                    }\n                } else {\n                    var trSelected = tr.data.get('selected');\n                    if (trSelected) {\n                        selected.push(index);\n                    }\n                }\n            });\n\n            this.fire('select', selected);\n        },\n        'UI:table-select-body': function UITableSelectBody(e) {\n            this.fire('select', e.value);\n        }\n    };\n    Table.computed = {\n        className: function className() {\n            return cx(this).build();\n        }\n    };\n    Table.dataTypes = {\n        data: _san.DataTypes.array,\n        selectable: _san.DataTypes.oneOf([false, 'multi', 'single'])\n    };\n    exports.default = Table;\n});\n//# sourceMappingURL=Table.js.map\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","var scope = (typeof global !== \"undefined\" && global) ||\n            (typeof self !== \"undefined\" && self) ||\n            window;\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(scope, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\nrequire(\"setimmediate\");\n// On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n","module.exports = \"\\n<div class=\\\"container\\\">\\n  <div class=\\\"control\\\">\\n    <button on-click=\\\"handleAdd\\\">添加</button>\\n  </div>\\n  <sm-table>\\n    <sm-thead slot=\\\"header\\\">\\n      <sm-tr>\\n        <sm-th tooltip=\\\"姓名\\\">姓名</sm-th>\\n        <sm-th tooltip=\\\"审核状态\\\">审核状态</sm-th>\\n        <sm-th tooltip=\\\"操作\\\">操作</sm-th>\\n    </sm-tr>\\n  </sm-thead>\\n  <sm-tbody>\\n      <sm-tr san-for=\\\"item in lists\\\">\\n        <sm-td>{{item.name}}</sm-td>\\n        <sm-td s-if=\\\"item.status\\\">{{item.state}}</sm-td>\\n        <sm-td s-else>待审核</sm-td>\\n        <sm-td>\\n          <button s-if=\\\"item.status\\\" on-click=\\\"handleClick\\\" data-id=\\\"{{item.id}}\\\">删除</button>\\n          <button s-else on-click=\\\"handleClick\\\" data-id=\\\"{{item.id}}\\\">审核</button>\\n        </sm-td>\\n      </sm-tr>\\n    </sm-tbody>\\n  </sm-table>\\n</div>\\n\";","module.exports = __webpack_public_path__ + \"a37b0c01c0baf1888ca812cc0508f6e2.ttf\";","module.exports = __webpack_public_path__ + \"012cf6a10129e2275d79d6adac7f3b02.woff\";","module.exports = __webpack_public_path__ + \"570eb83859dc23dd0eec423a49e147fe.woff2\";","module.exports = __webpack_public_path__ + \"e79bfd88537def476913f3ed52f4f4b3.eot\";","module.exports = function escape(url) {\n    if (typeof url !== 'string') {\n        return url\n    }\n    // If url is already wrapped in quotes, remove them\n    if (/^['\"].*['\"]$/.test(url)) {\n        url = url.slice(1, -1);\n    }\n    // Should url be wrapped?\n    // See https://drafts.csswg.org/css-values-3/#urls\n    if (/[\"'() \\t\\n]/.test(url)) {\n        return '\"' + url.replace(/\"/g, '\\\\\"').replace(/\\n/g, '\\\\n') + '\"'\n    }\n\n    return url\n}\n","var escape = require(\"../../../css-loader/lib/url/escape.js\");\nexports = module.exports = require(\"../../../css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".sm-checkbox {\\n  position: relative;\\n  display: inline-block;\\n  height: 24px;\\n  line-height: 24px;\\n  cursor: pointer;\\n  user-select: none;\\n}\\n.sm-checkbox input[type=\\\"checkbox\\\"] {\\n  display: none;\\n}\\n.sm-checkbox input[type=\\\"checkbox\\\"]:checked ~ .sm-checkbox-wrapper .sm-checkbox-icon-uncheck,\\n.sm-checkbox input[type=\\\"checkbox\\\"]:indeterminate ~ .sm-checkbox-wrapper .sm-checkbox-icon-uncheck {\\n  opacity: 0;\\n  transition: opacity 650ms cubic-bezier(0.23, 1, 0.32, 1) 150ms;\\n  color: #03a9f4;\\n}\\n.sm-checkbox input[type=\\\"checkbox\\\"]:checked ~ .sm-checkbox-wrapper .sm-checkbox-ripple-wrapper .sm-ripple,\\n.sm-checkbox input[type=\\\"checkbox\\\"]:indeterminate ~ .sm-checkbox-wrapper .sm-checkbox-ripple-wrapper .sm-ripple {\\n  background-color: #03a9f4;\\n}\\n.sm-checkbox input[type=\\\"checkbox\\\"]:checked:not(:indeterminate) ~ .sm-checkbox-wrapper .sm-checkbox-icon-checked {\\n  opacity: 1;\\n  transform: scale(1);\\n  transition: opacity 0ms cubic-bezier(0.23, 1, 0.32, 1), transform 800ms cubic-bezier(0.23, 1, 0.32, 1);\\n}\\n.sm-checkbox input[type=\\\"checkbox\\\"]:checked:not(:indeterminate) ~ .sm-checkbox-wrapper .sm-checkbox-icon-indeterminate {\\n  opacity: 0;\\n  transition: opacity 650ms cubic-bezier(0.23, 1, 0.32, 1) 150ms;\\n  color: #03a9f4;\\n}\\n.sm-checkbox input[type=\\\"checkbox\\\"]:indeterminate ~ .sm-checkbox-wrapper .sm-checkbox-icon-indeterminate {\\n  opacity: 1;\\n  transform: scale(1);\\n  transition: opacity 0ms cubic-bezier(0.23, 1, 0.32, 1), transform 800ms cubic-bezier(0.23, 1, 0.32, 1);\\n}\\n.sm-checkbox input[type=\\\"checkbox\\\"]:indeterminate ~ .sm-checkbox-wrapper .sm-checkbox-icon-checked {\\n  opacity: 0;\\n  transition: opacity 650ms cubic-bezier(0.23, 1, 0.32, 1) 150ms;\\n  color: #03a9f4;\\n}\\n.sm-checkbox * {\\n  pointer-events: none;\\n}\\n.sm-checkbox.disabled {\\n  cursor: not-allowed;\\n}\\n.sm-checkbox-wrapper {\\n  display: flex;\\n  width: 100%;\\n  height: 24px;\\n  align-items: center;\\n  justify-content: space-between;\\n}\\n.sm-checkbox-icon {\\n  width: 24px;\\n  height: 24px;\\n  vertical-align: middle;\\n  position: relative;\\n  margin-right: 16px;\\n}\\n.sm-checkbox.label-left .sm-checkbox-icon {\\n  margin-right: 0;\\n  margin-left: 16px;\\n}\\n.sm-checkbox.no-label .sm-checkbox-icon {\\n  margin-left: 0;\\n  margin-right: 0;\\n}\\n.sm-checkbox-label {\\n  color: rgba(0,0,0,0.87);\\n}\\n.sm-checkbox.disabled .sm-checkbox-label {\\n  color: rgba(0,0,0,0.38);\\n}\\n.sm-checkbox-svg-icon {\\n  display: inline-block;\\n  fill: currentColor;\\n  height: 24px;\\n  width: 24px;\\n  user-select: none;\\n}\\n.sm-checkbox-icon-uncheck {\\n  position: absolute;\\n  left: 0;\\n  top: 0;\\n  opacity: 1;\\n  transition: opacity 1s cubic-bezier(0.23, 1, 0.32, 1) 0.2s;\\n  color: rgba(0,0,0,0.87);\\n}\\n.sm-checkbox.disabled .sm-checkbox-icon-uncheck {\\n  color: rgba(0,0,0,0.38);\\n}\\n.sm-checkbox-icon-checked,\\n.sm-checkbox-icon-indeterminate {\\n  position: absolute;\\n  left: 0;\\n  top: 0;\\n  opacity: 0;\\n  color: #03a9f4;\\n  transform: scale(0);\\n  transition: opacity 450ms cubic-bezier(0.23, 1, 0.32, 1), transform 0ms cubic-bezier(0.23, 1, 0.32, 1) 450ms;\\n}\\n.sm-checkbox.disabled .sm-checkbox-icon-checked,\\n.sm-checkbox.disabled .sm-checkbox-icon-indeterminate {\\n  color: rgba(0,0,0,0.38);\\n}\\n.sm-checkbox .sm-checkbox-ripple-wrapper {\\n  width: 48px;\\n  height: 48px;\\n  top: -12px;\\n  left: -12px;\\n}\\n.sm-checkbox.label-left .sm-checkbox .sm-checkbox-ripple-wrapper {\\n  right: -12px;\\n  left: auto;\\n}\\n.sm-center-ripple {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n  overflow: hidden;\\n  border-radius: 50%;\\n}\\n.sm-ripple {\\n  position: absolute;\\n  background-color: rgba(0,0,0,0.87);\\n  transform-origin: center center;\\n  border-radius: 100em;\\n}\\n@font-face {\\n  font-family: 'Material Icons';\\n  font-style: normal;\\n  font-weight: 400;\\n  src: url(\" + escape(require(\"../common/font/MaterialIcons-Regular.eot\")) + \"); /* For IE6-8 */\\n  src: local('Material Icons'), local('../common/font/MaterialIcons-Regular'), url(\" + escape(require(\"../common/font/MaterialIcons-Regular.woff2\")) + \") format('woff2'), url(\" + escape(require(\"../common/font/MaterialIcons-Regular.woff\")) + \") format('woff'), url(\" + escape(require(\"../common/font/MaterialIcons-Regular.ttf\")) + \") format('truetype');\\n}\\n.sm-icon {\\n  font-family: 'Material Icons';\\n  font-weight: normal;\\n  font-style: normal;\\n  font-size: 24px; /* Preferred icon size */\\n  display: inline-block;\\n  line-height: 1;\\n  text-transform: none;\\n  letter-spacing: normal;\\n  word-wrap: normal;\\n  white-space: nowrap;\\n  direction: ltr;\\n/* Support for all WebKit browsers. */\\n  -webkit-font-smoothing: antialiased;\\n/* Support for Safari and Chrome. */\\n  text-rendering: optimizeLegibility;\\n/* Support for Firefox. */\\n  -moz-osx-font-smoothing: grayscale;\\n/* Support for IE. */\\n  font-feature-settings: 'liga';\\n}\\n.sm-radio {\\n  position: relative;\\n  display: inline-block;\\n  height: 24px;\\n  line-height: 24px;\\n  cursor: pointer;\\n  user-select: none;\\n}\\n.sm-radio input[type=\\\"radio\\\"] {\\n  display: none;\\n}\\n.sm-radio input[type=\\\"radio\\\"]:checked ~ .sm-radio-wrapper .sm-radio-icon-uncheck {\\n  opacity: 0;\\n  transform: scale(0);\\n  color: #03a9f4;\\n}\\n.sm-radio input[type=\\\"radio\\\"]:checked ~ .sm-radio-wrapper .sm-radio-icon-checked {\\n  opacity: 1;\\n  transform: scale(1);\\n}\\n.sm-radio input[type=\\\"radio\\\"]:checked ~ .sm-radio-wrapper .sm-radio-ripple-wrapper .sm-ripple {\\n  background-color: #03a9f4;\\n}\\n.sm-radio * {\\n  pointer-events: none;\\n}\\n.sm-radio.disabled {\\n  cursor: not-allowed;\\n}\\n.sm-radio-wrapper {\\n  display: flex;\\n  width: 100%;\\n  height: 24px;\\n  align-items: center;\\n  justify-content: space-between;\\n}\\n.sm-radio-icon {\\n  width: 24px;\\n  height: 24px;\\n  vertical-align: middle;\\n  position: relative;\\n  margin-right: 16px;\\n}\\n.sm-radio.label-left .sm-radio-icon {\\n  margin-right: 0;\\n  margin-left: 16px;\\n}\\n.sm-radio.no-label .sm-radio-icon {\\n  margin-left: 0;\\n  margin-right: 0;\\n}\\n.sm-radio-label {\\n  color: rgba(0,0,0,0.87);\\n  flex: 1;\\n  font-size: 16px;\\n}\\n.sm-radio.disabled .sm-radio-label {\\n  color: rgba(0,0,0,0.38);\\n}\\n.sm-radio-svg-icon {\\n  display: inline-block;\\n  fill: currentColor;\\n  height: 24px;\\n  width: 24px;\\n  user-select: none;\\n}\\n.sm-radio-icon-uncheck {\\n  position: absolute;\\n  left: 0;\\n  top: 0;\\n  opacity: 1;\\n  transition: all 450ms cubic-bezier(0.23, 1, 0.32, 1);\\n  color: rgba(0,0,0,0.87);\\n}\\n.sm-radio.disabled .sm-radio-icon-uncheck {\\n  color: rgba(0,0,0,0.38);\\n}\\n.sm-radio-icon-checked {\\n  position: absolute;\\n  left: 0;\\n  top: 0;\\n  opacity: 0;\\n  color: #03a9f4;\\n  transform: scale(0);\\n  transition: all 450ms cubic-bezier(0.23, 1, 0.32, 1);\\n}\\n.sm-radio.disabled .sm-radio-icon-checked {\\n  color: rgba(0,0,0,0.38);\\n}\\n.sm-radio .sm-radio-ripple-wrapper {\\n  width: 48px;\\n  height: 48px;\\n  top: -12px;\\n  left: -12px;\\n}\\n.sm-radio.label-left .sm-radio .sm-radio-ripple-wrapper {\\n  right: -12px;\\n  left: auto;\\n}\\n.sm-table {\\n  background: #fff;\\n  width: 100%;\\n  border-collapse: collapse;\\n  border-spacing: 0;\\n  table-layout: fixed;\\n}\\n.sm-table thead {\\n  border-bottom: 1px solid rgba(0,0,0,0.12);\\n}\\n.sm-table th {\\n  padding: 0 12px;\\n  text-align: left;\\n  font-weight: normal;\\n  font-size: 12px;\\n  height: 56px;\\n  line-height: 56px;\\n  color: rgba(0,0,0,0.54);\\n}\\n.sm-table tr {\\n  border-bottom: 1px solid rgba(0,0,0,0.12);\\n}\\n.sm-table td {\\n  padding: 0 12px;\\n  height: 48px;\\n  text-align: left;\\n  font-size: 13px;\\n  white-space: nowrap;\\n  color: rgba(0,0,0,0.87);\\n}\\n.sm-table .sm-table-row-selected {\\n  background: #f5f5f5;\\n}\\n.sm-table .sm-table-col-select {\\n  width: 2rem;\\n  text-align: center;\\n  padding: 0 10px;\\n}\\n.sm-table .sm-table-col-select >.sm-checkbox,\\n.sm-table .sm-table-col-select >.sm-radio {\\n  vertical-align: middle;\\n}\\n.sm-table-hoverable tbody tr:hover {\\n  background: #eee;\\n}\\n\", \"\"]);\n\n// exports\n","\nvar content = require(\"!!../../../css-loader/index.js!../../../stylus-loader/index.js!./Table.styl\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../css-loader/index.js!../../../stylus-loader/index.js!./Table.styl\", function() {\n\t\tvar newContent = require(\"!!../../../css-loader/index.js!../../../stylus-loader/index.js!./Table.styl\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","(function (global, factory) {\n    if (typeof define === \"function\" && define.amd) {\n        define(['exports', 'san', './Table', './THead', './TBody', './TR', './TD', './TH', '../babelHelpers'], factory);\n    } else if (typeof exports !== \"undefined\") {\n        factory(exports, require('san'), require('./Table'), require('./THead'), require('./TBody'), require('./TR'), require('./TD'), require('./TH'), require('../babelHelpers'));\n    } else {\n        var mod = {\n            exports: {}\n        };\n        factory(mod.exports, global.san, global.Table, global.THead, global.TBody, global.TR, global.TD, global.TH, global.babelHelpers);\n        global.ConfigurableTable = mod.exports;\n    }\n})(this, function (exports, _san, _Table2, _THead, _TBody, _TR, _TD, _TH, babelHelpers) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n\n    var _Table3 = babelHelpers.interopRequireDefault(_Table2);\n\n    var _THead2 = babelHelpers.interopRequireDefault(_THead);\n\n    var _TBody2 = babelHelpers.interopRequireDefault(_TBody);\n\n    var _TR2 = babelHelpers.interopRequireDefault(_TR);\n\n    var _TD2 = babelHelpers.interopRequireDefault(_TD);\n\n    var _TH2 = babelHelpers.interopRequireDefault(_TH);\n\n    var ConfigurableTable = function (_Table) {\n        babelHelpers.inherits(ConfigurableTable, _Table);\n\n        function ConfigurableTable() {\n            babelHelpers.classCallCheck(this, ConfigurableTable);\n            return babelHelpers.possibleConstructorReturn(this, (ConfigurableTable.__proto__ || Object.getPrototypeOf(ConfigurableTable)).apply(this, arguments));\n        }\n\n        return ConfigurableTable;\n    }(_Table3.default);\n\n    ConfigurableTable.components = {\n        'ui-tr': _TR2.default,\n        'ui-th': _TH2.default,\n        'ui-td': _TD2.default,\n        'ui-tbody': _TBody2.default,\n        'ui-thead': _THead2.default\n    };\n    ConfigurableTable.messages = _Table3.default.messages;\n    ConfigurableTable.filters = {\n        renderField: function renderField(field, item) {\n            if (typeof field.content === 'function') {\n                return field.content.call(this, item);\n            } else if (field.prop) {\n                return item[field.prop];\n            }\n\n            return '';\n        }\n    };\n    ConfigurableTable.template = '\\n        <table class=\"{{className}}\">\\n            <ui-thead>\\n                <ui-tr>\\n                    <ui-td san-for=\"field in fields\">{{field.title}}</ui-td>\\n                </ui-tr>\\n            </ui-thead>\\n            <ui-tbody>\\n                <ui-tr san-for=\"item in data\" selected=\"{=item.selected=}\" disabled=\"{{item.disabled}}\">\\n                    <ui-td san-for=\"field in fields\">{{field | renderField(item)}}</ui-td>\\n                </ui-tr>\\n            </ui-tbody>\\n        </table>\\n    ';\n    ConfigurableTable.dataTypes = babelHelpers.extends({}, _Table3.default.dataTypes, {\n        fields: _san.DataTypes.arrayOf(_san.DataTypes.shape({\n            prop: _san.DataTypes.string,\n            title: _san.DataTypes.string,\n            content: _san.DataTypes.func\n        })),\n        data: _san.DataTypes.array\n    });\n    exports.default = ConfigurableTable;\n});\n//# sourceMappingURL=ConfigurableTable.js.map\n","(function (global, factory) {\n    if (typeof define === \"function\" && define.amd) {\n        define(['exports', 'san', '../Icon/index', '../Ripple/index', 'classnames', '../babelHelpers'], factory);\n    } else if (typeof exports !== \"undefined\") {\n        factory(exports, require('san'), require('../Icon/index'), require('../Ripple/index'), require('classnames'), require('../babelHelpers'));\n    } else {\n        var mod = {\n            exports: {}\n        };\n        factory(mod.exports, global.san, global.index, global.index, global.classnames, global.babelHelpers);\n        global.Radio = mod.exports;\n    }\n})(this, function (exports, _san, _index, _index3, _classnames, babelHelpers) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n\n    var _san2 = babelHelpers.interopRequireDefault(_san);\n\n    var _index2 = babelHelpers.interopRequireDefault(_index);\n\n    var _classnames2 = babelHelpers.interopRequireDefault(_classnames);\n\n    exports.default = _san2.default.defineComponent({\n        template: '\\n        <label class=\"{{mainClass}}\" on-click=\"handleClick($event)\">\\n            <input type=\"radio\"\\n                disabled=\"{{disabled}}\"\\n                name=\"{{name}}\"\\n                value=\"{{value}}\"\\n                on-change=\"handleChange($event)\"\\n                checked=\"{= checked =}\">\\n            <div class=\"sm-radio-wrapper\">\\n                <div class=\"sm-radio-label {{labelClass}}\" san-if=\"label && labelLeft\">{{label}}</div>\\n                <div class=\"sm-radio-icon\">\\n                    <sm-center-ripple class=\"sm-radio-ripple-wrapper\" san-ref=\"ripple\"></sm-center-ripple>\\n                    <svg\\n                        class=\"sm-radio-icon-uncheck sm-radio-svg-icon {{iconClass}}\"\\n                        san-if=\"!checkedIcon\"\\n                        viewBox=\"0 0 24 24\">\\n                        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"/>\\n                    </svg>\\n                    <svg\\n                        class=\"sm-radio-icon-checked sm-radio-svg-icon {{iconClass}}\"\\n                        san-if=\"!uncheckIcon\"\\n                        viewBox=\"0 0 24 24\">\\n                        <path d=\"M12 7c-2.76 0-5 2.24-5 5s2.24 5 5 5 5-2.24 5-5-2.24-5-5-5zm0-5C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"/>\\n                    </svg>\\n                    <sm-icon san-if=\"uncheckIcon\" class=\"sm-radio-icon-uncheck {{iconClass}}\">{{uncheckIcon}}</sm-icon>\\n                    <sm-icon san-if=\"checkedIcon\" class=\"sm-radio-icon-checked {{iconClass}}\">{{checkedIcon}}</sm-icon>\\n                </div>\\n                <div class=\"sm-radio-label {{labelClass}}\" san-if=\"label && !labelLeft\">{{label}}</div>\\n            </div>\\n        </label>\\n    ',\n\n        components: {\n            'sm-icon': _index2.default,\n            'sm-center-ripple': _index3.CenterRipple\n        },\n        computed: {\n            mainClass: function mainClass() {\n                return (0, _classnames2.default)('sm-radio', {\n                    'label-left': this.data.get('labelLeft'),\n                    'disabled': this.data.get('disabled'),\n                    'no-label': !this.data.get('label')\n                });\n            }\n        },\n        initData: function initData() {\n            return {\n                name: '',\n                value: '',\n                label: '',\n                labelLeft: false,\n                labelClass: '',\n                uncheckIcon: '',\n                checkedIcon: '',\n                iconClass: '',\n                checked: ''\n            };\n        },\n\n        dataTypes: {\n            name: _san.DataTypes.string,\n            value: _san.DataTypes.string,\n            label: _san.DataTypes.string,\n            labelLeft: _san.DataTypes.bool,\n            labelClass: _san.DataTypes.string,\n            uncheckIcon: _san.DataTypes.string,\n            checkedIcon: _san.DataTypes.string,\n            iconClass: _san.DataTypes.string,\n            checked: _san.DataTypes.string\n        },\n        handleClick: function handleClick(e) {\n            if (this.data.get('disabled')) {\n                return;\n            }\n\n            if (e.target.tagName === 'INPUT') {\n                return;\n            }\n            this.ref('ripple').click();\n        },\n        handleTouchStart: function handleTouchStart(event) {},\n        handleTouchEnd: function handleTouchEnd() {},\n        handleChange: function handleChange(e) {\n            this.fire('change', e);\n        },\n        attached: function attached() {\n            var _this = this;\n\n            this.watch('checked', function (val) {\n                _this.fire('input-change', val);\n            });\n        }\n    });\n});\n//# sourceMappingURL=Radio.js.map\n","(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(['exports', './Radio', '../babelHelpers'], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports, require('./Radio'), require('../babelHelpers'));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports, global.Radio, global.babelHelpers);\n    global.index = mod.exports;\n  }\n})(this, function (exports, _Radio, babelHelpers) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _Radio2 = babelHelpers.interopRequireDefault(_Radio);\n\n  exports.default = _Radio2.default;\n});\n//# sourceMappingURL=index.js.map\n","(function (global, factory) {\n    if (typeof define === \"function\" && define.amd) {\n        define(['exports', 'san', '../common/util/cx', '../babelHelpers'], factory);\n    } else if (typeof exports !== \"undefined\") {\n        factory(exports, require('san'), require('../common/util/cx'), require('../babelHelpers'));\n    } else {\n        var mod = {\n            exports: {}\n        };\n        factory(mod.exports, global.san, global.cx, global.babelHelpers);\n        global.FocusRipple = mod.exports;\n    }\n})(this, function (exports, _san, _cx, babelHelpers) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n\n    var _san2 = babelHelpers.interopRequireDefault(_san);\n\n    var cx = (0, _cx.create)('focus-ripple');\n\n    exports.default = _san2.default.defineComponent({\n\n        template: '\\n        <div class=\"{{styleClass}}\">\\n            <div class=\"' + cx.getPartClassName('circle') + '\" style=\"{{circleStyle}}\"></div>\\n        </div>\\n    ',\n\n        computed: {\n            circleStyle: function circleStyle() {\n                return {\n                    color: this.data.get('color'),\n                    opacity: this.data.get('opacity')\n                };\n            },\n            styleClass: function styleClass() {\n                return cx(this).build();\n            }\n        },\n        dataTypes: {\n            color: _san.DataTypes.string,\n            opacity: _san.DataTypes.string\n        }\n    });\n});\n//# sourceMappingURL=FocusRipple.js.map\n","(function (global, factory) {\n    if (typeof define === \"function\" && define.amd) {\n        define(['exports', 'san', './Ripple', '../babelHelpers'], factory);\n    } else if (typeof exports !== \"undefined\") {\n        factory(exports, require('san'), require('./Ripple'), require('../babelHelpers'));\n    } else {\n        var mod = {\n            exports: {}\n        };\n        factory(mod.exports, global.san, global.Ripple, global.babelHelpers);\n        global.CenterRipple = mod.exports;\n    }\n})(this, function (exports, _san, _Ripple, babelHelpers) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n\n    var _san2 = babelHelpers.interopRequireDefault(_san);\n\n    var _Ripple2 = babelHelpers.interopRequireDefault(_Ripple);\n\n    exports.default = _san2.default.defineComponent({\n\n        components: {\n            'san-ripple': _Ripple2.default\n        },\n\n        template: '\\n        <div\\n            class=\"sm-center-ripple\"\\n            on-click=\"click($event)\">\\n            <san-ripple\\n                san-for=\"ripple, index in ripples\"\\n                left=\"{{ripple.x}}\"\\n                top=\"{{ripple.y}}\"\\n                width=\"{{ripple.width}}\"\\n                height=\"{{ripple.height}}\"\\n                color=\"{{color}}\"\\n                on-animate-end=\"onRippleAnimateEnd(index)\" />\\n        </div>\\n    ',\n\n        initData: function initData() {\n            return {\n                ripples: []\n            };\n        },\n\n\n        dataTypes: {\n            color: _san.DataTypes.string\n        },\n\n        click: function click() {\n            var _el$getBoundingClient = this.el.getBoundingClientRect(),\n                width = _el$getBoundingClient.width,\n                height = _el$getBoundingClient.height;\n\n            this.data.push('ripples', {\n                x: width / 2,\n                y: height / 2,\n                width: width,\n                height: height\n            });\n        },\n        onRippleAnimateEnd: function onRippleAnimateEnd(rippleIndex) {\n            this.data.removeAt('ripples', rippleIndex);\n        }\n    });\n});\n//# sourceMappingURL=CenterRipple.js.map\n","(function (global, factory) {\n    if (typeof define === \"function\" && define.amd) {\n        define([\"exports\"], factory);\n    } else if (typeof exports !== \"undefined\") {\n        factory(exports);\n    } else {\n        var mod = {\n            exports: {}\n        };\n        factory(mod.exports);\n        global.help = mod.exports;\n    }\n})(this, function (exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    var requestAnimationFrame = exports.requestAnimationFrame = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || window.msRequestAnimationFrame;\n\n    var cancelAnimationFrame = exports.cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame;\n});\n//# sourceMappingURL=help.js.map\n","(function (global, factory) {\n    if (typeof define === \"function\" && define.amd) {\n        define(['exports', 'san', './Ripple', '../babelHelpers'], factory);\n    } else if (typeof exports !== \"undefined\") {\n        factory(exports, require('san'), require('./Ripple'), require('../babelHelpers'));\n    } else {\n        var mod = {\n            exports: {}\n        };\n        factory(mod.exports, global.san, global.Ripple, global.babelHelpers);\n        global.TouchRipple = mod.exports;\n    }\n})(this, function (exports, _san, _Ripple, babelHelpers) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n\n    var _san2 = babelHelpers.interopRequireDefault(_san);\n\n    var _Ripple2 = babelHelpers.interopRequireDefault(_Ripple);\n\n    exports.default = _san2.default.defineComponent({\n\n        components: {\n            'san-ripple': _Ripple2.default\n        },\n\n        template: '\\n        <div\\n            class=\"sm-touch-ripple\"\\n            on-click=\"click($event)\">\\n            <san-ripple\\n                san-for=\"ripple, index in ripples\"\\n                left=\"{{ripple.x}}\"\\n                top=\"{{ripple.y}}\"\\n                width=\"{{ripple.width}}\"\\n                height=\"{{ripple.height}}\"\\n                color=\"{{color}}\"\\n                on-animate-end=\"onRippleAnimateEnd(index)\" />\\n        </div>\\n    ',\n\n        dataTypes: {\n            color: _san.DataTypes.string\n        },\n\n        initData: function initData() {\n            return {\n                ripples: []\n            };\n        },\n        click: function click(e) {\n            var clientX = e.clientX,\n                clientY = e.clientY;\n\n            var _el$getBoundingClient = this.el.getBoundingClientRect(),\n                top = _el$getBoundingClient.top,\n                left = _el$getBoundingClient.left,\n                width = _el$getBoundingClient.width,\n                height = _el$getBoundingClient.height;\n\n            this.data.push('ripples', {\n                x: clientX - left,\n                y: clientY - top,\n                width: width,\n                height: height\n            });\n        },\n        onRippleAnimateEnd: function onRippleAnimateEnd(rippleIndex) {\n            this.data.removeAt('ripples', rippleIndex);\n        }\n    });\n});\n//# sourceMappingURL=TouchRipple.js.map\n","(function (global, factory) {\n    if (typeof define === \"function\" && define.amd) {\n        define(['exports', 'san', '../babelHelpers'], factory);\n    } else if (typeof exports !== \"undefined\") {\n        factory(exports, require('san'), require('../babelHelpers'));\n    } else {\n        var mod = {\n            exports: {}\n        };\n        factory(mod.exports, global.san, global.babelHelpers);\n        global.Icon = mod.exports;\n    }\n})(this, function (exports, _san, babelHelpers) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n\n    var _san2 = babelHelpers.interopRequireDefault(_san);\n\n    exports.default = _san2.default.defineComponent({\n        template: '\\n        <i class=\"sm-icon\" style=\"{{size ? \\'font-size:\\' + size + \\'px\\' : \\'\\'}}\">\\n            <slot />\\n        </i>\\n    ',\n        initData: function initData() {\n            return {\n                size: 24\n            };\n        },\n\n        dataTypes: {\n            size: _san.DataTypes.oneOfType([_san.DataTypes.string, _san.DataTypes.number])\n        }\n    });\n});\n//# sourceMappingURL=Icon.js.map\n","(function (global, factory) {\n    if (typeof define === \"function\" && define.amd) {\n        define(['exports', 'san', '../Icon/index', '../Ripple/index', 'classnames', '../babelHelpers'], factory);\n    } else if (typeof exports !== \"undefined\") {\n        factory(exports, require('san'), require('../Icon/index'), require('../Ripple/index'), require('classnames'), require('../babelHelpers'));\n    } else {\n        var mod = {\n            exports: {}\n        };\n        factory(mod.exports, global.san, global.index, global.index, global.classnames, global.babelHelpers);\n        global.Checkbox = mod.exports;\n    }\n})(this, function (exports, _san, _index, _index3, _classnames, babelHelpers) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n\n    var _san2 = babelHelpers.interopRequireDefault(_san);\n\n    var _index2 = babelHelpers.interopRequireDefault(_index);\n\n    var _classnames2 = babelHelpers.interopRequireDefault(_classnames);\n\n    var CHECKBOX_DATA_TYPES = {\n        number: 'number',\n        string: 'string'\n    };\n\n    exports.default = _san2.default.defineComponent({\n        template: '\\n        <label\\n            on-click=\"handleClick\"\\n            class=\"{{mainClass}}\">\\n            <input type=\"checkbox\"\\n                disabled=\"{{disabled}}\"\\n                name=\"{{name}}\"\\n                value=\"{{value}}\"\\n                on-change=\"handleChange($event)\"\\n                checked=\"{{realChecked}}\">\\n            <div class=\"sm-checkbox-wrapper\">\\n                <div\\n                    class=\"sm-checkbox-label {{labelClass}}\"\\n                    san-if=\"label && labelLeft\">\\n                    {{label}}\\n                </div>\\n                <div class=\"sm-checkbox-icon\">\\n                    <sm-center-ripple class=\"sm-checkbox-ripple-wrapper\" san-ref=\"ripple\"></sm-center-ripple>\\n                    <svg\\n                        class=\"sm-checkbox-icon-uncheck sm-checkbox-svg-icon {{iconClass}}\"\\n                        san-if=\"!checkedIcon\"\\n                        viewBox=\"0 0 24 24\">\\n                        <path\\n                            d=\"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\" />\\n                    </svg>\\n                    <svg\\n                        class=\"sm-checkbox-icon-checked sm-checkbox-svg-icon {{iconClass}}\"\\n                        san-if=\"!uncheckIcon\"\\n                        viewBox=\"0 0 24 24\">\\n                        <path d=\"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"/>\\n                    </svg>\\n                    <svg\\n                        class=\"sm-checkbox-icon-indeterminate sm-checkbox-svg-icon {{iconClass}}\"\\n                        san-if=\"!checkedIcon && !uncheckIcon\"\\n                        viewBox=\"0 0 24 24\">\\n                        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"/>\\n                    </svg>\\n                    <sm-icon\\n                        san-if=\"uncheckIcon\"\\n                        class=\"sm-checkbox-icon-uncheck {{iconClass}}\">\\n                        {{uncheckIcon}}\\n                    </sm-icon>\\n                    <sm-icon\\n                        san-if=\"indeterminateIcon\"\\n                        class=\"sm-checkbox-icon-indeterminate {{iconClass}}\">\\n                        {{indeterminateIcon}}\\n                    </sm-icon>\\n                    <sm-icon\\n                        san-if=\"checkedIcon\"\\n                        class=\"sm-checkbox-icon-checked {{iconClass}}\">\\n                        {{checkedIcon}}\\n                    </sm-icon>\\n                </div>\\n                <div\\n                    class=\"sm-checkbox-label {{labelClass}}\"\\n                    san-if=\"label && !labelLeft\">{{label}}</div>\\n                </div>\\n        </label>\\n    ',\n\n        components: {\n            'sm-icon': _index2.default,\n            'sm-center-ripple': _index3.CenterRipple\n        },\n        initData: function initData() {\n            return {\n                name: '',\n                value: 'ON',\n                label: '',\n                labelLeft: false,\n                labelClass: '',\n                uncheckIcon: '',\n                checkedIcon: '',\n                indeterminateIcon: 'icon',\n                iconClass: '',\n                checked: [],\n                disabled: false\n            };\n        },\n\n        dataTypes: {\n            name: _san.DataTypes.string,\n            value: _san.DataTypes.oneOfType([_san.DataTypes.string, _san.DataTypes.number]),\n            checked: _san.DataTypes.arrayOf(function (dataValue, key, componentName, dataFullName) {\n                if (!/^string|number$/.test(babelHelpers.typeof(dataValue[key]))) {\n                    throw new Error('Invalid prop `' + dataFullName + '` supplied to' + ' `' + componentName + '`. Validation failed.');\n                }\n            }),\n            label: _san.DataTypes.string,\n            labelLeft: _san.DataTypes.bool,\n            labelClass: _san.DataTypes.string,\n            uncheckIcon: _san.DataTypes.string,\n            checkedIcon: _san.DataTypes.string,\n            indeterminateIcon: _san.DataTypes.string,\n            iconClass: _san.DataTypes.string,\n            disabled: _san.DataTypes.bool\n        },\n        computed: {\n            mainClass: function mainClass() {\n                return (0, _classnames2.default)('sm-checkbox', {\n                    'label-left': this.data.get('labelLeft'),\n                    'disabled': this.data.get('disabled'),\n                    'no-label': !this.data.get('label')\n                });\n            },\n            realChecked: function realChecked() {\n                return this.data.get('checked').map(function (d) {\n                    return d.toString();\n                });\n            }\n        },\n        handleClick: function handleClick(e) {\n            if (this.data.get('disabled')) {\n                return;\n            }\n\n            if (e.target.tagName === 'INPUT') {\n                return;\n            }\n            this.ref('ripple').click();\n        },\n        handleChange: function handleChange(e) {\n            var _this = this;\n\n            var _e$target = e.target,\n                value = _e$target.value,\n                checked = _e$target.checked;\n\n            var inputChecked = this.data.get('checked');\n\n            var inputValue = this.stringToInputValue(value);\n            var index = inputChecked.indexOf(inputValue);\n\n            if (checked && index === -1) {\n                this.data.push('checked', inputValue);\n            }\n            if (!checked && index !== -1) {\n                this.data.removeAt('checked', index);\n            }\n\n            if (this.data.get('canClickToSwitchToIndeterminate')) {\n                setTimeout(function () {\n                    _this.indeterminateIndex = ++[_this.indeterminateIndex |= 0][0] % 3;\n                    _this.data.set('checked', _this.indeterminateIndex !== 0 ? [_this.data.get('value')] : []);\n                    _this.data.set('indeterminate', _this.indeterminateIndex === 1);\n                    _this.fire('change', _this.indeterminateIndex);\n                }, 0);\n\n                return;\n            }\n\n            this.fire('change', e);\n        },\n        checkInputDataType: function checkInputDataType() {\n            var _data$get = this.data.get(),\n                value = _data$get.value,\n                checked = _data$get.checked;\n\n            var valueType = typeof value === 'undefined' ? 'undefined' : babelHelpers.typeof(value);\n            this.valueDataType = valueType;\n\n            if (checked) {\n                checked.forEach(function (d) {\n                    var t = typeof d === 'undefined' ? 'undefined' : babelHelpers.typeof(d);\n                    if (CHECKBOX_DATA_TYPES[t] !== valueType) {\n                        throw new Error('[SAN-MUI ERROR] the data type of element in Array \"checked\" and \"value\"' + ' attribute must be all the same in CHECKBOX component. ' + 'Attribute \"value\" is ' + valueType + ', but \"checked\" Array contains ' + t + '}.');\n                    }\n                });\n            }\n        },\n        stringToInputValue: function stringToInputValue(str) {\n            var number = CHECKBOX_DATA_TYPES.number,\n                string = CHECKBOX_DATA_TYPES.string;\n\n\n            var value = void 0;\n            switch (this.valueDataType) {\n                case number:\n                    value = Number(str);\n                    break;\n                case string:\n                    value = String(str);\n                    break;\n            }\n            return value;\n        },\n        attached: function attached() {\n            var _this2 = this;\n\n            this.checkInputDataType();\n\n            this.watch('checked', function (value) {\n                _this2.checkInputDataType();\n\n                _this2.data.set('indeterminate', false);\n                _this2.fire('input-change', value);\n            });\n\n            var input = null;\n            this.watch('indeterminate', function (value) {\n                input && (input.indeterminate = !!value);\n            });\n\n            if (this.el) {\n                input = this.el.querySelector('input');\n                if (input) {\n                    input.indeterminate = !!this.data.get('indeterminate');\n                    if (!input.checked && !input.indeterminate) {\n                        this.indeterminateIndex = 0;\n                    }\n                    if (input.checked && input.indeterminate) {\n                        this.indeterminateIndex = 1;\n                    }\n                    if (input.checked && !input.indeterminate) {\n                        this.indeterminateIndex = 2;\n                    }\n                }\n            }\n        }\n    });\n});\n//# sourceMappingURL=Checkbox.js.map\n","(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(['exports', './Checkbox', '../babelHelpers'], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports, require('./Checkbox'), require('../babelHelpers'));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports, global.Checkbox, global.babelHelpers);\n    global.index = mod.exports;\n  }\n})(this, function (exports, _Checkbox, babelHelpers) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _Checkbox2 = babelHelpers.interopRequireDefault(_Checkbox);\n\n  exports.default = _Checkbox2.default;\n});\n//# sourceMappingURL=index.js.map\n","(function (global, factory) {\n    if (typeof define === \"function\" && define.amd) {\n        define(['exports', 'san', '../babelHelpers'], factory);\n    } else if (typeof exports !== \"undefined\") {\n        factory(exports, require('san'), require('../babelHelpers'));\n    } else {\n        var mod = {\n            exports: {}\n        };\n        factory(mod.exports, global.san, global.babelHelpers);\n        global.TFoot = mod.exports;\n    }\n})(this, function (exports, _san, babelHelpers) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n\n    var _san2 = babelHelpers.interopRequireDefault(_san);\n\n    var TFoot = function (_san$Component) {\n        babelHelpers.inherits(TFoot, _san$Component);\n\n        function TFoot() {\n            babelHelpers.classCallCheck(this, TFoot);\n            return babelHelpers.possibleConstructorReturn(this, (TFoot.__proto__ || Object.getPrototypeOf(TFoot)).apply(this, arguments));\n        }\n\n        babelHelpers.createClass(TFoot, [{\n            key: 'inited',\n            value: function inited() {\n                this.dispatch('UI:tfoot-inited');\n            }\n        }]);\n        return TFoot;\n    }(_san2.default.Component);\n\n    TFoot.template = '\\n        <tfoot><slot></slot></tfoot>\\n    ';\n    TFoot.messages = {\n        'UI:tr-inited': function UITrInited(e) {\n            var tr = e.target;\n            tr.data.set('pos', 'tfoot');\n            tr.data.set('tableSelectable', this.data.get('tableSelectable'));\n        }\n    };\n    exports.default = TFoot;\n});\n//# sourceMappingURL=TFoot.js.map\n","(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(['exports'], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports);\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports);\n    global.constants = mod.exports;\n  }\n})(this, function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var COMPONENT_CLASSNAME_PREFIX = exports.COMPONENT_CLASSNAME_PREFIX = 'sm';\n});\n//# sourceMappingURL=constants.js.map\n","(function (global, factory) {\n    if (typeof define === \"function\" && define.amd) {\n        define(['exports', './Table', './THead', './TFoot', './TBody', './TR', './TD', './TH', './ConfigurableTable', '../babelHelpers'], factory);\n    } else if (typeof exports !== \"undefined\") {\n        factory(exports, require('./Table'), require('./THead'), require('./TFoot'), require('./TBody'), require('./TR'), require('./TD'), require('./TH'), require('./ConfigurableTable'), require('../babelHelpers'));\n    } else {\n        var mod = {\n            exports: {}\n        };\n        factory(mod.exports, global.Table, global.THead, global.TFoot, global.TBody, global.TR, global.TD, global.TH, global.ConfigurableTable, global.babelHelpers);\n        global.index = mod.exports;\n    }\n})(this, function (exports, _Table, _THead, _TFoot, _TBody, _TR, _TD, _TH, _ConfigurableTable, babelHelpers) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.ConfigurableTable = exports.TH = exports.TD = exports.TR = exports.TBody = exports.TFoot = exports.THead = exports.Table = undefined;\n\n    var _Table2 = babelHelpers.interopRequireDefault(_Table);\n\n    var _THead2 = babelHelpers.interopRequireDefault(_THead);\n\n    var _TFoot2 = babelHelpers.interopRequireDefault(_TFoot);\n\n    var _TBody2 = babelHelpers.interopRequireDefault(_TBody);\n\n    var _TR2 = babelHelpers.interopRequireDefault(_TR);\n\n    var _TD2 = babelHelpers.interopRequireDefault(_TD);\n\n    var _TH2 = babelHelpers.interopRequireDefault(_TH);\n\n    var _ConfigurableTable2 = babelHelpers.interopRequireDefault(_ConfigurableTable);\n\n    exports.Table = _Table2.default;\n    exports.THead = _THead2.default;\n    exports.TFoot = _TFoot2.default;\n    exports.TBody = _TBody2.default;\n    exports.TR = _TR2.default;\n    exports.TD = _TD2.default;\n    exports.TH = _TH2.default;\n    exports.ConfigurableTable = _ConfigurableTable2.default;\n});\n//# sourceMappingURL=index.js.map\n","<template>\n  <div class=\"container\">\n    <div class=\"control\">\n      <button on-click=\"handleAdd\">添加</button>\n    </div>\n    <sm-table>\n      <sm-thead slot=\"header\">\n        <sm-tr>\n          <sm-th tooltip=\"姓名\">姓名</sm-th>\n          <sm-th tooltip=\"审核状态\">审核状态</sm-th>\n          <sm-th tooltip=\"操作\">操作</sm-th>\n      </sm-tr>\n    </sm-thead>\n    <sm-tbody>\n        <sm-tr san-for=\"item in lists\">\n          <sm-td>{{item.name}}</sm-td>\n          <sm-td s-if=\"item.status\">{{item.state}}</sm-td>\n          <sm-td s-else>待审核</sm-td>\n          <sm-td>\n            <button s-if=\"item.status\" on-click=\"handleClick\" data-id=\"{{item.id}}\">删除</button>\n            <button s-else on-click=\"handleClick\" data-id=\"{{item.id}}\">审核</button>\n          </sm-td>\n        </sm-tr>\n      </sm-tbody>\n    </sm-table>\n  </div>\n</template>\n\n<script>\nimport { DataTypes } from 'san'\nimport { Table, THead, TFoot, TBody, TR, TD, TH } from 'san-mui/lib/Table'\nimport 'san-mui/lib/Table/Table.styl'\n\nexport default {\n  components: {\n      'sm-table': Table,\n      'sm-tr': TR,\n      'sm-th': TH,\n      'sm-td': TD,\n      'sm-tbody': TBody,\n      'sm-thead': THead,\n      'sm-tfoot': TFoot,\n  },\n  handleClick: function(e) {\n    let id = Number(e.target.dataset.id)\n    let lists = this.data.get('lists')\n    console.log(lists)\n    console.log(id)\n    // 筛选与删除选中\n    lists = lists.filter(list => {\n      if(list.id === id) {\n        if(!list.status) {\n          list.status = true\n          list.state = '合格'\n        } else {\n          return false\n        }\n      }\n      return true\n    })\n    \n    this.data.set('lists', lists)\n  },\n  handleAdd: function() {\n    console.log('add')\n    this.data.set('total', this.data.get('total') + 1)\n    this.data.push('lists', {\n      id: this.data.get('total'),\n      name: 'Peter',\n      status: true,\n      state: '合格'\n    })\n  },\n  initData() {\n    return {\n      total: 3,\n      lists: [\n        {\n          id: 1,\n          name: '张三',\n          status: true,\n          state: '不合格'\n        },\n        {\n          id: 2,\n          name: '李四',\n          status: false,\n        },\n        {\n          id: 3,\n          name: '王五',\n          status: true,\n          state: '合格'\n        }\n      ]\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n","exports = module.exports = require(\"../node_modules/css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\", \"\", {\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"file\":\"MyApp.san\",\"sourceRoot\":\"\"}]);\n\n// exports\n","\nvar content = require(\"!!../node_modules/css-loader/index.js?sourceMap!../node_modules/san-loader/lib/style-rewriter.js!../node_modules/san-loader/lib/selector.js?type=style&index=0!./MyApp.san\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../node_modules/css-loader/index.js?sourceMap!../node_modules/san-loader/lib/style-rewriter.js!../node_modules/san-loader/lib/selector.js?type=style&index=0!./MyApp.san\", function() {\n\t\tvar newContent = require(\"!!../node_modules/css-loader/index.js?sourceMap!../node_modules/san-loader/lib/style-rewriter.js!../node_modules/san-loader/lib/selector.js?type=style&index=0!./MyApp.san\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","var __san_script__, __san_template__\nvar __san_styles__ = {}\nrequire(\"!!style-loader!css-loader?sourceMap!../node_modules/san-loader/lib/style-rewriter.js!../node_modules/san-loader/lib/selector.js?type=style&index=0!./MyApp.san\")\n__san_script__ = require(\"!!babel-loader!../node_modules/san-loader/lib/selector.js?type=script&index=0!./MyApp.san\")\nif (__san_script__ &&\n    __san_script__.__esModule &&\n    Object.keys(__san_script__).length > 1) {\n  console.warn(\"[san-loader] src/MyApp.san: named exports in *.san files are ignored.\")}\n__san_template__ = require(\"!!html-loader?minimize=false!../node_modules/san-loader/lib/selector.js?type=template&index=0!./MyApp.san\")\nvar __san_proto__ = {}\nif (__san_script__) {\n  __san_proto__ = __san_script__.__esModule\n    ? __san_script__['default']\n    : __san_script__\n}\nif (__san_template__) {\n  __san_proto__.template = __san_template__\n}\nvar san = require(\"san\")\nvar __san_exports__ = san.defineComponent(__san_proto__)\nmodule.exports = __san_exports__\nif (module.exports.__esModule) module.exports = module.exports['default']\nif (!__san_exports__.computed) __san_exports__.computed = {}\nObject.keys(__san_styles__).forEach(function (key) {\nvar module = __san_styles__[key]\n__san_exports__.computed[key] = function () { return module }\n})\n","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n","exports = module.exports = require(\"../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n","\nvar content = require(\"!!../node_modules/css-loader/index.js!./main.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../node_modules/css-loader/index.js!./main.css\", function() {\n\t\tvar newContent = require(\"!!../node_modules/css-loader/index.js!./main.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n","import san from 'san'\n\nimport './main.css'\nimport MyApp from './MyApp'\n\nvar myApp = new MyApp();\nmyApp.attach(document.getElementById('main'));"],"sourceRoot":""}